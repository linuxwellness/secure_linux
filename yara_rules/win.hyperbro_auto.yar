rule win_hyperbro_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.hyperbro."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hyperbro"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7c2424 8b742434 53 e8???????? 85db }
            // n = 5, score = 400
            //   8b7c2424             | mov                 edi, dword ptr [esp + 0x24]
            //   8b742434             | mov                 esi, dword ptr [esp + 0x34]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   85db                 | test                ebx, ebx

        $sequence_1 = { 755a 68ff000000 50 8d4c2441 51 88442444 }
            // n = 6, score = 400
            //   755a                 | jne                 0x5c
            //   68ff000000           | push                0xff
            //   50                   | push                eax
            //   8d4c2441             | lea                 ecx, [esp + 0x41]
            //   51                   | push                ecx
            //   88442444             | mov                 byte ptr [esp + 0x44], al

        $sequence_2 = { 7e3d 53 e8???????? 33c9 }
            // n = 4, score = 400
            //   7e3d                 | jle                 0x3f
            //   53                   | push                ebx
            //   e8????????           |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_3 = { 50 ffd7 c7461400000000 8b4e04 51 c706???????? ffd7 }
            // n = 7, score = 400
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   c7461400000000       | mov                 dword ptr [esi + 0x14], 0
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   51                   | push                ecx
            //   c706????????         |                     
            //   ffd7                 | call                edi

        $sequence_4 = { 53 8b5c2408 56 8bc2 57 8bf9 }
            // n = 6, score = 400
            //   53                   | push                ebx
            //   8b5c2408             | mov                 ebx, dword ptr [esp + 8]
            //   56                   | push                esi
            //   8bc2                 | mov                 eax, edx
            //   57                   | push                edi
            //   8bf9                 | mov                 edi, ecx

        $sequence_5 = { 8b5c2408 7e30 8b06 50 e8???????? }
            // n = 5, score = 400
            //   8b5c2408             | mov                 ebx, dword ptr [esp + 8]
            //   7e30                 | jle                 0x32
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { 6a00 56 57 ff15???????? 6a00 }
            // n = 5, score = 400
            //   6a00                 | push                0
            //   56                   | push                esi
            //   57                   | push                edi
            //   ff15????????         |                     
            //   6a00                 | push                0

        $sequence_7 = { 51 52 57 e8???????? 8b4604 03c7 8918 }
            // n = 7, score = 400
            //   51                   | push                ecx
            //   52                   | push                edx
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   03c7                 | add                 eax, edi
            //   8918                 | mov                 dword ptr [eax], ebx

        $sequence_8 = { 0f94c3 c644242180 23d3 33db }
            // n = 4, score = 400
            //   0f94c3               | sete                bl
            //   c644242180           | mov                 byte ptr [esp + 0x21], 0x80
            //   23d3                 | and                 edx, ebx
            //   33db                 | xor                 ebx, ebx

        $sequence_9 = { e8???????? 84c0 745e 57 }
            // n = 4, score = 400
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   745e                 | je                  0x60
            //   57                   | push                edi

    condition:
        7 of them and filesize < 352256
}
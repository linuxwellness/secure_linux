rule win_jssloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.jssloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jssloader"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f81f 0f8703060000 51 56 e8???????? 83c408 c745d800000000 }
            // n = 7, score = 200
            //   83f81f               | cmp                 eax, 0x1f
            //   0f8703060000         | ja                  0x609
            //   51                   | push                ecx
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0

        $sequence_1 = { 74c7 8b45f8 8bce 83e63f c1f906 6bf638 8b0c8d701d4400 }
            // n = 7, score = 200
            //   74c7                 | je                  0xffffffc9
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8bce                 | mov                 ecx, esi
            //   83e63f               | and                 esi, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bf638               | imul                esi, esi, 0x38
            //   8b0c8d701d4400       | mov                 ecx, dword ptr [ecx*4 + 0x441d70]

        $sequence_2 = { c70600000000 c7460400000000 c7462c00000000 c6463000 e8???????? 6a00 }
            // n = 6, score = 200
            //   c70600000000         | mov                 dword ptr [esi], 0
            //   c7460400000000       | mov                 dword ptr [esi + 4], 0
            //   c7462c00000000       | mov                 dword ptr [esi + 0x2c], 0
            //   c6463000             | mov                 byte ptr [esi + 0x30], 0
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_3 = { 0f4395acfdffff 8bc8 e8???????? ba???????? 8bc8 e8???????? ba???????? }
            // n = 7, score = 200
            //   0f4395acfdffff       | cmovae              edx, dword ptr [ebp - 0x254]
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ba????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ba????????           |                     

        $sequence_4 = { e8???????? 8d4da8 c645fc01 51 8bd0 8d4dd8 e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d4da8               | lea                 ecx, [ebp - 0x58]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   51                   | push                ecx
            //   8bd0                 | mov                 edx, eax
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     

        $sequence_5 = { 660fd645e4 8dbd48fbffff 8975e4 8975e8 c745ec94214400 c645fc32 }
            // n = 6, score = 200
            //   660fd645e4           | movq                qword ptr [ebp - 0x1c], xmm0
            //   8dbd48fbffff         | lea                 edi, [ebp - 0x4b8]
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   8975e8               | mov                 dword ptr [ebp - 0x18], esi
            //   c745ec94214400       | mov                 dword ptr [ebp - 0x14], 0x442194
            //   c645fc32             | mov                 byte ptr [ebp - 4], 0x32

        $sequence_6 = { 8bff 55 8bec a1???????? 3b05???????? 0f85c1fbffff }
            // n = 6, score = 200
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   a1????????           |                     
            //   3b05????????         |                     
            //   0f85c1fbffff         | jne                 0xfffffbc7

        $sequence_7 = { 83c1f4 3b4108 7407 8810 ff4104 eb07 }
            // n = 6, score = 200
            //   83c1f4               | add                 ecx, -0xc
            //   3b4108               | cmp                 eax, dword ptr [ecx + 8]
            //   7407                 | je                  9
            //   8810                 | mov                 byte ptr [eax], dl
            //   ff4104               | inc                 dword ptr [ecx + 4]
            //   eb07                 | jmp                 9

        $sequence_8 = { 0f8749020000 52 51 e8???????? 83c408 8d8d6cfcffff }
            // n = 6, score = 200
            //   0f8749020000         | ja                  0x24f
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8d8d6cfcffff         | lea                 ecx, [ebp - 0x394]

        $sequence_9 = { 8b4804 8d41f8 89840df4feffff 8d8560ffffff c645fc07 50 c78560ffffffe40e4300 }
            // n = 7, score = 200
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8d41f8               | lea                 eax, [ecx - 8]
            //   89840df4feffff       | mov                 dword ptr [ebp + ecx - 0x10c], eax
            //   8d8560ffffff         | lea                 eax, [ebp - 0xa0]
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   50                   | push                eax
            //   c78560ffffffe40e4300     | mov    dword ptr [ebp - 0xa0], 0x430ee4

    condition:
        7 of them and filesize < 581632
}
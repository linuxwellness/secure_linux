rule win_thanatos_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.thanatos_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thanatos_ransom"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3b0d???????? f27502 f2c3 f2e98d020000 55 8bec eb1f }
            // n = 7, score = 100
            //   3b0d????????         |                     
            //   f27502               | bnd jne             5
            //   f2c3                 | bnd ret             
            //   f2e98d020000         | bnd jmp             0x293
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   eb1f                 | jmp                 0x21

        $sequence_1 = { 325c3260 32643278 327c3280 32843288328c32 90 }
            // n = 5, score = 100
            //   325c3260             | xor                 bl, byte ptr [edx + esi + 0x60]
            //   32643278             | xor                 ah, byte ptr [edx + esi + 0x78]
            //   327c3280             | xor                 bh, byte ptr [edx + esi - 0x80]
            //   32843288328c32       | xor                 al, byte ptr [edx + esi + 0x328c3288]
            //   90                   | nop                 

        $sequence_2 = { 46 83fe03 7ced 8b7d0c 33db 8b75e0 8b4ddc }
            // n = 7, score = 100
            //   46                   | inc                 esi
            //   83fe03               | cmp                 esi, 3
            //   7ced                 | jl                  0xffffffef
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   33db                 | xor                 ebx, ebx
            //   8b75e0               | mov                 esi, dword ptr [ebp - 0x20]
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]

        $sequence_3 = { 23c1 83c008 5d c3 8b04c5f49c4200 5d c3 }
            // n = 7, score = 100
            //   23c1                 | and                 eax, ecx
            //   83c008               | add                 eax, 8
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c5f49c4200       | mov                 eax, dword ptr [eax*8 + 0x429cf4]
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_4 = { 51 e8???????? 83c404 8b4568 }
            // n = 4, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4568               | mov                 eax, dword ptr [ebp + 0x68]

        $sequence_5 = { 837d8c10 8d8578ffffff 6a00 0f438578ffffff 6a00 50 68???????? }
            // n = 7, score = 100
            //   837d8c10             | cmp                 dword ptr [ebp - 0x74], 0x10
            //   8d8578ffffff         | lea                 eax, [ebp - 0x88]
            //   6a00                 | push                0
            //   0f438578ffffff       | cmovae              eax, dword ptr [ebp - 0x88]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_6 = { 40 8d4de0 50 ff75e0 e8???????? 8b4df8 }
            // n = 6, score = 100
            //   40                   | inc                 eax
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   50                   | push                eax
            //   ff75e0               | push                dword ptr [ebp - 0x20]
            //   e8????????           |                     
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_7 = { 8b048de0774300 5a 8854382c eb3b 663945fc }
            // n = 5, score = 100
            //   8b048de0774300       | mov                 eax, dword ptr [ecx*4 + 0x4377e0]
            //   5a                   | pop                 edx
            //   8854382c             | mov                 byte ptr [eax + edi + 0x2c], dl
            //   eb3b                 | jmp                 0x3d
            //   663945fc             | cmp                 word ptr [ebp - 4], ax

        $sequence_8 = { 6a00 ff75fc ff15???????? 85c0 7466 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7466                 | je                  0x68

        $sequence_9 = { 6a05 6a00 50 68???????? 6a00 }
            // n = 5, score = 100
            //   6a05                 | push                5
            //   6a00                 | push                0
            //   50                   | push                eax
            //   68????????           |                     
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 516096
}
rule win_rad_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.rad."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rad"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8975f0 c706???????? c745fc00000000 8b4620 50 e8???????? 8d4e04 }
            // n = 7, score = 100
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   c706????????         |                     
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8b4620               | mov                 eax, dword ptr [esi + 0x20]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4e04               | lea                 ecx, [esi + 4]

        $sequence_1 = { 8b7de8 8b443038 8975d8 85c0 7409 8b10 8bc8 }
            // n = 7, score = 100
            //   8b7de8               | mov                 edi, dword ptr [ebp - 0x18]
            //   8b443038             | mov                 eax, dword ptr [eax + esi + 0x38]
            //   8975d8               | mov                 dword ptr [ebp - 0x28], esi
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   8bc8                 | mov                 ecx, eax

        $sequence_2 = { 8bf2 8b4014 8b00 2bf0 8d4dd4 c745e80f000000 897de4 }
            // n = 7, score = 100
            //   8bf2                 | mov                 esi, edx
            //   8b4014               | mov                 eax, dword ptr [eax + 0x14]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   2bf0                 | sub                 esi, eax
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   c745e80f000000       | mov                 dword ptr [ebp - 0x18], 0xf
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi

        $sequence_3 = { 50 e8???????? 8d4f04 c645fc00 ff15???????? 8bce c745fcffffffff }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4f04               | lea                 ecx, [edi + 4]
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   ff15????????         |                     
            //   8bce                 | mov                 ecx, esi
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff

        $sequence_4 = { 8b8b94000000 85c9 7408 8b11 8b02 6a01 ffd0 }
            // n = 7, score = 100
            //   8b8b94000000         | mov                 ecx, dword ptr [ebx + 0x94]
            //   85c9                 | test                ecx, ecx
            //   7408                 | je                  0xa
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   6a01                 | push                1
            //   ffd0                 | call                eax

        $sequence_5 = { 8b7508 e9???????? 8b542408 8d420c 8b4adc 33c8 e8???????? }
            // n = 7, score = 100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   e9????????           |                     
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   8d420c               | lea                 eax, [edx + 0xc]
            //   8b4adc               | mov                 ecx, dword ptr [edx - 0x24]
            //   33c8                 | xor                 ecx, eax
            //   e8????????           |                     

        $sequence_6 = { e8???????? 8bd7 52 c645fc05 e8???????? 8bc8 ff15???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bd7                 | mov                 edx, edi
            //   52                   | push                edx
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   ff15????????         |                     

        $sequence_7 = { 51 8dbe94000000 83c9ff 33db c745fc05000000 e8???????? }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8dbe94000000         | lea                 edi, [esi + 0x94]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33db                 | xor                 ebx, ebx
            //   c745fc05000000       | mov                 dword ptr [ebp - 4], 5
            //   e8????????           |                     

        $sequence_8 = { c706???????? 33db 895dfc c645fc04 e8???????? }
            // n = 5, score = 100
            //   c706????????         |                     
            //   33db                 | xor                 ebx, ebx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   e8????????           |                     

        $sequence_9 = { 8d8c2494000000 c684240806000005 ff15???????? 8b4c2418 51 8d8c2498000000 }
            // n = 6, score = 100
            //   8d8c2494000000       | lea                 ecx, [esp + 0x94]
            //   c684240806000005     | mov                 byte ptr [esp + 0x608], 5
            //   ff15????????         |                     
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   51                   | push                ecx
            //   8d8c2498000000       | lea                 ecx, [esp + 0x98]

    condition:
        7 of them and filesize < 207872
}
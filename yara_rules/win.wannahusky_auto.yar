rule win_wannahusky_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.wannahusky."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wannahusky"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c705????????d11d4100 c705????????60b54100 c605????????01 c705????????20000000 c705????????c0464200 c705????????de1d4100 }
            // n = 6, score = 100
            //   c705????????d11d4100     |     
            //   c705????????60b54100     |     
            //   c605????????01       |                     
            //   c705????????20000000     |     
            //   c705????????c0464200     |     
            //   c705????????de1d4100     |     

        $sequence_1 = { 8b4de0 8d7901 31f9 7909 85ff 7905 }
            // n = 6, score = 100
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   8d7901               | lea                 edi, [ecx + 1]
            //   31f9                 | xor                 ecx, edi
            //   7909                 | jns                 0xb
            //   85ff                 | test                edi, edi
            //   7905                 | jns                 7

        $sequence_2 = { c705????????00000000 c705????????f8b24100 c705????????08000000 c705????????04000000 }
            // n = 4, score = 100
            //   c705????????00000000     |     
            //   c705????????f8b24100     |     
            //   c705????????08000000     |     
            //   c705????????04000000     |     

        $sequence_3 = { c705????????402a4200 c705????????694a4000 c705????????00000000 c705????????01000000 }
            // n = 4, score = 100
            //   c705????????402a4200     |     
            //   c705????????694a4000     |     
            //   c705????????00000000     |     
            //   c705????????01000000     |     

        $sequence_4 = { 8b45d0 3b45c0 7218 8b4dc0 }
            // n = 4, score = 100
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   3b45c0               | cmp                 eax, dword ptr [ebp - 0x40]
            //   7218                 | jb                  0x1a
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]

        $sequence_5 = { c705????????0c1e4100 c705????????f0b54100 c705????????04000000 c705????????04000000 }
            // n = 4, score = 100
            //   c705????????0c1e4100     |     
            //   c705????????f0b54100     |     
            //   c705????????04000000     |     
            //   c705????????04000000     |     

        $sequence_6 = { 83ec28 c745f474d84000 e8???????? e8???????? }
            // n = 4, score = 100
            //   83ec28               | sub                 esp, 0x28
            //   c745f474d84000       | mov                 dword ptr [ebp - 0xc], 0x40d874
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_7 = { 8b00 a3???????? e9???????? c7042401000000 ba???????? 8985ccfaffff }
            // n = 6, score = 100
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   a3????????           |                     
            //   e9????????           |                     
            //   c7042401000000       | mov                 dword ptr [esp], 1
            //   ba????????           |                     
            //   8985ccfaffff         | mov                 dword ptr [ebp - 0x534], eax

        $sequence_8 = { 89582c c74004???????? c74008???????? c7400c94cb4000 c74010ddcb4000 c740144ecc4000 }
            // n = 6, score = 100
            //   89582c               | mov                 dword ptr [eax + 0x2c], ebx
            //   c74004????????       |                     
            //   c74008????????       |                     
            //   c7400c94cb4000       | mov                 dword ptr [eax + 0xc], 0x40cb94
            //   c74010ddcb4000       | mov                 dword ptr [eax + 0x10], 0x40cbdd
            //   c740144ecc4000       | mov                 dword ptr [eax + 0x14], 0x40cc4e

        $sequence_9 = { c705????????b0b14100 c705????????04000000 c705????????04000000 c605????????16 c705????????a02b4200 c705????????8b4b4000 c705????????00000000 }
            // n = 7, score = 100
            //   c705????????b0b14100     |     
            //   c705????????04000000     |     
            //   c705????????04000000     |     
            //   c605????????16       |                     
            //   c705????????a02b4200     |     
            //   c705????????8b4b4000     |     
            //   c705????????00000000     |     

    condition:
        7 of them and filesize < 862208
}
rule win_cradlecore_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.cradlecore."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cradlecore"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c3 b8???????? e8???????? 81ec90000000 807d0800 53 57 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   b8????????           |                     
            //   e8????????           |                     
            //   81ec90000000         | sub                 esp, 0x90
            //   807d0800             | cmp                 byte ptr [ebp + 8], 0
            //   53                   | push                ebx
            //   57                   | push                edi

        $sequence_1 = { 8802 83c202 4f 75d8 8b7508 c645f800 c746140f000000 }
            // n = 7, score = 100
            //   8802                 | mov                 byte ptr [edx], al
            //   83c202               | add                 edx, 2
            //   4f                   | dec                 edi
            //   75d8                 | jne                 0xffffffda
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   c645f800             | mov                 byte ptr [ebp - 8], 0
            //   c746140f000000       | mov                 dword ptr [esi + 0x14], 0xf

        $sequence_2 = { 8365fc00 8d45bc 56 52 68???????? 6a40 50 }
            // n = 7, score = 100
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8d45bc               | lea                 eax, [ebp - 0x44]
            //   56                   | push                esi
            //   52                   | push                edx
            //   68????????           |                     
            //   6a40                 | push                0x40
            //   50                   | push                eax

        $sequence_3 = { e8???????? 59 53 6a01 8d4db0 e8???????? 53 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   53                   | push                ebx
            //   6a01                 | push                1
            //   8d4db0               | lea                 ecx, [ebp - 0x50]
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_4 = { 59 8975fc 8b45e0 8b0485f01f4300 f644030401 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8b0485f01f4300       | mov                 eax, dword ptr [eax*4 + 0x431ff0]
            //   f644030401           | test                byte ptr [ebx + eax + 4], 1

        $sequence_5 = { c60601 5f 8bc6 5e 8be5 }
            // n = 5, score = 100
            //   c60601               | mov                 byte ptr [esi], 1
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp

        $sequence_6 = { 8d4e0c 6a06 8d90140d4300 5f 668b02 8d5202 668901 }
            // n = 7, score = 100
            //   8d4e0c               | lea                 ecx, [esi + 0xc]
            //   6a06                 | push                6
            //   8d90140d4300         | lea                 edx, [eax + 0x430d14]
            //   5f                   | pop                 edi
            //   668b02               | mov                 ax, word ptr [edx]
            //   8d5202               | lea                 edx, [edx + 2]
            //   668901               | mov                 word ptr [ecx], ax

        $sequence_7 = { c745fc06000000 50 8bce e8???????? 6a00 53 8d4dc4 }
            // n = 7, score = 100
            //   c745fc06000000       | mov                 dword ptr [ebp - 4], 6
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   6a00                 | push                0
            //   53                   | push                ebx
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]

        $sequence_8 = { 66c745e82669 8d8748010000 c645ea3d 8bcc 50 e8???????? 8d4d98 }
            // n = 7, score = 100
            //   66c745e82669         | mov                 word ptr [ebp - 0x18], 0x6926
            //   8d8748010000         | lea                 eax, [edi + 0x148]
            //   c645ea3d             | mov                 byte ptr [ebp - 0x16], 0x3d
            //   8bcc                 | mov                 ecx, esp
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4d98               | lea                 ecx, [ebp - 0x68]

        $sequence_9 = { 3a02 740a 2bf9 4f 03f7 }
            // n = 5, score = 100
            //   3a02                 | cmp                 al, byte ptr [edx]
            //   740a                 | je                  0xc
            //   2bf9                 | sub                 edi, ecx
            //   4f                   | dec                 edi
            //   03f7                 | add                 esi, edi

    condition:
        7 of them and filesize < 450560
}
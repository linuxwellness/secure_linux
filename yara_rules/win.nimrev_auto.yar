rule win_nimrev_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.nimrev."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nimrev"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3c39 7707 b801000000 eb05 b800000000 }
            // n = 5, score = 200
            //   3c39                 | jmp                 0x1a09
            //   7707                 | nop                 
            //   b801000000           | cmp                 byte ptr [ebp - 5], 0
            //   eb05                 | je                  0x1a18
            //   b800000000           | jmp                 0x1a12

        $sequence_1 = { 0fb600 3c39 7707 b801000000 eb05 b800000000 }
            // n = 6, score = 200
            //   0fb600               | mov                 dword ptr [ebp - 0x50], 0x43
            //   3c39                 | mov                 dword ptr [ebp - 0x4c], 0x422f8c
            //   7707                 | mov                 dword ptr [ebp - 0x4c], 0x422f8c
            //   b801000000           | mov                 eax, dword ptr [ebp - 0x28]
            //   eb05                 | xor                 ah, 0
            //   b800000000           | mov                 esi, eax

        $sequence_2 = { 90 e9???????? 90 b9d0070000 e8???????? }
            // n = 5, score = 200
            //   90                   | mov                 eax, dword ptr [ebp - 0x30]
            //   e9????????           |                     
            //   90                   | mov                 ecx, eax
            //   b9d0070000           | mov                 dword ptr [esp], eax
            //   e8????????           |                     

        $sequence_3 = { 0f9ec0 8845ef eb01 90 }
            // n = 4, score = 200
            //   0f9ec0               | mov                 byte ptr [ebp + 0x66], al
            //   8845ef               | jmp                 0x295
            //   eb01                 | nop                 
            //   90                   | sete                al

        $sequence_4 = { 0fb700 98 89c1 e8???????? }
            // n = 4, score = 200
            //   0fb700               | leave               
            //   98                   | ret                 0x14
            //   89c1                 | movzx               eax, byte ptr [ebp - 9]
            //   e8????????           |                     

        $sequence_5 = { 0f95c0 8845f7 eb01 90 807df700 }
            // n = 5, score = 200
            //   0f95c0               | jmp                 0x16a0
            //   8845f7               | nop                 
            //   eb01                 | sub                 esp, 8
            //   90                   | jmp                 0x16c1
            //   807df700             | nop                 

        $sequence_6 = { 90 e9???????? 90 b9d0070000 }
            // n = 4, score = 200
            //   90                   | lea                 edx, [eax - 1]
            //   e9????????           |                     
            //   90                   | mov                 eax, dword ptr [ebp - 0xc]
            //   b9d0070000           | and                 eax, 0xf

        $sequence_7 = { 84c0 7408 90 e8???????? }
            // n = 4, score = 200
            //   84c0                 | dec                 eax
            //   7408                 | lea                 eax, [ebp - 8]
            //   90                   | dec                 eax
            //   e8????????           |                     

        $sequence_8 = { 0fb600 3c0d 7507 b801000000 eb05 }
            // n = 5, score = 200
            //   0fb600               | mov                 dword ptr [ebp - 0x14], 0x422aa4
            //   3c0d                 | mov                 eax, dword ptr [ebp - 0x2c]
            //   7507                 | mov                 dword ptr [ebp - 0x18], 0x2f
            //   b801000000           | mov                 dword ptr [ebp - 0x14], 0x422aa4
            //   eb05                 | mov                 eax, dword ptr [ebp - 0x2c]

        $sequence_9 = { 0f93c0 83f001 84c0 7408 90 e8???????? }
            // n = 6, score = 200
            //   0f93c0               | mov                 dword ptr [ebp - 0x74], 0x423ccc
            //   83f001               | mov                 dword ptr [ebp - 0x78], 0x975
            //   84c0                 | mov                 dword ptr [ebp - 0x74], 0x423ccc
            //   7408                 | mov                 dword ptr [ebp - 0x14], 0
            //   90                   | mov                 dword ptr [ebp - 0x78], 0x976
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1141760
}
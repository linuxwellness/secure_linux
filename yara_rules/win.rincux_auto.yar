rule win_rincux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.rincux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rincux"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a461c 50 e8???????? 8b4e20 51 8b8eb4000000 e8???????? }
            // n = 7, score = 200
            //   8a461c               | mov                 al, byte ptr [esi + 0x1c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4e20               | mov                 ecx, dword ptr [esi + 0x20]
            //   51                   | push                ecx
            //   8b8eb4000000         | mov                 ecx, dword ptr [esi + 0xb4]
            //   e8????????           |                     

        $sequence_1 = { 8b10 ff5208 8b442408 8d542418 52 8d542410 8b08 }
            // n = 7, score = 200
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   ff5208               | call                dword ptr [edx + 8]
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   8d542418             | lea                 edx, [esp + 0x18]
            //   52                   | push                edx
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_2 = { 8a4c241a 8b0c8d70040210 8b1c9570080210 8bd0 c1ea18 33cb 25ff000000 }
            // n = 7, score = 200
            //   8a4c241a             | mov                 cl, byte ptr [esp + 0x1a]
            //   8b0c8d70040210       | mov                 ecx, dword ptr [ecx*4 + 0x10020470]
            //   8b1c9570080210       | mov                 ebx, dword ptr [edx*4 + 0x10020870]
            //   8bd0                 | mov                 edx, eax
            //   c1ea18               | shr                 edx, 0x18
            //   33cb                 | xor                 ecx, ebx
            //   25ff000000           | and                 eax, 0xff

        $sequence_3 = { 50 6a01 50 8d542428 6a04 8d442440 52 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   6a01                 | push                1
            //   50                   | push                eax
            //   8d542428             | lea                 edx, [esp + 0x28]
            //   6a04                 | push                4
            //   8d442440             | lea                 eax, [esp + 0x40]
            //   52                   | push                edx

        $sequence_4 = { 8d4c240c 89bc24c8000000 51 68???????? c644241441 c644241576 c644241669 }
            // n = 7, score = 200
            //   8d4c240c             | lea                 ecx, [esp + 0xc]
            //   89bc24c8000000       | mov                 dword ptr [esp + 0xc8], edi
            //   51                   | push                ecx
            //   68????????           |                     
            //   c644241441           | mov                 byte ptr [esp + 0x14], 0x41
            //   c644241576           | mov                 byte ptr [esp + 0x15], 0x76
            //   c644241669           | mov                 byte ptr [esp + 0x16], 0x69

        $sequence_5 = { 5e c20800 6a0a ff15???????? 8bce e8???????? 5f }
            // n = 7, score = 200
            //   5e                   | pop                 esi
            //   c20800               | ret                 8
            //   6a0a                 | push                0xa
            //   ff15????????         |                     
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   5f                   | pop                 edi

        $sequence_6 = { 889530ffffff c68531ffffff72 c68532ffffff72 889d33ffffff c68534ffffff6e c68535ffffff74 c68536ffffff43 }
            // n = 7, score = 200
            //   889530ffffff         | mov                 byte ptr [ebp - 0xd0], dl
            //   c68531ffffff72       | mov                 byte ptr [ebp - 0xcf], 0x72
            //   c68532ffffff72       | mov                 byte ptr [ebp - 0xce], 0x72
            //   889d33ffffff         | mov                 byte ptr [ebp - 0xcd], bl
            //   c68534ffffff6e       | mov                 byte ptr [ebp - 0xcc], 0x6e
            //   c68535ffffff74       | mov                 byte ptr [ebp - 0xcb], 0x74
            //   c68536ffffff43       | mov                 byte ptr [ebp - 0xca], 0x43

        $sequence_7 = { c745fc00000000 50 e8???????? 83c404 85c0 7425 8b4b04 }
            // n = 7, score = 200
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   7425                 | je                  0x27
            //   8b4b04               | mov                 ecx, dword ptr [ebx + 4]

        $sequence_8 = { c3 84c0 754e 8a4301 84c0 7547 83f903 }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   84c0                 | test                al, al
            //   754e                 | jne                 0x50
            //   8a4301               | mov                 al, byte ptr [ebx + 1]
            //   84c0                 | test                al, al
            //   7547                 | jne                 0x49
            //   83f903               | cmp                 ecx, 3

        $sequence_9 = { c644244441 c644244563 c644244674 c644244769 c644244876 885c2449 c644244a00 }
            // n = 7, score = 200
            //   c644244441           | mov                 byte ptr [esp + 0x44], 0x41
            //   c644244563           | mov                 byte ptr [esp + 0x45], 0x63
            //   c644244674           | mov                 byte ptr [esp + 0x46], 0x74
            //   c644244769           | mov                 byte ptr [esp + 0x47], 0x69
            //   c644244876           | mov                 byte ptr [esp + 0x48], 0x76
            //   885c2449             | mov                 byte ptr [esp + 0x49], bl
            //   c644244a00           | mov                 byte ptr [esp + 0x4a], 0

    condition:
        7 of them and filesize < 392192
}
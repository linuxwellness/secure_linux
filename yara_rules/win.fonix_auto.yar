rule win_fonix_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.fonix."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fonix"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4360 c70065787061 b86e642031 0f44c8 8b4360 894804 33c9 }
            // n = 7, score = 100
            //   8b4360               | mov                 eax, dword ptr [ebx + 0x60]
            //   c70065787061         | mov                 dword ptr [eax], 0x61707865
            //   b86e642031           | mov                 eax, 0x3120646e
            //   0f44c8               | cmove               ecx, eax
            //   8b4360               | mov                 eax, dword ptr [ebx + 0x60]
            //   894804               | mov                 dword ptr [eax + 4], ecx
            //   33c9                 | xor                 ecx, ecx

        $sequence_1 = { e8???????? 8d8d38fcffff e8???????? 837dd808 8d4dc4 8d4308 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8d8d38fcffff         | lea                 ecx, [ebp - 0x3c8]
            //   e8????????           |                     
            //   837dd808             | cmp                 dword ptr [ebp - 0x28], 8
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   8d4308               | lea                 eax, [ebx + 8]

        $sequence_2 = { 89759c c645fc01 897004 e9???????? 8d4d84 51 50 }
            // n = 7, score = 100
            //   89759c               | mov                 dword ptr [ebp - 0x64], esi
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   897004               | mov                 dword ptr [eax + 4], esi
            //   e9????????           |                     
            //   8d4d84               | lea                 ecx, [ebp - 0x7c]
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_3 = { c645fc30 8db594fdffff 83bda8fdffff08 0f43b594fdffff 83ec18 8bcc 89a5acfdffff }
            // n = 7, score = 100
            //   c645fc30             | mov                 byte ptr [ebp - 4], 0x30
            //   8db594fdffff         | lea                 esi, [ebp - 0x26c]
            //   83bda8fdffff08       | cmp                 dword ptr [ebp - 0x258], 8
            //   0f43b594fdffff       | cmovae              esi, dword ptr [ebp - 0x26c]
            //   83ec18               | sub                 esp, 0x18
            //   8bcc                 | mov                 ecx, esp
            //   89a5acfdffff         | mov                 dword ptr [ebp - 0x254], esp

        $sequence_4 = { 50 898d80fcffff 8d8d38fdffff 50 }
            // n = 4, score = 100
            //   50                   | push                eax
            //   898d80fcffff         | mov                 dword ptr [ebp - 0x380], ecx
            //   8d8d38fdffff         | lea                 ecx, [ebp - 0x2c8]
            //   50                   | push                eax

        $sequence_5 = { 8b01 ff750c ff7508 68???????? ff9094000000 5d c20c00 }
            // n = 7, score = 100
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   68????????           |                     
            //   ff9094000000         | call                dword ptr [eax + 0x94]
            //   5d                   | pop                 ebp
            //   c20c00               | ret                 0xc

        $sequence_6 = { 3bc1 7221 51 ff7778 52 e8???????? 83c40c }
            // n = 7, score = 100
            //   3bc1                 | cmp                 eax, ecx
            //   7221                 | jb                  0x23
            //   51                   | push                ecx
            //   ff7778               | push                dword ptr [edi + 0x78]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_7 = { 8bfe 0f42558c 33c0 c645fc0a 8bca f3ab 56 }
            // n = 7, score = 100
            //   8bfe                 | mov                 edi, esi
            //   0f42558c             | cmovb               edx, dword ptr [ebp - 0x74]
            //   33c0                 | xor                 eax, eax
            //   c645fc0a             | mov                 byte ptr [ebp - 4], 0xa
            //   8bca                 | mov                 ecx, edx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   56                   | push                esi

        $sequence_8 = { c21c00 6a34 b8???????? e8???????? 894dc8 8b4508 33d2 }
            // n = 7, score = 100
            //   c21c00               | ret                 0x1c
            //   6a34                 | push                0x34
            //   b8????????           |                     
            //   e8????????           |                     
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33d2                 | xor                 edx, edx

        $sequence_9 = { 50 ff522c 8b4dc0 034db8 8b45c4 1345bc 23c8 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff522c               | call                dword ptr [edx + 0x2c]
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   034db8               | add                 ecx, dword ptr [ebp - 0x48]
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   1345bc               | adc                 eax, dword ptr [ebp - 0x44]
            //   23c8                 | and                 ecx, eax

    condition:
        7 of them and filesize < 2226176
}
rule win_mozart_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.mozart."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mozart"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f824 7718 c705????????0d000000 c3 8b04cd74b84000 }
            // n = 5, score = 200
            //   83f824               | cmp                 eax, 0x24
            //   7718                 | ja                  0x1a
            //   c705????????0d000000     |     
            //   c3                   | ret                 
            //   8b04cd74b84000       | mov                 eax, dword ptr [ecx*8 + 0x40b874]

        $sequence_1 = { 7352 8bc8 c1f905 8bf0 83e61f 8d3c8dc0db4000 8b0f }
            // n = 7, score = 200
            //   7352                 | jae                 0x54
            //   8bc8                 | mov                 ecx, eax
            //   c1f905               | sar                 ecx, 5
            //   8bf0                 | mov                 esi, eax
            //   83e61f               | and                 esi, 0x1f
            //   8d3c8dc0db4000       | lea                 edi, [ecx*4 + 0x40dbc0]
            //   8b0f                 | mov                 ecx, dword ptr [edi]

        $sequence_2 = { 7f32 8802 42 c60200 8bc3 46 }
            // n = 6, score = 200
            //   7f32                 | jg                  0x34
            //   8802                 | mov                 byte ptr [edx], al
            //   42                   | inc                 edx
            //   c60200               | mov                 byte ptr [edx], 0
            //   8bc3                 | mov                 eax, ebx
            //   46                   | inc                 esi

        $sequence_3 = { 5f 5e c6042900 8b4c244c }
            // n = 4, score = 200
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c6042900             | mov                 byte ptr [ecx + ebp], 0
            //   8b4c244c             | mov                 ecx, dword ptr [esp + 0x4c]

        $sequence_4 = { 0f8262ffffff 8b442460 85c0 7e14 }
            // n = 4, score = 200
            //   0f8262ffffff         | jb                  0xffffff68
            //   8b442460             | mov                 eax, dword ptr [esp + 0x60]
            //   85c0                 | test                eax, eax
            //   7e14                 | jle                 0x16

        $sequence_5 = { 8d3c8dc0db4000 8b0f c1e603 833c0eff }
            // n = 4, score = 200
            //   8d3c8dc0db4000       | lea                 edi, [ecx*4 + 0x40dbc0]
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   c1e603               | shl                 esi, 3
            //   833c0eff             | cmp                 dword ptr [esi + ecx], -1

        $sequence_6 = { 8bc5 33f6 33db 8d5001 }
            // n = 4, score = 200
            //   8bc5                 | mov                 eax, ebp
            //   33f6                 | xor                 esi, esi
            //   33db                 | xor                 ebx, ebx
            //   8d5001               | lea                 edx, [eax + 1]

        $sequence_7 = { 52 e8???????? 83c404 e8???????? 99 b90a000000 }
            // n = 6, score = 200
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   e8????????           |                     
            //   99                   | cdq                 
            //   b90a000000           | mov                 ecx, 0xa

        $sequence_8 = { 8b442404 48 742c 83e803 6a00 }
            // n = 5, score = 200
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   48                   | dec                 eax
            //   742c                 | je                  0x2e
            //   83e803               | sub                 eax, 3
            //   6a00                 | push                0

        $sequence_9 = { 50 56 e8???????? 83c410 8bd6 5e }
            // n = 6, score = 200
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8bd6                 | mov                 edx, esi
            //   5e                   | pop                 esi

    condition:
        7 of them and filesize < 114688
}
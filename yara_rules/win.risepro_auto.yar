rule win_risepro_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.risepro."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.risepro"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a22 e8???????? 8bf0 83c410 85f6 7415 ff750c }
            // n = 7, score = 100
            //   6a22                 | push                0x22
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c410               | add                 esp, 0x10
            //   85f6                 | test                esi, esi
            //   7415                 | je                  0x17
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_1 = { e8???????? 837dec08 721f 8b4dec 83c101 51 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   837dec08             | cmp                 dword ptr [ebp - 0x14], 8
            //   721f                 | jb                  0x21
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   83c101               | add                 ecx, 1
            //   51                   | push                ecx

        $sequence_2 = { 8bd0 8b4dec e8???????? a3???????? 33c9 884dd7 }
            // n = 6, score = 100
            //   8bd0                 | mov                 edx, eax
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   e8????????           |                     
            //   a3????????           |                     
            //   33c9                 | xor                 ecx, ecx
            //   884dd7               | mov                 byte ptr [ebp - 0x29], cl

        $sequence_3 = { 8b4dc4 c7410c08bf4100 c745fcffffffff 8b45c4 8b4df4 64890d00000000 59 }
            // n = 7, score = 100
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   c7410c08bf4100       | mov                 dword ptr [ecx + 0xc], 0x41bf08
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx

        $sequence_4 = { e8???????? 8bd0 8b4d08 e8???????? ebdb 8b4df4 64890d00000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   ebdb                 | jmp                 0xffffffdd
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx

        $sequence_5 = { 8b54017c 8995a8feffff 8b85f0feffff 8b8df4feffff 034824 }
            // n = 5, score = 100
            //   8b54017c             | mov                 edx, dword ptr [ecx + eax + 0x7c]
            //   8995a8feffff         | mov                 dword ptr [ebp - 0x158], edx
            //   8b85f0feffff         | mov                 eax, dword ptr [ebp - 0x110]
            //   8b8df4feffff         | mov                 ecx, dword ptr [ebp - 0x10c]
            //   034824               | add                 ecx, dword ptr [eax + 0x24]

        $sequence_6 = { 85c0 745f 8bfe 83e63f c1ff06 6bde38 8b04bd00ef4100 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   745f                 | je                  0x61
            //   8bfe                 | mov                 edi, esi
            //   83e63f               | and                 esi, 0x3f
            //   c1ff06               | sar                 edi, 6
            //   6bde38               | imul                ebx, esi, 0x38
            //   8b04bd00ef4100       | mov                 eax, dword ptr [edi*4 + 0x41ef00]

        $sequence_7 = { e8???????? 8b08 894dc4 8b55c8 52 8b45c4 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   894dc4               | mov                 dword ptr [ebp - 0x3c], ecx
            //   8b55c8               | mov                 edx, dword ptr [ebp - 0x38]
            //   52                   | push                edx
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   50                   | push                eax

        $sequence_8 = { 50 8b4dfc e8???????? 6b4d0818 8b55fc 030a 8b45fc }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     
            //   6b4d0818             | imul                ecx, dword ptr [ebp + 8], 0x18
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   030a                 | add                 ecx, dword ptr [edx]
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_9 = { 51 0fb655d0 52 0fb645cf 50 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   0fb655d0             | movzx               edx, byte ptr [ebp - 0x30]
            //   52                   | push                edx
            //   0fb645cf             | movzx               eax, byte ptr [ebp - 0x31]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 280576
}
rule win_pinchduke_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.pinchduke."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pinchduke"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4c2404 40 803c0800 75f9 c3 56 8b742408 }
            // n = 7, score = 100
            //   8b4c2404             | mov                 ecx, dword ptr [esp + 4]
            //   40                   | inc                 eax
            //   803c0800             | cmp                 byte ptr [eax + ecx], 0
            //   75f9                 | jne                 0xfffffffb
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8b742408             | mov                 esi, dword ptr [esp + 8]

        $sequence_1 = { 6685c9 75ef 33c0 c3 8b4c2404 8b542408 eb09 }
            // n = 7, score = 100
            //   6685c9               | test                cx, cx
            //   75ef                 | jne                 0xfffffff1
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   8b4c2404             | mov                 ecx, dword ptr [esp + 4]
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   eb09                 | jmp                 0xb

        $sequence_2 = { 8d8584fcffff 50 e8???????? 83ec0c 8bcc 50 8d8584fcffff }
            // n = 7, score = 100
            //   8d8584fcffff         | lea                 eax, [ebp - 0x37c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83ec0c               | sub                 esp, 0xc
            //   8bcc                 | mov                 ecx, esp
            //   50                   | push                eax
            //   8d8584fcffff         | lea                 eax, [ebp - 0x37c]

        $sequence_3 = { 8a45fe 80e30f 8ac8 c0e302 c0e906 02d9 885df6 }
            // n = 7, score = 100
            //   8a45fe               | mov                 al, byte ptr [ebp - 2]
            //   80e30f               | and                 bl, 0xf
            //   8ac8                 | mov                 cl, al
            //   c0e302               | shl                 bl, 2
            //   c0e906               | shr                 cl, 6
            //   02d9                 | add                 bl, cl
            //   885df6               | mov                 byte ptr [ebp - 0xa], bl

        $sequence_4 = { b9???????? e8???????? a1???????? c1f810 25ff000000 50 b9???????? }
            // n = 7, score = 100
            //   b9????????           |                     
            //   e8????????           |                     
            //   a1????????           |                     
            //   c1f810               | sar                 eax, 0x10
            //   25ff000000           | and                 eax, 0xff
            //   50                   | push                eax
            //   b9????????           |                     

        $sequence_5 = { 55 ffd6 8b3d???????? ffd7 8b1d???????? 8d4c2414 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   ffd6                 | call                esi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   8b1d????????         |                     
            //   8d4c2414             | lea                 ecx, [esp + 0x14]

        $sequence_6 = { 83ec1c 53 56 57 bf10270000 57 e8???????? }
            // n = 7, score = 100
            //   83ec1c               | sub                 esp, 0x1c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   bf10270000           | mov                 edi, 0x2710
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_7 = { 897dd0 03f3 c14df402 8b7dfc 8d9c379979825a 8b7010 8bfe }
            // n = 7, score = 100
            //   897dd0               | mov                 dword ptr [ebp - 0x30], edi
            //   03f3                 | add                 esi, ebx
            //   c14df402             | ror                 dword ptr [ebp - 0xc], 2
            //   8b7dfc               | mov                 edi, dword ptr [ebp - 4]
            //   8d9c379979825a       | lea                 ebx, [edi + esi + 0x5a827999]
            //   8b7010               | mov                 esi, dword ptr [eax + 0x10]
            //   8bfe                 | mov                 edi, esi

        $sequence_8 = { 334828 8bfe 334808 c1c705 33481c c14df002 8d943bdcbc1b8f }
            // n = 7, score = 100
            //   334828               | xor                 ecx, dword ptr [eax + 0x28]
            //   8bfe                 | mov                 edi, esi
            //   334808               | xor                 ecx, dword ptr [eax + 8]
            //   c1c705               | rol                 edi, 5
            //   33481c               | xor                 ecx, dword ptr [eax + 0x1c]
            //   c14df002             | ror                 dword ptr [ebp - 0x10], 2
            //   8d943bdcbc1b8f       | lea                 edx, [ebx + edi - 0x70e44324]

        $sequence_9 = { 55 8bec 8b4d0c 83ec30 53 56 8b7508 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   83ec30               | sub                 esp, 0x30
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 223680
}
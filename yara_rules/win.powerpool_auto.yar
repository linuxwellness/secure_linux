rule win_powerpool_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.powerpool."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.powerpool"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 740b 8bce e8???????? 3c58 }
            // n = 4, score = 200
            //   740b                 | je                  0xd
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   3c58                 | cmp                 al, 0x58

        $sequence_1 = { 740b 8bc8 e8???????? 8906 eb08 }
            // n = 5, score = 200
            //   740b                 | je                  0xd
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8906                 | mov                 dword ptr [esi], eax
            //   eb08                 | jmp                 0xa

        $sequence_2 = { 8944244c 8b4508 52 50 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_3 = { 8944244c 89442450 8b4508 8bf0 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   89442450             | mov                 dword ptr [esp + 0x50], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bf0                 | mov                 esi, eax

        $sequence_4 = { 8944244c 33c0 c744245044000000 c744247c01010000 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   33c0                 | xor                 eax, eax
            //   c744245044000000     | mov                 dword ptr [esp + 0x50], 0x44
            //   c744247c01010000     | mov                 dword ptr [esp + 0x7c], 0x101

        $sequence_5 = { 005311 40 005d11 40 006711 }
            // n = 5, score = 200
            //   005311               | add                 byte ptr [ebx + 0x11], dl
            //   40                   | inc                 eax
            //   005d11               | add                 byte ptr [ebp + 0x11], bl
            //   40                   | inc                 eax
            //   006711               | add                 byte ptr [edi + 0x11], ah

        $sequence_6 = { 8b450c 8b4d0c 83c408 50 8b4508 51 }
            // n = 6, score = 200
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   83c408               | add                 esp, 8
            //   50                   | push                eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   51                   | push                ecx

        $sequence_7 = { 740c 2bc1 50 51 8d4db8 }
            // n = 5, score = 200
            //   740c                 | je                  0xe
            //   2bc1                 | sub                 eax, ecx
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8d4db8               | lea                 ecx, [ebp - 0x48]

        $sequence_8 = { 5f c3 a900000200 7412 6a00 }
            // n = 5, score = 200
            //   5f                   | pop                 edi
            //   c3                   | ret                 
            //   a900000200           | test                eax, 0x20000
            //   7412                 | je                  0x14
            //   6a00                 | push                0

        $sequence_9 = { 740b 8b450c 8b8084464500 eb09 8b450c 8b8050464500 3bf0 }
            // n = 7, score = 200
            //   740b                 | je                  0xd
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b8084464500         | mov                 eax, dword ptr [eax + 0x454684]
            //   eb09                 | jmp                 0xb
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b8050464500         | mov                 eax, dword ptr [eax + 0x454650]
            //   3bf0                 | cmp                 esi, eax

        $sequence_10 = { 006711 40 0000 0303 }
            // n = 4, score = 200
            //   006711               | add                 byte ptr [edi + 0x11], ah
            //   40                   | inc                 eax
            //   0000                 | add                 byte ptr [eax], al
            //   0303                 | add                 eax, dword ptr [ebx]

        $sequence_11 = { 740c 2bc8 51 50 8d4db8 }
            // n = 5, score = 200
            //   740c                 | je                  0xe
            //   2bc8                 | sub                 ecx, eax
            //   51                   | push                ecx
            //   50                   | push                eax
            //   8d4db8               | lea                 ecx, [ebp - 0x48]

        $sequence_12 = { 8944244c 89442450 ff15???????? 8bd8 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   89442450             | mov                 dword ptr [esp + 0x50], eax
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_13 = { 740b 8b7f0c 85ff 0f8587fcffff }
            // n = 4, score = 200
            //   740b                 | je                  0xd
            //   8b7f0c               | mov                 edi, dword ptr [edi + 0xc]
            //   85ff                 | test                edi, edi
            //   0f8587fcffff         | jne                 0xfffffc8d

        $sequence_14 = { 740c 48 7518 6a08 68???????? }
            // n = 5, score = 200
            //   740c                 | je                  0xe
            //   48                   | dec                 eax
            //   7518                 | jne                 0x1a
            //   6a08                 | push                8
            //   68????????           |                     

        $sequence_15 = { 8944244c 8d442474 50 53 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   8d442474             | lea                 eax, [esp + 0x74]
            //   50                   | push                eax
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 819200
}
rule win_miniasp_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.miniasp."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.miniasp"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 59 59 8d854cdfffff 50 6a50 8d8578dfffff 50 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8d854cdfffff         | lea                 eax, [ebp - 0x20b4]
            //   50                   | push                eax
            //   6a50                 | push                0x50
            //   8d8578dfffff         | lea                 eax, [ebp - 0x2088]
            //   50                   | push                eax

        $sequence_1 = { e8???????? c9 c20c00 55 8bec 81ec60040000 a1???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c9                   | leave               
            //   c20c00               | ret                 0xc
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec60040000         | sub                 esp, 0x460
            //   a1????????           |                     

        $sequence_2 = { 8d85c4fbffff 50 e8???????? 6a00 }
            // n = 4, score = 100
            //   8d85c4fbffff         | lea                 eax, [ebp - 0x43c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_3 = { e8???????? 83c40c 8b450c 0345fc c60000 c685ebfbffff01 eb1f }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   c60000               | mov                 byte ptr [eax], 0
            //   c685ebfbffff01       | mov                 byte ptr [ebp - 0x415], 1
            //   eb1f                 | jmp                 0x21

        $sequence_4 = { 8d85d8fbffff 50 e8???????? 8b85f0fbffff 8985b4fbffff 8b85b4fbffff 40 }
            // n = 7, score = 100
            //   8d85d8fbffff         | lea                 eax, [ebp - 0x428]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b85f0fbffff         | mov                 eax, dword ptr [ebp - 0x410]
            //   8985b4fbffff         | mov                 dword ptr [ebp - 0x44c], eax
            //   8b85b4fbffff         | mov                 eax, dword ptr [ebp - 0x44c]
            //   40                   | inc                 eax

        $sequence_5 = { 8945e8 ebd0 8b45e8 89853cffffff 8b853cffffff 40 898538ffffff }
            // n = 7, score = 100
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   ebd0                 | jmp                 0xffffffd2
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   89853cffffff         | mov                 dword ptr [ebp - 0xc4], eax
            //   8b853cffffff         | mov                 eax, dword ptr [ebp - 0xc4]
            //   40                   | inc                 eax
            //   898538ffffff         | mov                 dword ptr [ebp - 0xc8], eax

        $sequence_6 = { 40 89459c 807d9700 75dc eb19 ff750c ff75f0 }
            // n = 7, score = 100
            //   40                   | inc                 eax
            //   89459c               | mov                 dword ptr [ebp - 0x64], eax
            //   807d9700             | cmp                 byte ptr [ebp - 0x69], 0
            //   75dc                 | jne                 0xffffffde
            //   eb19                 | jmp                 0x1b
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff75f0               | push                dword ptr [ebp - 0x10]

        $sequence_7 = { 8b85d4fbffff ffb018040000 ff15???????? 85c0 751b c785dcfbffffccd44000 68???????? }
            // n = 7, score = 100
            //   8b85d4fbffff         | mov                 eax, dword ptr [ebp - 0x42c]
            //   ffb018040000         | push                dword ptr [eax + 0x418]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   751b                 | jne                 0x1d
            //   c785dcfbffffccd44000     | mov    dword ptr [ebp - 0x424], 0x40d4cc
            //   68????????           |                     

        $sequence_8 = { 68???????? 64a100000000 50 51 51 83ec34 53 }
            // n = 7, score = 100
            //   68????????           |                     
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   83ec34               | sub                 esp, 0x34
            //   53                   | push                ebx

        $sequence_9 = { 8b4060 8945f8 6804010000 e8???????? 59 8945e4 }
            // n = 6, score = 100
            //   8b4060               | mov                 eax, dword ptr [eax + 0x60]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   6804010000           | push                0x104
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

    condition:
        7 of them and filesize < 139264
}
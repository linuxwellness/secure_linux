rule win_kwampirs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.kwampirs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kwampirs"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd3 6a00 6880000000 6a02 6a00 6a01 }
            // n = 6, score = 800
            //   ffd3                 | call                ebx
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a02                 | push                2
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_1 = { 64a300000000 8965e8 8bf9 33db }
            // n = 4, score = 800
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8965e8               | mov                 dword ptr [ebp - 0x18], esp
            //   8bf9                 | mov                 edi, ecx
            //   33db                 | xor                 ebx, ebx

        $sequence_2 = { 33d2 6816060000 52 8d85bef3ffff 50 }
            // n = 5, score = 800
            //   33d2                 | xor                 edx, edx
            //   6816060000           | push                0x616
            //   52                   | push                edx
            //   8d85bef3ffff         | lea                 eax, [ebp - 0xc42]
            //   50                   | push                eax

        $sequence_3 = { 6a01 56 8b0f 51 }
            // n = 4, score = 800
            //   6a01                 | push                1
            //   56                   | push                esi
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   51                   | push                ecx

        $sequence_4 = { 33c9 b80d000000 ba02000000 f7e2 }
            // n = 4, score = 800
            //   33c9                 | xor                 ecx, ecx
            //   b80d000000           | mov                 eax, 0xd
            //   ba02000000           | mov                 edx, 2
            //   f7e2                 | mul                 edx

        $sequence_5 = { 51 e8???????? 83c404 a3???????? 33f6 }
            // n = 5, score = 800
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   a3????????           |                     
            //   33f6                 | xor                 esi, esi

        $sequence_6 = { ba02000000 f7e2 0f90c1 53 56 57 }
            // n = 6, score = 800
            //   ba02000000           | mov                 edx, 2
            //   f7e2                 | mul                 edx
            //   0f90c1               | seto                cl
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_7 = { 8bc3 d1e8 33c9 40 ba02000000 f7e2 0f90c1 }
            // n = 7, score = 800
            //   8bc3                 | mov                 eax, ebx
            //   d1e8                 | shr                 eax, 1
            //   33c9                 | xor                 ecx, ecx
            //   40                   | inc                 eax
            //   ba02000000           | mov                 edx, 2
            //   f7e2                 | mul                 edx
            //   0f90c1               | seto                cl

        $sequence_8 = { 8bc3 d1e8 33c9 40 }
            // n = 4, score = 800
            //   8bc3                 | mov                 eax, ebx
            //   d1e8                 | shr                 eax, 1
            //   33c9                 | xor                 ecx, ecx
            //   40                   | inc                 eax

        $sequence_9 = { b827000000 ba02000000 f7e2 0f90c1 f7d9 }
            // n = 5, score = 800
            //   b827000000           | mov                 eax, 0x27
            //   ba02000000           | mov                 edx, 2
            //   f7e2                 | mul                 edx
            //   0f90c1               | seto                cl
            //   f7d9                 | neg                 ecx

    condition:
        7 of them and filesize < 2695168
}
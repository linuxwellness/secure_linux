rule elf_bashlite_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects elf.bashlite."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/elf.bashlite"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8945ec 837dec00 750b 8b45ec }
            // n = 5, score = 300
            //   e8????????           |                     
            //   8945ec               | mov                 dword ptr [esp], eax
            //   837dec00             | mov                 dword ptr [ebp - 0x18], eax
            //   750b                 | jmp                 0x886
            //   8b45ec               | lea                 eax, [ebp - 0x478]

        $sequence_1 = { 8b85ecefffff c9 c3 55 }
            // n = 4, score = 300
            //   8b85ecefffff         | mov                 al, byte ptr [ebp - 0xe]
            //   c9                   | mov                 al, byte ptr [ebp - 0xe]
            //   c3                   | cmp                 al, 0x13
            //   55                   | je                  0x2c1

        $sequence_2 = { 89c2 89d0 c1e81f 01d0 }
            // n = 4, score = 300
            //   89c2                 | mov                 eax, dword ptr [ebp - 0x84]
            //   89d0                 | test                eax, eax
            //   c1e81f               | je                  0x9ed
            //   01d0                 | mov                 eax, dword ptr [ebp - 0x74]

        $sequence_3 = { e8???????? 8945ec 837dec00 750b }
            // n = 4, score = 300
            //   e8????????           |                     
            //   8945ec               | dec                 eax
            //   837dec00             | mov                 dword ptr [ebp - 0xb8], eax
            //   750b                 | dec                 eax

        $sequence_4 = { c785ecefffff01000000 eb0a c785ecefffff00000000 8b85ecefffff c9 c3 55 }
            // n = 7, score = 300
            //   c785ecefffff01000000     | cmp    dword ptr [ebp - 0x30], 0
            //   eb0a                 | je                  0x612
            //   c785ecefffff00000000     | dec    eax
            //   8b85ecefffff         | mov                 eax, dword ptr [ebp - 0x30]
            //   c9                   | dec                 eax
            //   c3                   | mov                 dword ptr [ebp - 0x70], eax
            //   55                   | mov                 eax, dword ptr [eax]

        $sequence_5 = { 21d0 3345fc c9 c3 }
            // n = 4, score = 300
            //   21d0                 | mov                 word ptr [eax + 0xa], dx
            //   3345fc               | mov                 eax, dword ptr [ebp - 0x44]
            //   c9                   | movzx               edx, ax
            //   c3                   | mov                 eax, dword ptr [ebp - 0x1c]

        $sequence_6 = { 750c e8???????? 8b00 83f804 }
            // n = 4, score = 300
            //   750c                 | dec                 eax
            //   e8????????           |                     
            //   8b00                 | dec                 eax
            //   83f804               | dec                 eax

        $sequence_7 = { e8???????? c70016000000 e8???????? c70016000000 }
            // n = 4, score = 300
            //   e8????????           |                     
            //   c70016000000         | shr                 eax, 0x1f
            //   e8????????           |                     
            //   c70016000000         | add                 eax, edx

        $sequence_8 = { eb0a c785ecefffff00000000 8b85ecefffff c9 c3 55 }
            // n = 6, score = 300
            //   eb0a                 | mov                 edx, 1
            //   c785ecefffff00000000     | mov    dword ptr [ebp - 0x20], eax
            //   8b85ecefffff         | cmp                 dword ptr [ebp - 0x20], -1
            //   c9                   | je                  0x744
            //   c3                   | cmp                 dword ptr [ebp - 0x20], 0
            //   55                   | mov                 edx, 1

        $sequence_9 = { c785ecefffff01000000 eb0a c785ecefffff00000000 8b85ecefffff c9 c3 }
            // n = 6, score = 300
            //   c785ecefffff01000000     | mov    eax, dword ptr [ebp - 0x18]
            //   eb0a                 | mov                 dword ptr [ebp - 0xb8], eax
            //   c785ecefffff00000000     | mov    eax, dword ptr [ebp - 0xb8]
            //   8b85ecefffff         | mov                 edi, dword ptr [ebp - 4]
            //   c9                   | mov                 eax, dword ptr [ebp - 0x1c]
            //   c3                   | mov                 byte ptr [eax], 0

    condition:
        7 of them and filesize < 2310144
}
rule win_milum_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.milum."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.milum"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc8 8db424f4000000 e8???????? c68424c801000009 83ec1c 8bd6 8bcc }
            // n = 7, score = 400
            //   8bc8                 | mov                 ecx, eax
            //   8db424f4000000       | lea                 esi, [esp + 0xf4]
            //   e8????????           |                     
            //   c68424c801000009     | mov                 byte ptr [esp + 0x1c8], 9
            //   83ec1c               | sub                 esp, 0x1c
            //   8bd6                 | mov                 edx, esi
            //   8bcc                 | mov                 ecx, esp

        $sequence_1 = { 807ded00 7410 8b75e4 8b4d10 f7d6 46 e8???????? }
            // n = 7, score = 400
            //   807ded00             | cmp                 byte ptr [ebp - 0x13], 0
            //   7410                 | je                  0x12
            //   8b75e4               | mov                 esi, dword ptr [ebp - 0x1c]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   f7d6                 | not                 esi
            //   46                   | inc                 esi
            //   e8????????           |                     

        $sequence_2 = { 885d0c 885dfc 39753c 0f8238010000 8b5528 52 e9???????? }
            // n = 7, score = 400
            //   885d0c               | mov                 byte ptr [ebp + 0xc], bl
            //   885dfc               | mov                 byte ptr [ebp - 4], bl
            //   39753c               | cmp                 dword ptr [ebp + 0x3c], esi
            //   0f8238010000         | jb                  0x13e
            //   8b5528               | mov                 edx, dword ptr [ebp + 0x28]
            //   52                   | push                edx
            //   e9????????           |                     

        $sequence_3 = { 7302 8bc7 837a1410 7202 8b12 e8???????? 85c0 }
            // n = 7, score = 400
            //   7302                 | jae                 4
            //   8bc7                 | mov                 eax, edi
            //   837a1410             | cmp                 dword ptr [edx + 0x14], 0x10
            //   7202                 | jb                  4
            //   8b12                 | mov                 edx, dword ptr [edx]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_4 = { 8819 e8???????? c645fc01 885dfc e8???????? 8bcc }
            // n = 6, score = 400
            //   8819                 | mov                 byte ptr [ecx], bl
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   885dfc               | mov                 byte ptr [ebp - 4], bl
            //   e8????????           |                     
            //   8bcc                 | mov                 ecx, esp

        $sequence_5 = { 895c2414 7205 8b480c eb03 8d480c 8b4610 8bd0 }
            // n = 7, score = 400
            //   895c2414             | mov                 dword ptr [esp + 0x14], ebx
            //   7205                 | jb                  7
            //   8b480c               | mov                 ecx, dword ptr [eax + 0xc]
            //   eb03                 | jmp                 5
            //   8d480c               | lea                 ecx, [eax + 0xc]
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]
            //   8bd0                 | mov                 edx, eax

        $sequence_6 = { 39b42490000000 720d 8b54247c 52 e8???????? 83c404 8b442418 }
            // n = 7, score = 400
            //   39b42490000000       | cmp                 dword ptr [esp + 0x90], esi
            //   720d                 | jb                  0xf
            //   8b54247c             | mov                 edx, dword ptr [esp + 0x7c]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]

        $sequence_7 = { 83ec1c 8bcc 89642454 51 e8???????? 83c404 c684240002000018 }
            // n = 7, score = 400
            //   83ec1c               | sub                 esp, 0x1c
            //   8bcc                 | mov                 ecx, esp
            //   89642454             | mov                 dword ptr [esp + 0x54], esp
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   c684240002000018     | mov                 byte ptr [esp + 0x200], 0x18

        $sequence_8 = { 2bc1 894204 83ec08 8bc4 890a 8db564ffffff 89a560ffffff }
            // n = 7, score = 400
            //   2bc1                 | sub                 eax, ecx
            //   894204               | mov                 dword ptr [edx + 4], eax
            //   83ec08               | sub                 esp, 8
            //   8bc4                 | mov                 eax, esp
            //   890a                 | mov                 dword ptr [edx], ecx
            //   8db564ffffff         | lea                 esi, [ebp - 0x9c]
            //   89a560ffffff         | mov                 dword ptr [ebp - 0xa0], esp

        $sequence_9 = { a1???????? 33c5 8945f0 50 8d45f4 64a300000000 dd4508 }
            // n = 7, score = 400
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   dd4508               | fld                 qword ptr [ebp + 8]

    condition:
        7 of them and filesize < 1076224
}
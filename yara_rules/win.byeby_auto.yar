rule win_byeby_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.byeby."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.byeby"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ffd6 c6840588feffff5c 8d458c 50 8d8588feffff 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   c6840588feffff5c     | mov                 byte ptr [ebp + eax - 0x178], 0x5c
            //   8d458c               | lea                 eax, [ebp - 0x74]
            //   50                   | push                eax
            //   8d8588feffff         | lea                 eax, [ebp - 0x178]
            //   50                   | push                eax

        $sequence_1 = { 0f8641010000 8b4c2420 83c714 8bff 837ff005 0f85fa000000 }
            // n = 6, score = 100
            //   0f8641010000         | jbe                 0x147
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]
            //   83c714               | add                 edi, 0x14
            //   8bff                 | mov                 edi, edi
            //   837ff005             | cmp                 dword ptr [edi - 0x10], 5
            //   0f85fa000000         | jne                 0x100

        $sequence_2 = { 85ff 7460 57 33f6 ffd3 85c0 7e15 }
            // n = 7, score = 100
            //   85ff                 | test                edi, edi
            //   7460                 | je                  0x62
            //   57                   | push                edi
            //   33f6                 | xor                 esi, esi
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7e15                 | jle                 0x17

        $sequence_3 = { 50 c644243200 ffd6 8d84243c0f0000 50 8d842430050000 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   c644243200           | mov                 byte ptr [esp + 0x32], 0
            //   ffd6                 | call                esi
            //   8d84243c0f0000       | lea                 eax, [esp + 0xf3c]
            //   50                   | push                eax
            //   8d842430050000       | lea                 eax, [esp + 0x530]
            //   50                   | push                eax

        $sequence_4 = { 89442424 8d442420 6a08 50 }
            // n = 4, score = 100
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   8d442420             | lea                 eax, [esp + 0x20]
            //   6a08                 | push                8
            //   50                   | push                eax

        $sequence_5 = { c1f805 c1e106 8b048518ab0110 0fbe440804 83e040 }
            // n = 5, score = 100
            //   c1f805               | sar                 eax, 5
            //   c1e106               | shl                 ecx, 6
            //   8b048518ab0110       | mov                 eax, dword ptr [eax*4 + 0x1001ab18]
            //   0fbe440804           | movsx               eax, byte ptr [eax + ecx + 4]
            //   83e040               | and                 eax, 0x40

        $sequence_6 = { 68???????? 8d45c4 c745c448780110 50 e8???????? ff7524 }
            // n = 6, score = 100
            //   68????????           |                     
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   c745c448780110       | mov                 dword ptr [ebp - 0x3c], 0x10017848
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff7524               | push                dword ptr [ebp + 0x24]

        $sequence_7 = { c645f40d 50 8b8528e5ffff 8b048518ab0110 ff3401 ff15???????? 85c0 }
            // n = 7, score = 100
            //   c645f40d             | mov                 byte ptr [ebp - 0xc], 0xd
            //   50                   | push                eax
            //   8b8528e5ffff         | mov                 eax, dword ptr [ebp - 0x1ad8]
            //   8b048518ab0110       | mov                 eax, dword ptr [eax*4 + 0x1001ab18]
            //   ff3401               | push                dword ptr [ecx + eax]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_8 = { 8b35???????? 8d8588feffff 50 ffd6 c6840588feffff5c }
            // n = 5, score = 100
            //   8b35????????         |                     
            //   8d8588feffff         | lea                 eax, [ebp - 0x178]
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   c6840588feffff5c     | mov                 byte ptr [ebp + eax - 0x178], 0x5c

        $sequence_9 = { 83c40c c78424d40200005656424d 8d8424d4020000 c78424d802000054304645 c68424dc02000000 c78424e002000052453958 50 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   c78424d40200005656424d     | mov    dword ptr [esp + 0x2d4], 0x4d425656
            //   8d8424d4020000       | lea                 eax, [esp + 0x2d4]
            //   c78424d802000054304645     | mov    dword ptr [esp + 0x2d8], 0x45463054
            //   c68424dc02000000     | mov                 byte ptr [esp + 0x2dc], 0
            //   c78424e002000052453958     | mov    dword ptr [esp + 0x2e0], 0x58394552
            //   50                   | push                eax

    condition:
        7 of them and filesize < 253952
}
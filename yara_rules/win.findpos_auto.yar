rule win_findpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.findpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.findpos"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7509 0fb74816 e8???????? 33c0 8b4dfc 5e 33cd }
            // n = 7, score = 100
            //   7509                 | jne                 0xb
            //   0fb74816             | movzx               ecx, word ptr [eax + 0x16]
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   5e                   | pop                 esi
            //   33cd                 | xor                 ecx, ebp

        $sequence_1 = { 51 ebbe 8b02 8945e4 394610 762d }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   ebbe                 | jmp                 0xffffffc0
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   394610               | cmp                 dword ptr [esi + 0x10], eax
            //   762d                 | jbe                 0x2f

        $sequence_2 = { 33c0 ebe8 55 8bec 83ec14 53 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   ebe8                 | jmp                 0xffffffea
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec14               | sub                 esp, 0x14
            //   53                   | push                ebx

        $sequence_3 = { c70016000000 e8???????? ebb4 c745e410f14100 }
            // n = 4, score = 100
            //   c70016000000         | mov                 dword ptr [eax], 0x16
            //   e8????????           |                     
            //   ebb4                 | jmp                 0xffffffb6
            //   c745e410f14100       | mov                 dword ptr [ebp - 0x1c], 0x41f110

        $sequence_4 = { f7f7 83f878 7609 33d2 }
            // n = 4, score = 100
            //   f7f7                 | div                 edi
            //   83f878               | cmp                 eax, 0x78
            //   7609                 | jbe                 0xb
            //   33d2                 | xor                 edx, edx

        $sequence_5 = { ff15???????? 50 53 ff15???????? 33f6 46 }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   33f6                 | xor                 esi, esi
            //   46                   | inc                 esi

        $sequence_6 = { 23c1 83c008 5d c3 8b04c52cb04100 5d }
            // n = 6, score = 100
            //   23c1                 | and                 eax, ecx
            //   83c008               | add                 eax, 8
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c52cb04100       | mov                 eax, dword ptr [eax*8 + 0x41b02c]
            //   5d                   | pop                 ebp

        $sequence_7 = { 8bf7 84c0 0f858e000000 a1???????? be???????? 85c0 }
            // n = 6, score = 100
            //   8bf7                 | mov                 esi, edi
            //   84c0                 | test                al, al
            //   0f858e000000         | jne                 0x94
            //   a1????????           |                     
            //   be????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_8 = { 0f8488000000 33f6 21b5e4e7ffff 85c0 747c 8b3d???????? 898ddce7ffff }
            // n = 7, score = 100
            //   0f8488000000         | je                  0x8e
            //   33f6                 | xor                 esi, esi
            //   21b5e4e7ffff         | and                 dword ptr [ebp - 0x181c], esi
            //   85c0                 | test                eax, eax
            //   747c                 | je                  0x7e
            //   8b3d????????         |                     
            //   898ddce7ffff         | mov                 dword ptr [ebp - 0x1824], ecx

        $sequence_9 = { 33f6 46 3bc6 0f8577040000 6a11 ffd7 663bc6 }
            // n = 7, score = 100
            //   33f6                 | xor                 esi, esi
            //   46                   | inc                 esi
            //   3bc6                 | cmp                 eax, esi
            //   0f8577040000         | jne                 0x47d
            //   6a11                 | push                0x11
            //   ffd7                 | call                edi
            //   663bc6               | cmp                 ax, si

    condition:
        7 of them and filesize < 286720
}
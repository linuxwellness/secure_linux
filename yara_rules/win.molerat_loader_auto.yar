rule win_molerat_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.molerat_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.molerat_loader"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf0 56 7575 8d8de8feffff }
            // n = 4, score = 100
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   7575                 | jne                 0x77
            //   8d8de8feffff         | lea                 ecx, [ebp - 0x118]

        $sequence_1 = { c645fc14 e8???????? 83c40c 68???????? 50 8d4594 50 }
            // n = 7, score = 100
            //   c645fc14             | mov                 byte ptr [ebp - 4], 0x14
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     
            //   50                   | push                eax
            //   8d4594               | lea                 eax, [ebp - 0x6c]
            //   50                   | push                eax

        $sequence_2 = { 50 8d4c242c 51 e8???????? 8b10 8b4a04 03c8 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   8b4a04               | mov                 ecx, dword ptr [edx + 4]
            //   03c8                 | add                 ecx, eax

        $sequence_3 = { 8b420c 8bcb ffd0 8b4ddc 8b11 8b420c ffd0 }
            // n = 7, score = 100
            //   8b420c               | mov                 eax, dword ptr [edx + 0xc]
            //   8bcb                 | mov                 ecx, ebx
            //   ffd0                 | call                eax
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8b420c               | mov                 eax, dword ptr [edx + 0xc]
            //   ffd0                 | call                eax

        $sequence_4 = { 59 8985a4fbffff 3bc1 0f87f5090000 ff248541294200 33c0 838df4fbffffff }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   8985a4fbffff         | mov                 dword ptr [ebp - 0x45c], eax
            //   3bc1                 | cmp                 eax, ecx
            //   0f87f5090000         | ja                  0x9fb
            //   ff248541294200       | jmp                 dword ptr [eax*4 + 0x422941]
            //   33c0                 | xor                 eax, eax
            //   838df4fbffffff       | or                  dword ptr [ebp - 0x40c], 0xffffffff

        $sequence_5 = { 68???????? 8bcf c68424dc00000002 e8???????? 8b8424e0000000 50 8d4c2428 }
            // n = 7, score = 100
            //   68????????           |                     
            //   8bcf                 | mov                 ecx, edi
            //   c68424dc00000002     | mov                 byte ptr [esp + 0xdc], 2
            //   e8????????           |                     
            //   8b8424e0000000       | mov                 eax, dword ptr [esp + 0xe0]
            //   50                   | push                eax
            //   8d4c2428             | lea                 ecx, [esp + 0x28]

        $sequence_6 = { c645fc3f 8b853cffffff 83c0f0 8d480c 83caff }
            // n = 5, score = 100
            //   c645fc3f             | mov                 byte ptr [ebp - 4], 0x3f
            //   8b853cffffff         | mov                 eax, dword ptr [ebp - 0xc4]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, [eax + 0xc]
            //   83caff               | or                  edx, 0xffffffff

        $sequence_7 = { 5b 8be5 5d c21000 8b4de4 51 }
            // n = 6, score = 100
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c21000               | ret                 0x10
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   51                   | push                ecx

        $sequence_8 = { 8d4de8 c645fc08 e8???????? 885dfc 8b45e0 83c0f0 8d480c }
            // n = 7, score = 100
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   c645fc08             | mov                 byte ptr [ebp - 4], 8
            //   e8????????           |                     
            //   885dfc               | mov                 byte ptr [ebp - 4], bl
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, [eax + 0xc]

        $sequence_9 = { 8b11 50 8b4204 ffd0 8d4dec 51 e8???????? }
            // n = 7, score = 100
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   50                   | push                eax
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   ffd0                 | call                eax
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   51                   | push                ecx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 688128
}
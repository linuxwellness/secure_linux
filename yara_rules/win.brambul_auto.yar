rule win_brambul_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.brambul."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.brambul"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd0 85c0 7406 33c0 83c410 c3 53 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   85c0                 | test                eax, eax
            //   7406                 | je                  8
            //   33c0                 | xor                 eax, eax
            //   83c410               | add                 esp, 0x10
            //   c3                   | ret                 
            //   53                   | push                ebx

        $sequence_1 = { 3d00010000 1bc9 83e1a0 83c160 884df0 }
            // n = 5, score = 100
            //   3d00010000           | cmp                 eax, 0x100
            //   1bc9                 | sbb                 ecx, ecx
            //   83e1a0               | and                 ecx, 0xffffffa0
            //   83c160               | add                 ecx, 0x60
            //   884df0               | mov                 byte ptr [ebp - 0x10], cl

        $sequence_2 = { 51 ff15???????? 85c0 0f84bb000000 837c241802 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f84bb000000         | je                  0xc1
            //   837c241802           | cmp                 dword ptr [esp + 0x18], 2

        $sequence_3 = { 56 ff15???????? bf???????? 83c9ff }
            // n = 4, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_4 = { 8b458c 8db5887fffff 3bc6 742c 8db5887fffff }
            // n = 5, score = 100
            //   8b458c               | mov                 eax, dword ptr [ebp - 0x74]
            //   8db5887fffff         | lea                 esi, [ebp - 0x8078]
            //   3bc6                 | cmp                 eax, esi
            //   742c                 | je                  0x2e
            //   8db5887fffff         | lea                 esi, [ebp - 0x8078]

        $sequence_5 = { 0f84ed040000 83c9ff bf???????? 33c0 f2ae f7d1 }
            // n = 6, score = 100
            //   0f84ed040000         | je                  0x4f3
            //   83c9ff               | or                  ecx, 0xffffffff
            //   bf????????           |                     
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_6 = { 68???????? 50 ffd5 83c40c eb2b bf???????? }
            // n = 6, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   ffd5                 | call                ebp
            //   83c40c               | add                 esp, 0xc
            //   eb2b                 | jmp                 0x2d
            //   bf????????           |                     

        $sequence_7 = { 80e30f c0e804 02d8 02d3 41 }
            // n = 5, score = 100
            //   80e30f               | and                 bl, 0xf
            //   c0e804               | shr                 al, 4
            //   02d8                 | add                 bl, al
            //   02d3                 | add                 dl, bl
            //   41                   | inc                 ecx

        $sequence_8 = { 884c241c 8b0d???????? 6689542410 668b15???????? 88442412 }
            // n = 5, score = 100
            //   884c241c             | mov                 byte ptr [esp + 0x1c], cl
            //   8b0d????????         |                     
            //   6689542410           | mov                 word ptr [esp + 0x10], dx
            //   668b15????????       |                     
            //   88442412             | mov                 byte ptr [esp + 0x12], al

        $sequence_9 = { 8bc6 eb14 2bfe 6a01 8bcf }
            // n = 5, score = 100
            //   8bc6                 | mov                 eax, esi
            //   eb14                 | jmp                 0x16
            //   2bfe                 | sub                 edi, esi
            //   6a01                 | push                1
            //   8bcf                 | mov                 ecx, edi

        $sequence_10 = { e8???????? 8b442468 33d2 8d7c2424 668b10 8b7004 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8b442468             | mov                 eax, dword ptr [esp + 0x68]
            //   33d2                 | xor                 edx, edx
            //   8d7c2424             | lea                 edi, [esp + 0x24]
            //   668b10               | mov                 dx, word ptr [eax]
            //   8b7004               | mov                 esi, dword ptr [eax + 4]

        $sequence_11 = { 02da 885c28ff 48 83f801 }
            // n = 4, score = 100
            //   02da                 | add                 bl, dl
            //   885c28ff             | mov                 byte ptr [eax + ebp - 1], bl
            //   48                   | dec                 eax
            //   83f801               | cmp                 eax, 1

        $sequence_12 = { 8d8c2420010000 89500c 8d442458 50 }
            // n = 4, score = 100
            //   8d8c2420010000       | lea                 ecx, [esp + 0x120]
            //   89500c               | mov                 dword ptr [eax + 0xc], edx
            //   8d442458             | lea                 eax, [esp + 0x58]
            //   50                   | push                eax

        $sequence_13 = { 8b4c2420 c6042e00 5e 5d 85c9 5b 7404 }
            // n = 7, score = 100
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]
            //   c6042e00             | mov                 byte ptr [esi + ebp], 0
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   85c9                 | test                ecx, ecx
            //   5b                   | pop                 ebx
            //   7404                 | je                  6

        $sequence_14 = { 8d542478 6a01 52 8d442468 }
            // n = 4, score = 100
            //   8d542478             | lea                 edx, [esp + 0x78]
            //   6a01                 | push                1
            //   52                   | push                edx
            //   8d442468             | lea                 eax, [esp + 0x68]

        $sequence_15 = { c1ef0c 0bdf 8bfe 03de 33fb 23fa 33fe }
            // n = 7, score = 100
            //   c1ef0c               | shr                 edi, 0xc
            //   0bdf                 | or                  ebx, edi
            //   8bfe                 | mov                 edi, esi
            //   03de                 | add                 ebx, esi
            //   33fb                 | xor                 edi, ebx
            //   23fa                 | and                 edi, edx
            //   33fe                 | xor                 edi, esi

    condition:
        7 of them and filesize < 188416
}
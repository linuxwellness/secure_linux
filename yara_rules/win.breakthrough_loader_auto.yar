rule win_breakthrough_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.breakthrough_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breakthrough_loader"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c745dc02000000 c745e004844400 8b4508 8bcf 8b7510 dd00 8b450c }
            // n = 7, score = 100
            //   c745dc02000000       | mov                 dword ptr [ebp - 0x24], 2
            //   c745e004844400       | mov                 dword ptr [ebp - 0x20], 0x448404
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bcf                 | mov                 ecx, edi
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]
            //   dd00                 | fld                 qword ptr [eax]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_1 = { 68???????? 8bf1 ff15???????? 8d8df8fdffff e8???????? 8b4604 }
            // n = 6, score = 100
            //   68????????           |                     
            //   8bf1                 | mov                 esi, ecx
            //   ff15????????         |                     
            //   8d8df8fdffff         | lea                 ecx, [ebp - 0x208]
            //   e8????????           |                     
            //   8b4604               | mov                 eax, dword ptr [esi + 4]

        $sequence_2 = { ff15???????? 8b45f0 8b3d???????? 85c0 740b 50 ffd7 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b3d????????         |                     
            //   85c0                 | test                eax, eax
            //   740b                 | je                  0xd
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_3 = { 53 8b1c85b8774400 56 6800080000 6a00 53 ff15???????? }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8b1c85b8774400       | mov                 ebx, dword ptr [eax*4 + 0x4477b8]
            //   56                   | push                esi
            //   6800080000           | push                0x800
            //   6a00                 | push                0
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_4 = { 8d442418 8b4c2418 83fe10 8b7c2410 }
            // n = 4, score = 100
            //   8d442418             | lea                 eax, [esp + 0x18]
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   83fe10               | cmp                 esi, 0x10
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]

        $sequence_5 = { 50 ff36 8bce e8???????? c7461407000000 c7461000000000 33c0 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff36                 | push                dword ptr [esi]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   c7461407000000       | mov                 dword ptr [esi + 0x14], 7
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { ff7508 50 6a00 6a00 e8???????? 40 50 }
            // n = 7, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   e8????????           |                     
            //   40                   | inc                 eax
            //   50                   | push                eax

        $sequence_7 = { 8b45ec 8b00 8b4804 8a81402b4500 8845dc ff75dc 8b89382b4500 }
            // n = 7, score = 100
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8a81402b4500         | mov                 al, byte ptr [ecx + 0x452b40]
            //   8845dc               | mov                 byte ptr [ebp - 0x24], al
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   8b89382b4500         | mov                 ecx, dword ptr [ecx + 0x452b38]

        $sequence_8 = { 8bf0 3b4e04 741c 8b11 ff5208 85c0 }
            // n = 6, score = 100
            //   8bf0                 | mov                 esi, eax
            //   3b4e04               | cmp                 ecx, dword ptr [esi + 4]
            //   741c                 | je                  0x1e
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   ff5208               | call                dword ptr [edx + 8]
            //   85c0                 | test                eax, eax

        $sequence_9 = { 57 8975f8 c745bc00000000 c745d807000000 }
            // n = 4, score = 100
            //   57                   | push                edi
            //   8975f8               | mov                 dword ptr [ebp - 8], esi
            //   c745bc00000000       | mov                 dword ptr [ebp - 0x44], 0
            //   c745d807000000       | mov                 dword ptr [ebp - 0x28], 7

    condition:
        7 of them and filesize < 753664
}
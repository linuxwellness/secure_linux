rule win_gaudox_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.gaudox."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gaudox"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f84fd000000 53 6a08 56 6a03 6a04 e8???????? }
            // n = 7, score = 200
            //   0f84fd000000         | je                  0x103
            //   53                   | push                ebx
            //   6a08                 | push                8
            //   56                   | push                esi
            //   6a03                 | push                3
            //   6a04                 | push                4
            //   e8????????           |                     

        $sequence_1 = { 55 8bec 83e4f8 83ec10 833d????????00 0f84df020000 833d????????00 }
            // n = 7, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83e4f8               | and                 esp, 0xfffffff8
            //   83ec10               | sub                 esp, 0x10
            //   833d????????00       |                     
            //   0f84df020000         | je                  0x2e5
            //   833d????????00       |                     

        $sequence_2 = { 810e00020000 eb54 80fb68 7508 810e00010000 eb47 80fb49 }
            // n = 7, score = 200
            //   810e00020000         | or                  dword ptr [esi], 0x200
            //   eb54                 | jmp                 0x56
            //   80fb68               | cmp                 bl, 0x68
            //   7508                 | jne                 0xa
            //   810e00010000         | or                  dword ptr [esi], 0x100
            //   eb47                 | jmp                 0x49
            //   80fb49               | cmp                 bl, 0x49

        $sequence_3 = { 8bec 83ec2c 8b4508 53 56 8955f4 8b75f4 }
            // n = 7, score = 200
            //   8bec                 | mov                 ebp, esp
            //   83ec2c               | sub                 esp, 0x2c
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8b75f4               | mov                 esi, dword ptr [ebp - 0xc]

        $sequence_4 = { 6a01 e8???????? 5e 8bc7 5f }
            // n = 5, score = 200
            //   6a01                 | push                1
            //   e8????????           |                     
            //   5e                   | pop                 esi
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi

        $sequence_5 = { 8a07 8d9b00000000 3c2c 740a }
            // n = 4, score = 200
            //   8a07                 | mov                 al, byte ptr [edi]
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   3c2c                 | cmp                 al, 0x2c
            //   740a                 | je                  0xc

        $sequence_6 = { 8be5 5d c3 8b4de8 33ff 8b45fc 8901 }
            // n = 7, score = 200
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   33ff                 | xor                 edi, edi
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_7 = { 50 8d8c2458030000 e8???????? 8bf0 85f6 0f88df000000 a1???????? }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8d8c2458030000       | lea                 ecx, [esp + 0x358]
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   0f88df000000         | js                  0xe5
            //   a1????????           |                     

        $sequence_8 = { c705????????00000000 6a1a 6a00 c705????????e0010000 e8???????? 85c0 }
            // n = 6, score = 200
            //   c705????????00000000     |     
            //   6a1a                 | push                0x1a
            //   6a00                 | push                0
            //   c705????????e0010000     |     
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_9 = { 0fb64608 034104 25ff000000 894104 8a5608 0fb6440808 884608 }
            // n = 7, score = 200
            //   0fb64608             | movzx               eax, byte ptr [esi + 8]
            //   034104               | add                 eax, dword ptr [ecx + 4]
            //   25ff000000           | and                 eax, 0xff
            //   894104               | mov                 dword ptr [ecx + 4], eax
            //   8a5608               | mov                 dl, byte ptr [esi + 8]
            //   0fb6440808           | movzx               eax, byte ptr [eax + ecx + 8]
            //   884608               | mov                 byte ptr [esi + 8], al

    condition:
        7 of them and filesize < 155648
}
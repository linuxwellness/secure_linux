rule win_onionduke_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.onionduke."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.onionduke"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33d2 895e68 66895658 8b550c 8d4202 c645fc04 8945ec }
            // n = 7, score = 200
            //   33d2                 | xor                 edx, edx
            //   895e68               | mov                 dword ptr [esi + 0x68], ebx
            //   66895658             | mov                 word ptr [esi + 0x58], dx
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8d4202               | lea                 eax, [edx + 2]
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax

        $sequence_1 = { 7454 833e10 720e 8b46ec }
            // n = 4, score = 200
            //   7454                 | je                  0x56
            //   833e10               | cmp                 dword ptr [esi], 0x10
            //   720e                 | jb                  0x10
            //   8b46ec               | mov                 eax, dword ptr [esi - 0x14]

        $sequence_2 = { 8b5508 8b4e44 8b09 85d2 }
            // n = 4, score = 200
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b4e44               | mov                 ecx, dword ptr [esi + 0x44]
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   85d2                 | test                edx, edx

        $sequence_3 = { 85c0 7417 8b4dd4 397de8 7303 8d4dd4 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   7417                 | je                  0x19
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   397de8               | cmp                 dword ptr [ebp - 0x18], edi
            //   7303                 | jae                 5
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]

        $sequence_4 = { 56 ffd0 56 e8???????? 83c404 5e }
            // n = 6, score = 200
            //   56                   | push                esi
            //   ffd0                 | call                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   5e                   | pop                 esi

        $sequence_5 = { 56 ffd0 8b4b04 8b11 8bf8 8b4230 56 }
            // n = 7, score = 200
            //   56                   | push                esi
            //   ffd0                 | call                eax
            //   8b4b04               | mov                 ecx, dword ptr [ebx + 4]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8bf8                 | mov                 edi, eax
            //   8b4230               | mov                 eax, dword ptr [edx + 0x30]
            //   56                   | push                esi

        $sequence_6 = { 83c71c c60600 e8???????? 83430438 8b4df4 }
            // n = 5, score = 200
            //   83c71c               | add                 edi, 0x1c
            //   c60600               | mov                 byte ptr [esi], 0
            //   e8????????           |                     
            //   83430438             | add                 dword ptr [ebx + 4], 0x38
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]

        $sequence_7 = { c20c00 8b0e 8b55fc 53 57 }
            // n = 5, score = 200
            //   c20c00               | ret                 0xc
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   53                   | push                ebx
            //   57                   | push                edi

        $sequence_8 = { c7460c00000000 f6450801 c706???????? 7409 56 }
            // n = 5, score = 200
            //   c7460c00000000       | mov                 dword ptr [esi + 0xc], 0
            //   f6450801             | test                byte ptr [ebp + 8], 1
            //   c706????????         |                     
            //   7409                 | je                  0xb
            //   56                   | push                esi

        $sequence_9 = { 32540104 40 885438ff 3bc6 }
            // n = 4, score = 200
            //   32540104             | xor                 dl, byte ptr [ecx + eax + 4]
            //   40                   | inc                 eax
            //   885438ff             | mov                 byte ptr [eax + edi - 1], dl
            //   3bc6                 | cmp                 eax, esi

    condition:
        7 of them and filesize < 671744
}
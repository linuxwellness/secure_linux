rule win_laziok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.laziok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.laziok"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8bf8 39742410 741b }
            // n = 4, score = 900
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   39742410             | cmp                 dword ptr [esp + 0x10], esi
            //   741b                 | je                  0x1d

        $sequence_1 = { 03c6 8901 8bc6 5e }
            // n = 4, score = 900
            //   03c6                 | add                 eax, esi
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi

        $sequence_2 = { 50 51 68ffffff1f 52 e8???????? 83c410 c3 }
            // n = 7, score = 900
            //   50                   | push                eax
            //   51                   | push                ecx
            //   68ffffff1f           | push                0x1fffffff
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   c3                   | ret                 

        $sequence_3 = { 6a00 ff35???????? ff15???????? eb0c 56 83c028 50 }
            // n = 7, score = 900
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   eb0c                 | jmp                 0xe
            //   56                   | push                esi
            //   83c028               | add                 eax, 0x28
            //   50                   | push                eax

        $sequence_4 = { e8???????? 68???????? 6a00 6a0c a3???????? }
            // n = 5, score = 900
            //   e8????????           |                     
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a0c                 | push                0xc
            //   a3????????           |                     

        $sequence_5 = { 56 e8???????? 59 8b4c240c 03c6 8901 }
            // n = 6, score = 900
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   03c6                 | add                 eax, esi
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_6 = { 5f 5e 5b c20c00 8b08 }
            // n = 5, score = 900
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   c20c00               | ret                 0xc
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_7 = { 668945f2 8b460c 85c0 7404 8b00 eb03 8b4610 }
            // n = 7, score = 900
            //   668945f2             | mov                 word ptr [ebp - 0xe], ax
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   eb03                 | jmp                 5
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]

        $sequence_8 = { 83c028 50 e8???????? 59 59 5e c20400 }
            // n = 7, score = 900
            //   83c028               | add                 eax, 0x28
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   5e                   | pop                 esi
            //   c20400               | ret                 4

        $sequence_9 = { e8???????? 83c420 5b c20400 }
            // n = 4, score = 900
            //   e8????????           |                     
            //   83c420               | add                 esp, 0x20
            //   5b                   | pop                 ebx
            //   c20400               | ret                 4

    condition:
        7 of them and filesize < 688128
}
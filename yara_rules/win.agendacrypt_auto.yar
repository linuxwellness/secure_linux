rule win_agendacrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.agendacrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.agendacrypt"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff73ec 6a00 ff35???????? e8???????? 833b00 74dd ff73fc }
            // n = 7, score = 100
            //   ff73ec               | push                dword ptr [ebx - 0x14]
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   e8????????           |                     
            //   833b00               | cmp                 dword ptr [ebx], 0
            //   74dd                 | je                  0xffffffdf
            //   ff73fc               | push                dword ptr [ebx - 4]

        $sequence_1 = { f20f104dcc 8b45d4 f20f114db8 8945c0 f20f1145b0 8b45bc 8b4db8 }
            // n = 7, score = 100
            //   f20f104dcc           | movsd               xmm1, qword ptr [ebp - 0x34]
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]
            //   f20f114db8           | movsd               qword ptr [ebp - 0x48], xmm1
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax
            //   f20f1145b0           | movsd               qword ptr [ebp - 0x50], xmm0
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]
            //   8b4db8               | mov                 ecx, dword ptr [ebp - 0x48]

        $sequence_2 = { f20f104588 f20f104d90 f20f114808 f20f1100 8d4da4 68???????? 50 }
            // n = 7, score = 100
            //   f20f104588           | movsd               xmm0, qword ptr [ebp - 0x78]
            //   f20f104d90           | movsd               xmm1, qword ptr [ebp - 0x70]
            //   f20f114808           | movsd               qword ptr [eax + 8], xmm1
            //   f20f1100             | movsd               qword ptr [eax], xmm0
            //   8d4da4               | lea                 ecx, [ebp - 0x5c]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_3 = { e8???????? 83c404 f20f104c2438 f20f10542430 f20f10442440 f20f118c2498000000 f20f104c2428 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   f20f104c2438         | movsd               xmm1, qword ptr [esp + 0x38]
            //   f20f10542430         | movsd               xmm2, qword ptr [esp + 0x30]
            //   f20f10442440         | movsd               xmm0, qword ptr [esp + 0x40]
            //   f20f118c2498000000     | movsd    qword ptr [esp + 0x98], xmm1
            //   f20f104c2428         | movsd               xmm1, qword ptr [esp + 0x28]

        $sequence_4 = { 89de c1c213 c1c60a 014df0 3345e8 31d6 89da }
            // n = 7, score = 100
            //   89de                 | mov                 esi, ebx
            //   c1c213               | rol                 edx, 0x13
            //   c1c60a               | rol                 esi, 0xa
            //   014df0               | add                 dword ptr [ebp - 0x10], ecx
            //   3345e8               | xor                 eax, dword ptr [ebp - 0x18]
            //   31d6                 | xor                 esi, edx
            //   89da                 | mov                 edx, ebx

        $sequence_5 = { e9???????? 89d8 eb0a 39de 89f0 0f8296000000 89442410 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   89d8                 | mov                 eax, ebx
            //   eb0a                 | jmp                 0xc
            //   39de                 | cmp                 esi, ebx
            //   89f0                 | mov                 eax, esi
            //   0f8296000000         | jb                  0x9c
            //   89442410             | mov                 dword ptr [esp + 0x10], eax

        $sequence_6 = { f20f11442440 f20f114c2428 f20f108c2498010000 f20f11542418 f20f114c2420 89da 8d842418010000 }
            // n = 7, score = 100
            //   f20f11442440         | movsd               qword ptr [esp + 0x40], xmm0
            //   f20f114c2428         | movsd               qword ptr [esp + 0x28], xmm1
            //   f20f108c2498010000     | movsd    xmm1, qword ptr [esp + 0x198]
            //   f20f11542418         | movsd               qword ptr [esp + 0x18], xmm2
            //   f20f114c2420         | movsd               qword ptr [esp + 0x20], xmm1
            //   89da                 | mov                 edx, ebx
            //   8d842418010000       | lea                 eax, [esp + 0x118]

        $sequence_7 = { bf30000000 660f1f440000 85c9 744b 89f0 895dec ba37000000 }
            // n = 7, score = 100
            //   bf30000000           | mov                 edi, 0x30
            //   660f1f440000         | nop                 word ptr [eax + eax]
            //   85c9                 | test                ecx, ecx
            //   744b                 | je                  0x4d
            //   89f0                 | mov                 eax, esi
            //   895dec               | mov                 dword ptr [ebp - 0x14], ebx
            //   ba37000000           | mov                 edx, 0x37

        $sequence_8 = { 8d8c24c8010000 e8???????? e9???????? 8b442414 85c0 740e f0ff08 }
            // n = 7, score = 100
            //   8d8c24c8010000       | lea                 ecx, [esp + 0x1c8]
            //   e8????????           |                     
            //   e9????????           |                     
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10
            //   f0ff08               | lock dec            dword ptr [eax]

        $sequence_9 = { 8b4de4 8b55d8 8903 894b04 895308 8b4df0 8b55e0 }
            // n = 7, score = 100
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   8b55d8               | mov                 edx, dword ptr [ebp - 0x28]
            //   8903                 | mov                 dword ptr [ebx], eax
            //   894b04               | mov                 dword ptr [ebx + 4], ecx
            //   895308               | mov                 dword ptr [ebx + 8], edx
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]

    condition:
        7 of them and filesize < 3340288
}
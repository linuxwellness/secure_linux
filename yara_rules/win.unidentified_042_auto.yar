rule win_unidentified_042_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.unidentified_042."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_042"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 8d8d68e1ffff 51 8d9554f7ffff 52 89b550f7ffff e8???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8d8d68e1ffff         | lea                 ecx, [ebp - 0x1e98]
            //   51                   | push                ecx
            //   8d9554f7ffff         | lea                 edx, [ebp - 0x8ac]
            //   52                   | push                edx
            //   89b550f7ffff         | mov                 dword ptr [ebp - 0x8b0], esi
            //   e8????????           |                     

        $sequence_1 = { 035df0 57 51 53 e8???????? 0375f0 8b4dfc }
            // n = 7, score = 100
            //   035df0               | add                 ebx, dword ptr [ebp - 0x10]
            //   57                   | push                edi
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   e8????????           |                     
            //   0375f0               | add                 esi, dword ptr [ebp - 0x10]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_2 = { c7859cfbffffcde2e7ee c785a0fbffffdfe2e6ee c785a4fbffff8b8b8bcc c785a8fbffffeeffcac8 c785acfbffffdb8b8bcc c785b0fbffffeeffdbf9 c785b4fbffffe4e8eef8 }
            // n = 7, score = 100
            //   c7859cfbffffcde2e7ee     | mov    dword ptr [ebp - 0x464], 0xeee7e2cd
            //   c785a0fbffffdfe2e6ee     | mov    dword ptr [ebp - 0x460], 0xeee6e2df
            //   c785a4fbffff8b8b8bcc     | mov    dword ptr [ebp - 0x45c], 0xcc8b8b8b
            //   c785a8fbffffeeffcac8     | mov    dword ptr [ebp - 0x458], 0xc8caffee
            //   c785acfbffffdb8b8bcc     | mov    dword ptr [ebp - 0x454], 0xcc8b8bdb
            //   c785b0fbffffeeffdbf9     | mov    dword ptr [ebp - 0x450], 0xf9dbffee
            //   c785b4fbffffe4e8eef8     | mov    dword ptr [ebp - 0x44c], 0xf8eee8e4

        $sequence_3 = { 6689887c010000 33c0 c3 0fb7887c010000 f6c110 7596 83c910 }
            // n = 7, score = 100
            //   6689887c010000       | mov                 word ptr [eax + 0x17c], cx
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   0fb7887c010000       | movzx               ecx, word ptr [eax + 0x17c]
            //   f6c110               | test                cl, 0x10
            //   7596                 | jne                 0xffffff98
            //   83c910               | or                  ecx, 0x10

        $sequence_4 = { 8d140f 52 50 e8???????? 8b4304 c6040600 8b4510 }
            // n = 7, score = 100
            //   8d140f               | lea                 edx, [edi + ecx]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   c6040600             | mov                 byte ptr [esi + eax], 0
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_5 = { 5d c3 ff15???????? 83c404 8b85d8fdffff 5f 5e }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4
            //   8b85d8fdffff         | mov                 eax, dword ptr [ebp - 0x228]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_6 = { 0f9ec1 6a00 ba???????? 49 23c8 890d???????? 33c9 }
            // n = 7, score = 100
            //   0f9ec1               | setle               cl
            //   6a00                 | push                0
            //   ba????????           |                     
            //   49                   | dec                 ecx
            //   23c8                 | and                 ecx, eax
            //   890d????????         |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_7 = { 8bfe c1ee03 c1cb12 c1cf07 33df 33de 8bb5d8feffff }
            // n = 7, score = 100
            //   8bfe                 | mov                 edi, esi
            //   c1ee03               | shr                 esi, 3
            //   c1cb12               | ror                 ebx, 0x12
            //   c1cf07               | ror                 edi, 7
            //   33df                 | xor                 ebx, edi
            //   33de                 | xor                 ebx, esi
            //   8bb5d8feffff         | mov                 esi, dword ptr [ebp - 0x128]

        $sequence_8 = { 8d7101 8902 3b750c 7608 b87cffffff 5e 5d }
            // n = 7, score = 100
            //   8d7101               | lea                 esi, [ecx + 1]
            //   8902                 | mov                 dword ptr [edx], eax
            //   3b750c               | cmp                 esi, dword ptr [ebp + 0xc]
            //   7608                 | jbe                 0xa
            //   b87cffffff           | mov                 eax, 0xffffff7c
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_9 = { 52 8b5608 50 8d8df8f9ffff 51 83c204 52 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   8b5608               | mov                 edx, dword ptr [esi + 8]
            //   50                   | push                eax
            //   8d8df8f9ffff         | lea                 ecx, [ebp - 0x608]
            //   51                   | push                ecx
            //   83c204               | add                 edx, 4
            //   52                   | push                edx

    condition:
        7 of them and filesize < 516096
}
rule win_rokku_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.rokku."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rokku"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 894c242c 8b4e04 334a04 23c8 8b7e18 335a14 337a18 }
            // n = 7, score = 200
            //   894c242c             | mov                 dword ptr [esp + 0x2c], ecx
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   334a04               | xor                 ecx, dword ptr [edx + 4]
            //   23c8                 | and                 ecx, eax
            //   8b7e18               | mov                 edi, dword ptr [esi + 0x18]
            //   335a14               | xor                 ebx, dword ptr [edx + 0x14]
            //   337a18               | xor                 edi, dword ptr [edx + 0x18]

        $sequence_1 = { 8b4704 8930 8a45fc fec8 897704 8845fc }
            // n = 6, score = 200
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   8930                 | mov                 dword ptr [eax], esi
            //   8a45fc               | mov                 al, byte ptr [ebp - 4]
            //   fec8                 | dec                 al
            //   897704               | mov                 dword ptr [edi + 4], esi
            //   8845fc               | mov                 byte ptr [ebp - 4], al

        $sequence_2 = { 8d5728 8d4d28 e8???????? 59 53 8d4d50 8bd6 }
            // n = 7, score = 200
            //   8d5728               | lea                 edx, [edi + 0x28]
            //   8d4d28               | lea                 ecx, [ebp + 0x28]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   53                   | push                ebx
            //   8d4d50               | lea                 ecx, [ebp + 0x50]
            //   8bd6                 | mov                 edx, esi

        $sequence_3 = { 0f1145ad 0f2805???????? 0f1145bd 0f2805???????? 0f1145cd 0f2805???????? 0f1145dd }
            // n = 7, score = 200
            //   0f1145ad             | movups              xmmword ptr [ebp - 0x53], xmm0
            //   0f2805????????       |                     
            //   0f1145bd             | movups              xmmword ptr [ebp - 0x43], xmm0
            //   0f2805????????       |                     
            //   0f1145cd             | movups              xmmword ptr [ebp - 0x33], xmm0
            //   0f2805????????       |                     
            //   0f1145dd             | movups              xmmword ptr [ebp - 0x23], xmm0

        $sequence_4 = { 8b442468 894a08 8b8c2494000000 0fa4c119 8b8c2498000000 c1e019 2bc8 }
            // n = 7, score = 200
            //   8b442468             | mov                 eax, dword ptr [esp + 0x68]
            //   894a08               | mov                 dword ptr [edx + 8], ecx
            //   8b8c2494000000       | mov                 ecx, dword ptr [esp + 0x94]
            //   0fa4c119             | shld                ecx, eax, 0x19
            //   8b8c2498000000       | mov                 ecx, dword ptr [esp + 0x98]
            //   c1e019               | shl                 eax, 0x19
            //   2bc8                 | sub                 ecx, eax

        $sequence_5 = { 8b442404 8b4c2408 c744880402000000 33c0 40 }
            // n = 5, score = 200
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   c744880402000000     | mov                 dword ptr [eax + ecx*4 + 4], 2
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax

        $sequence_6 = { 01442420 8b442434 1154241c f76c2444 01442420 8b442464 1154241c }
            // n = 7, score = 200
            //   01442420             | add                 dword ptr [esp + 0x20], eax
            //   8b442434             | mov                 eax, dword ptr [esp + 0x34]
            //   1154241c             | adc                 dword ptr [esp + 0x1c], edx
            //   f76c2444             | imul                dword ptr [esp + 0x44]
            //   01442420             | add                 dword ptr [esp + 0x20], eax
            //   8b442464             | mov                 eax, dword ptr [esp + 0x64]
            //   1154241c             | adc                 dword ptr [esp + 0x1c], edx

        $sequence_7 = { e8???????? e8???????? b161 c744240c610f1505 c74424100d0d4f05 8bc3 66c74424140d0d }
            // n = 7, score = 200
            //   e8????????           |                     
            //   e8????????           |                     
            //   b161                 | mov                 cl, 0x61
            //   c744240c610f1505     | mov                 dword ptr [esp + 0xc], 0x5150f61
            //   c74424100d0d4f05     | mov                 dword ptr [esp + 0x10], 0x54f0d0d
            //   8bc3                 | mov                 eax, ebx
            //   66c74424140d0d       | mov                 word ptr [esp + 0x14], 0xd0d

        $sequence_8 = { 23742450 8b44243c 0bf1 8b4c2414 8bd0 23442428 }
            // n = 6, score = 200
            //   23742450             | and                 esi, dword ptr [esp + 0x50]
            //   8b44243c             | mov                 eax, dword ptr [esp + 0x3c]
            //   0bf1                 | or                  esi, ecx
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   8bd0                 | mov                 edx, eax
            //   23442428             | and                 eax, dword ptr [esp + 0x28]

        $sequence_9 = { 8b00 3303 334b24 23c5 23cd 8beb 8b5c2424 }
            // n = 7, score = 200
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   3303                 | xor                 eax, dword ptr [ebx]
            //   334b24               | xor                 ecx, dword ptr [ebx + 0x24]
            //   23c5                 | and                 eax, ebp
            //   23cd                 | and                 ecx, ebp
            //   8beb                 | mov                 ebp, ebx
            //   8b5c2424             | mov                 ebx, dword ptr [esp + 0x24]

    condition:
        7 of them and filesize < 548864
}
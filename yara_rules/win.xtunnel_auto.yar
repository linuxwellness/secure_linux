rule win_xtunnel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.xtunnel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xtunnel"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a442430 8b4f58 888778010000 83c40c c7811c04000001000000 eb6d }
            // n = 6, score = 1200
            //   8a442430             | mov                 al, byte ptr [esp + 0x30]
            //   8b4f58               | mov                 ecx, dword ptr [edi + 0x58]
            //   888778010000         | mov                 byte ptr [edi + 0x178], al
            //   83c40c               | add                 esp, 0xc
            //   c7811c04000001000000     | mov    dword ptr [ecx + 0x41c], 1
            //   eb6d                 | jmp                 0x6f

        $sequence_1 = { 8a0c30 84c9 0f84fc010000 0fb6c9 8d440801 3bc5 }
            // n = 6, score = 1200
            //   8a0c30               | mov                 cl, byte ptr [eax + esi]
            //   84c9                 | test                cl, cl
            //   0f84fc010000         | je                  0x202
            //   0fb6c9               | movzx               ecx, cl
            //   8d440801             | lea                 eax, [eax + ecx + 1]
            //   3bc5                 | cmp                 eax, ebp

        $sequence_2 = { 8a442414 8d7702 6a00 8d7e09 c60601 }
            // n = 5, score = 1200
            //   8a442414             | mov                 al, byte ptr [esp + 0x14]
            //   8d7702               | lea                 esi, [edi + 2]
            //   6a00                 | push                0
            //   8d7e09               | lea                 edi, [esi + 9]
            //   c60601               | mov                 byte ptr [esi], 1

        $sequence_3 = { 8a542414 8d5f09 880b 885301 8b7558 68???????? 8d4325 }
            // n = 7, score = 1200
            //   8a542414             | mov                 dl, byte ptr [esp + 0x14]
            //   8d5f09               | lea                 ebx, [edi + 9]
            //   880b                 | mov                 byte ptr [ebx], cl
            //   885301               | mov                 byte ptr [ebx + 1], dl
            //   8b7558               | mov                 esi, dword ptr [ebp + 0x58]
            //   68????????           |                     
            //   8d4325               | lea                 eax, [ebx + 0x25]

        $sequence_4 = { 8b4c2410 8bd7 2bd0 2bd3 2bd1 83ea07 0f881f020000 }
            // n = 7, score = 1200
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   8bd7                 | mov                 edx, edi
            //   2bd0                 | sub                 edx, eax
            //   2bd3                 | sub                 edx, ebx
            //   2bd1                 | sub                 edx, ecx
            //   83ea07               | sub                 edx, 7
            //   0f881f020000         | js                  0x225

        $sequence_5 = { e8???????? 99 b960000000 f7f9 }
            // n = 4, score = 1200
            //   e8????????           |                     
            //   99                   | cdq                 
            //   b960000000           | mov                 ecx, 0x60
            //   f7f9                 | idiv                ecx

        $sequence_6 = { 8b96c0000000 83c408 894210 85c0 0f89e1f8ffff 68f90a0000 }
            // n = 6, score = 1200
            //   8b96c0000000         | mov                 edx, dword ptr [esi + 0xc0]
            //   83c408               | add                 esp, 8
            //   894210               | mov                 dword ptr [edx + 0x10], eax
            //   85c0                 | test                eax, eax
            //   0f89e1f8ffff         | jns                 0xfffff8e7
            //   68f90a0000           | push                0xaf9

        $sequence_7 = { eb83 6a32 6a02 55 e8???????? 6896070000 }
            // n = 6, score = 1200
            //   eb83                 | jmp                 0xffffff85
            //   6a32                 | push                0x32
            //   6a02                 | push                2
            //   55                   | push                ebp
            //   e8????????           |                     
            //   6896070000           | push                0x796

        $sequence_8 = { 8b11 83c202 52 e8???????? }
            // n = 4, score = 1200
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   83c202               | add                 edx, 2
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_9 = { 8a0b 43 84c9 75f9 2bda 81fbff000000 0f8fb7000000 }
            // n = 7, score = 1200
            //   8a0b                 | mov                 cl, byte ptr [ebx]
            //   43                   | inc                 ebx
            //   84c9                 | test                cl, cl
            //   75f9                 | jne                 0xfffffffb
            //   2bda                 | sub                 ebx, edx
            //   81fbff000000         | cmp                 ebx, 0xff
            //   0f8fb7000000         | jg                  0xbd

        $sequence_10 = { c7010c000000 5e 5d c3 6a00 }
            // n = 5, score = 1100
            //   c7010c000000         | mov                 dword ptr [ecx], 0xc
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   6a00                 | push                0

        $sequence_11 = { 83c404 3bc3 743d 8b4d0c 8b5104 895004 }
            // n = 6, score = 1000
            //   83c404               | add                 esp, 4
            //   3bc3                 | cmp                 eax, ebx
            //   743d                 | je                  0x3f
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   895004               | mov                 dword ptr [eax + 4], edx

        $sequence_12 = { 8b4604 894008 8b4604 c6401401 8b4e04 }
            // n = 5, score = 1000
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   894008               | mov                 dword ptr [eax + 8], eax
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   c6401401             | mov                 byte ptr [eax + 0x14], 1
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]

        $sequence_13 = { 2bd1 d1fa 83c404 03d2 52 51 }
            // n = 6, score = 1000
            //   2bd1                 | sub                 edx, ecx
            //   d1fa                 | sar                 edx, 1
            //   83c404               | add                 esp, 4
            //   03d2                 | add                 edx, edx
            //   52                   | push                edx
            //   51                   | push                ecx

        $sequence_14 = { 89750c e8???????? 833800 7516 83c8ff }
            // n = 5, score = 1000
            //   89750c               | mov                 dword ptr [ebp + 0xc], esi
            //   e8????????           |                     
            //   833800               | cmp                 dword ptr [eax], 0
            //   7516                 | jne                 0x18
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_15 = { 895dec c645fc0b 8b4304 8b08 }
            // n = 4, score = 1000
            //   895dec               | mov                 dword ptr [ebp - 0x14], ebx
            //   c645fc0b             | mov                 byte ptr [ebp - 4], 0xb
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_16 = { 8b4e34 c6411401 8b5634 c6421501 c645fc03 6a18 }
            // n = 6, score = 1000
            //   8b4e34               | mov                 ecx, dword ptr [esi + 0x34]
            //   c6411401             | mov                 byte ptr [ecx + 0x14], 1
            //   8b5634               | mov                 edx, dword ptr [esi + 0x34]
            //   c6421501             | mov                 byte ptr [edx + 0x15], 1
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   6a18                 | push                0x18

        $sequence_17 = { 8910 8b4e14 894814 0fb7560a 6689500a 8b4e0c }
            // n = 6, score = 1000
            //   8910                 | mov                 dword ptr [eax], edx
            //   8b4e14               | mov                 ecx, dword ptr [esi + 0x14]
            //   894814               | mov                 dword ptr [eax + 0x14], ecx
            //   0fb7560a             | movzx               edx, word ptr [esi + 0xa]
            //   6689500a             | mov                 word ptr [eax + 0xa], dx
            //   8b4e0c               | mov                 ecx, dword ptr [esi + 0xc]

        $sequence_18 = { 8b4010 50 ff15???????? 8b4b10 }
            // n = 4, score = 1000
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b4b10               | mov                 ecx, dword ptr [ebx + 0x10]

        $sequence_19 = { 83c404 8945b0 8b45b4 50 }
            // n = 4, score = 500
            //   83c404               | add                 esp, 4
            //   8945b0               | mov                 dword ptr [ebp - 0x50], eax
            //   8b45b4               | mov                 eax, dword ptr [ebp - 0x4c]
            //   50                   | push                eax

        $sequence_20 = { c685c5f9ffff6d c685c6f9ffff81 c685c7f9ffffc2 c685c8f9ffff82 }
            // n = 4, score = 300
            //   c685c5f9ffff6d       | mov                 byte ptr [ebp - 0x63b], 0x6d
            //   c685c6f9ffff81       | mov                 byte ptr [ebp - 0x63a], 0x81
            //   c685c7f9ffffc2       | mov                 byte ptr [ebp - 0x639], 0xc2
            //   c685c8f9ffff82       | mov                 byte ptr [ebp - 0x638], 0x82

        $sequence_21 = { c685c5f8ffff80 c685c6f8ffffa4 c685c7f8ffff16 c685c8f8ffff8d c685c9f8ffff15 c685caf8ffff76 c685cbf8ffff2e }
            // n = 7, score = 300
            //   c685c5f8ffff80       | mov                 byte ptr [ebp - 0x73b], 0x80
            //   c685c6f8ffffa4       | mov                 byte ptr [ebp - 0x73a], 0xa4
            //   c685c7f8ffff16       | mov                 byte ptr [ebp - 0x739], 0x16
            //   c685c8f8ffff8d       | mov                 byte ptr [ebp - 0x738], 0x8d
            //   c685c9f8ffff15       | mov                 byte ptr [ebp - 0x737], 0x15
            //   c685caf8ffff76       | mov                 byte ptr [ebp - 0x736], 0x76
            //   c685cbf8ffff2e       | mov                 byte ptr [ebp - 0x735], 0x2e

        $sequence_22 = { c685c5fafffff2 c685c6faffffb3 c685c7faffff12 c685c8faffffbb }
            // n = 4, score = 300
            //   c685c5fafffff2       | mov                 byte ptr [ebp - 0x53b], 0xf2
            //   c685c6faffffb3       | mov                 byte ptr [ebp - 0x53a], 0xb3
            //   c685c7faffff12       | mov                 byte ptr [ebp - 0x539], 0x12
            //   c685c8faffffbb       | mov                 byte ptr [ebp - 0x538], 0xbb

        $sequence_23 = { c685c5fbffffbb c685c6fbffffe6 c685c7fbffff36 c685c8fbffffd5 }
            // n = 4, score = 300
            //   c685c5fbffffbb       | mov                 byte ptr [ebp - 0x43b], 0xbb
            //   c685c6fbffffe6       | mov                 byte ptr [ebp - 0x43a], 0xe6
            //   c685c7fbffff36       | mov                 byte ptr [ebp - 0x439], 0x36
            //   c685c8fbffffd5       | mov                 byte ptr [ebp - 0x438], 0xd5

    condition:
        7 of them and filesize < 4634440
}
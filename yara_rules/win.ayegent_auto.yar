rule win_ayegent_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.ayegent."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ayegent"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c42c 6a00 68???????? ff15???????? 6870170000 }
            // n = 5, score = 100
            //   83c42c               | add                 esp, 0x2c
            //   6a00                 | push                0
            //   68????????           |                     
            //   ff15????????         |                     
            //   6870170000           | push                0x1770

        $sequence_1 = { 50 8d8c2434030000 53 51 68???????? }
            // n = 5, score = 100
            //   50                   | push                eax
            //   8d8c2434030000       | lea                 ecx, [esp + 0x334]
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   68????????           |                     

        $sequence_2 = { aa 8d442408 56 50 ff15???????? }
            // n = 5, score = 100
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8d442408             | lea                 eax, [esp + 8]
            //   56                   | push                esi
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_3 = { 83c9ff 33c0 8d542460 f2ae f7d1 2bf9 8944240c }
            // n = 7, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   8d542460             | lea                 edx, [esp + 0x60]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax

        $sequence_4 = { 6804010000 aa e8???????? 83c408 ff15???????? 8d542420 }
            // n = 6, score = 100
            //   6804010000           | push                0x104
            //   aa                   | stosb               byte ptr es:[edi], al
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   ff15????????         |                     
            //   8d542420             | lea                 edx, [esp + 0x20]

        $sequence_5 = { 68???????? ff15???????? 6870170000 e8???????? 8b4c2410 }
            // n = 5, score = 100
            //   68????????           |                     
            //   ff15????????         |                     
            //   6870170000           | push                0x1770
            //   e8????????           |                     
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]

        $sequence_6 = { c744244444000000 c744244c74744000 c744247001000000 e8???????? 68401f0000 }
            // n = 5, score = 100
            //   c744244444000000     | mov                 dword ptr [esp + 0x44], 0x44
            //   c744244c74744000     | mov                 dword ptr [esp + 0x4c], 0x407474
            //   c744247001000000     | mov                 dword ptr [esp + 0x70], 1
            //   e8????????           |                     
            //   68401f0000           | push                0x1f40

        $sequence_7 = { a3???????? ffd6 a3???????? b940000000 33c0 8d7c241d c644241c00 }
            // n = 7, score = 100
            //   a3????????           |                     
            //   ffd6                 | call                esi
            //   a3????????           |                     
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8d7c241d             | lea                 edi, [esp + 0x1d]
            //   c644241c00           | mov                 byte ptr [esp + 0x1c], 0

        $sequence_8 = { 66ab 8b2d???????? 8d942424010000 aa 52 8d842434030000 }
            // n = 6, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   8b2d????????         |                     
            //   8d942424010000       | lea                 edx, [esp + 0x124]
            //   aa                   | stosb               byte ptr es:[edi], al
            //   52                   | push                edx
            //   8d842434030000       | lea                 eax, [esp + 0x334]

        $sequence_9 = { 52 8d842434030000 6808020000 50 53 68???????? }
            // n = 6, score = 100
            //   52                   | push                edx
            //   8d842434030000       | lea                 eax, [esp + 0x334]
            //   6808020000           | push                0x208
            //   50                   | push                eax
            //   53                   | push                ebx
            //   68????????           |                     

    condition:
        7 of them and filesize < 90112
}
rule win_applejeus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.applejeus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.applejeus"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4dd8 6a0c c700???????? 894808 e8???????? 8bce 894598 }
            // n = 7, score = 100
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   6a0c                 | push                0xc
            //   c700????????         |                     
            //   894808               | mov                 dword ptr [eax + 8], ecx
            //   e8????????           |                     
            //   8bce                 | mov                 ecx, esi
            //   894598               | mov                 dword ptr [ebp - 0x68], eax

        $sequence_1 = { 8b8560f6ffff 0422 83f034 888586f6ffff 8b8560f6ffff 0423 83f03b }
            // n = 7, score = 100
            //   8b8560f6ffff         | mov                 eax, dword ptr [ebp - 0x9a0]
            //   0422                 | add                 al, 0x22
            //   83f034               | xor                 eax, 0x34
            //   888586f6ffff         | mov                 byte ptr [ebp - 0x97a], al
            //   8b8560f6ffff         | mov                 eax, dword ptr [ebp - 0x9a0]
            //   0423                 | add                 al, 0x23
            //   83f03b               | xor                 eax, 0x3b

        $sequence_2 = { 8b8588e8ffff 043b c685c8e8ffff00 83f00a 33d2 8885c7e8ffff 8a858ce8ffff }
            // n = 7, score = 100
            //   8b8588e8ffff         | mov                 eax, dword ptr [ebp - 0x1778]
            //   043b                 | add                 al, 0x3b
            //   c685c8e8ffff00       | mov                 byte ptr [ebp - 0x1738], 0
            //   83f00a               | xor                 eax, 0xa
            //   33d2                 | xor                 edx, edx
            //   8885c7e8ffff         | mov                 byte ptr [ebp - 0x1739], al
            //   8a858ce8ffff         | mov                 al, byte ptr [ebp - 0x1774]

        $sequence_3 = { 8bf8 57 89bdecefffff ff15???????? 686d050000 6a00 8bf0 }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   57                   | push                edi
            //   89bdecefffff         | mov                 dword ptr [ebp - 0x1014], edi
            //   ff15????????         |                     
            //   686d050000           | push                0x56d
            //   6a00                 | push                0
            //   8bf0                 | mov                 esi, eax

        $sequence_4 = { 897dd8 660fd64704 c707???????? 89770c 8b01 8b00 ffd0 }
            // n = 7, score = 100
            //   897dd8               | mov                 dword ptr [ebp - 0x28], edi
            //   660fd64704           | movq                qword ptr [edi + 4], xmm0
            //   c707????????         |                     
            //   89770c               | mov                 dword ptr [edi + 0xc], esi
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   ffd0                 | call                eax

        $sequence_5 = { 6a04 57 e8???????? 6a04 56 e8???????? c745cc00000000 }
            // n = 7, score = 100
            //   6a04                 | push                4
            //   57                   | push                edi
            //   e8????????           |                     
            //   6a04                 | push                4
            //   56                   | push                esi
            //   e8????????           |                     
            //   c745cc00000000       | mov                 dword ptr [ebp - 0x34], 0

        $sequence_6 = { 0408 83f055 884580 8b8574ffffff 0409 83f054 884581 }
            // n = 7, score = 100
            //   0408                 | add                 al, 8
            //   83f055               | xor                 eax, 0x55
            //   884580               | mov                 byte ptr [ebp - 0x80], al
            //   8b8574ffffff         | mov                 eax, dword ptr [ebp - 0x8c]
            //   0409                 | add                 al, 9
            //   83f054               | xor                 eax, 0x54
            //   884581               | mov                 byte ptr [ebp - 0x7f], al

        $sequence_7 = { 8b01 038528ffffff 8901 c78528ffffffd5030000 8b01 2b8528ffffff }
            // n = 6, score = 100
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   038528ffffff         | add                 eax, dword ptr [ebp - 0xd8]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   c78528ffffffd5030000     | mov    dword ptr [ebp - 0xd8], 0x3d5
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   2b8528ffffff         | sub                 eax, dword ptr [ebp - 0xd8]

        $sequence_8 = { e9???????? 83e90c e9???????? 3b0d???????? f27502 f2c3 f2e939050000 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   83e90c               | sub                 ecx, 0xc
            //   e9????????           |                     
            //   3b0d????????         |                     
            //   f27502               | bnd jne             5
            //   f2c3                 | bnd ret             
            //   f2e939050000         | bnd jmp             0x53f

        $sequence_9 = { 8945e4 8d45d8 c745d810654200 897ddc 8975e0 0f1145b8 50 }
            // n = 7, score = 100
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   c745d810654200       | mov                 dword ptr [ebp - 0x28], 0x426510
            //   897ddc               | mov                 dword ptr [ebp - 0x24], edi
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   0f1145b8             | movups              xmmword ptr [ebp - 0x48], xmm0
            //   50                   | push                eax

    condition:
        7 of them and filesize < 1245184
}
rule elf_satori_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects elf.satori."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/elf.satori"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 01d0 89c2 c1ea10 75f2 5a f7d0 0fb7c0 }
            // n = 7, score = 100
            //   01d0                 | add                 eax, edx
            //   89c2                 | mov                 edx, eax
            //   c1ea10               | shr                 edx, 0x10
            //   75f2                 | jne                 0xfffffff4
            //   5a                   | pop                 edx
            //   f7d0                 | not                 eax
            //   0fb7c0               | movzx               eax, ax

        $sequence_1 = { c3 55 57 56 53 83ec2c 8b6c2444 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   57                   | push                edi
            //   56                   | push                esi
            //   53                   | push                ebx
            //   83ec2c               | sub                 esp, 0x2c
            //   8b6c2444             | mov                 ebp, dword ptr [esp + 0x44]

        $sequence_2 = { 6800400000 50 8d942450060000 52 }
            // n = 4, score = 100
            //   6800400000           | push                0x4000
            //   50                   | push                eax
            //   8d942450060000       | lea                 edx, [esp + 0x650]
            //   52                   | push                edx

        $sequence_3 = { 6a03 56 53 e8???????? 0fb7c0 }
            // n = 5, score = 100
            //   6a03                 | push                3
            //   56                   | push                esi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   0fb7c0               | movzx               eax, ax

        $sequence_4 = { 8db4241c050000 56 e8???????? c6841c2005000000 58 5a 56 }
            // n = 7, score = 100
            //   8db4241c050000       | lea                 esi, [esp + 0x51c]
            //   56                   | push                esi
            //   e8????????           |                     
            //   c6841c2005000000     | mov                 byte ptr [esp + ebx + 0x520], 0
            //   58                   | pop                 eax
            //   5a                   | pop                 edx
            //   56                   | push                esi

        $sequence_5 = { e9???????? 0fbe19 b800000080 41 c744240801000000 eb12 }
            // n = 6, score = 100
            //   e9????????           |                     
            //   0fbe19               | movsx               ebx, byte ptr [ecx]
            //   b800000080           | mov                 eax, 0x80000000
            //   41                   | inc                 ecx
            //   c744240801000000     | mov                 dword ptr [esp + 8], 1
            //   eb12                 | jmp                 0x14

        $sequence_6 = { 51 6a00 6a01 6a02 e8???????? 83c410 83f8ff }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   83f8ff               | cmp                 eax, -1

        $sequence_7 = { 89542408 740c 8b10 8b442408 8802 ff01 }
            // n = 6, score = 100
            //   89542408             | mov                 dword ptr [esp + 8], edx
            //   740c                 | je                  0xe
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   8802                 | mov                 byte ptr [edx], al
            //   ff01                 | inc                 dword ptr [ecx]

        $sequence_8 = { 89e5 57 56 53 81ec7c060000 e8???????? 89e3 }
            // n = 7, score = 100
            //   89e5                 | mov                 ebp, esp
            //   57                   | push                edi
            //   56                   | push                esi
            //   53                   | push                ebx
            //   81ec7c060000         | sub                 esp, 0x67c
            //   e8????????           |                     
            //   89e3                 | mov                 ebx, esp

        $sequence_9 = { 89460c 66837c2414ff 7509 e8???????? 66894604 66837c241cff }
            // n = 6, score = 100
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   66837c2414ff         | cmp                 word ptr [esp + 0x14], -1
            //   7509                 | jne                 0xb
            //   e8????????           |                     
            //   66894604             | mov                 word ptr [esi + 4], ax
            //   66837c241cff         | cmp                 word ptr [esp + 0x1c], -1

    condition:
        7 of them and filesize < 122880
}
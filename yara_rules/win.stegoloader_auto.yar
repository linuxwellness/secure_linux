rule win_stegoloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.stegoloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stegoloader"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b400c 8b400c 53 c645ec6e }
            // n = 4, score = 200
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   53                   | push                ebx
            //   c645ec6e             | mov                 byte ptr [ebp - 0x14], 0x6e

        $sequence_1 = { 84c0 7411 ff7518 ff750c ff7510 e8???????? 83c40c }
            // n = 7, score = 200
            //   84c0                 | test                al, al
            //   7411                 | je                  0x13
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_2 = { 7612 8bd0 8b043e 8b4dfc 03c1 0108 83c604 }
            // n = 7, score = 200
            //   7612                 | jbe                 0x14
            //   8bd0                 | mov                 edx, eax
            //   8b043e               | mov                 eax, dword ptr [esi + edi]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   03c1                 | add                 eax, ecx
            //   0108                 | add                 dword ptr [eax], ecx
            //   83c604               | add                 esi, 4

        $sequence_3 = { eb4d 8b4c2410 8b4704 8908 8b4e28 }
            // n = 5, score = 200
            //   eb4d                 | jmp                 0x4f
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b4e28               | mov                 ecx, dword ptr [esi + 0x28]

        $sequence_4 = { 8b45f8 c1e808 0fb6c0 3bc6 7c01 47 0fb645f8 }
            // n = 7, score = 200
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   c1e808               | shr                 eax, 8
            //   0fb6c0               | movzx               eax, al
            //   3bc6                 | cmp                 eax, esi
            //   7c01                 | jl                  3
            //   47                   | inc                 edi
            //   0fb645f8             | movzx               eax, byte ptr [ebp - 8]

        $sequence_5 = { 8bcf ff5004 eb09 8b4508 8938 }
            // n = 5, score = 200
            //   8bcf                 | mov                 ecx, edi
            //   ff5004               | call                dword ptr [eax + 4]
            //   eb09                 | jmp                 0xb
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8938                 | mov                 dword ptr [eax], edi

        $sequence_6 = { c6460401 fec3 5e 8ac3 }
            // n = 4, score = 200
            //   c6460401             | mov                 byte ptr [esi + 4], 1
            //   fec3                 | inc                 bl
            //   5e                   | pop                 esi
            //   8ac3                 | mov                 al, bl

        $sequence_7 = { 41 41 83fe09 72e3 8b4018 5e 5b }
            // n = 7, score = 200
            //   41                   | inc                 ecx
            //   41                   | inc                 ecx
            //   83fe09               | cmp                 esi, 9
            //   72e3                 | jb                  0xffffffe5
            //   8b4018               | mov                 eax, dword ptr [eax + 0x18]
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_8 = { 894e20 8b4808 85c9 740b }
            // n = 4, score = 200
            //   894e20               | mov                 dword ptr [esi + 0x20], ecx
            //   8b4808               | mov                 ecx, dword ptr [eax + 8]
            //   85c9                 | test                ecx, ecx
            //   740b                 | je                  0xd

        $sequence_9 = { 8908 c645ff01 eb0a 8b4510 }
            // n = 4, score = 200
            //   8908                 | mov                 dword ptr [eax], ecx
            //   c645ff01             | mov                 byte ptr [ebp - 1], 1
            //   eb0a                 | jmp                 0xc
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_10 = { 1bdb f7d3 235dfc 3bdf }
            // n = 4, score = 200
            //   1bdb                 | sbb                 ebx, ebx
            //   f7d3                 | not                 ebx
            //   235dfc               | and                 ebx, dword ptr [ebp - 4]
            //   3bdf                 | cmp                 ebx, edi

        $sequence_11 = { 889c0df1feffff 72de 5f 8d0412 889c05f0feffff 889c05f1feffff }
            // n = 6, score = 200
            //   889c0df1feffff       | mov                 byte ptr [ebp + ecx - 0x10f], bl
            //   72de                 | jb                  0xffffffe0
            //   5f                   | pop                 edi
            //   8d0412               | lea                 eax, [edx + edx]
            //   889c05f0feffff       | mov                 byte ptr [ebp + eax - 0x110], bl
            //   889c05f1feffff       | mov                 byte ptr [ebp + eax - 0x10f], bl

        $sequence_12 = { 7603 8d34c6 ff4d08 759d }
            // n = 4, score = 200
            //   7603                 | jbe                 5
            //   8d34c6               | lea                 esi, [esi + eax*8]
            //   ff4d08               | dec                 dword ptr [ebp + 8]
            //   759d                 | jne                 0xffffff9f

        $sequence_13 = { 50 8d45f4 50 8b4508 53 53 ff5008 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   ff5008               | call                dword ptr [eax + 8]

        $sequence_14 = { c9 c3 56 33c9 83ceff }
            // n = 5, score = 200
            //   c9                   | leave               
            //   c3                   | ret                 
            //   56                   | push                esi
            //   33c9                 | xor                 ecx, ecx
            //   83ceff               | or                  esi, 0xffffffff

        $sequence_15 = { 8b4518 8901 8b4510 8918 8b4514 8938 c645ff01 }
            // n = 7, score = 200
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8918                 | mov                 dword ptr [eax], ebx
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   8938                 | mov                 dword ptr [eax], edi
            //   c645ff01             | mov                 byte ptr [ebp - 1], 1

    condition:
        7 of them and filesize < 802816
}
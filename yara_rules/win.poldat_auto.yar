rule win_poldat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.poldat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.poldat"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 81c46c0c0000 8d85ecfdffff 50 e8???????? }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   81c46c0c0000         | add                 esp, 0xc6c
            //   8d85ecfdffff         | lea                 eax, [ebp - 0x214]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { eb43 81ec580c0000 b916030000 be???????? }
            // n = 4, score = 100
            //   eb43                 | jmp                 0x45
            //   81ec580c0000         | sub                 esp, 0xc58
            //   b916030000           | mov                 ecx, 0x316
            //   be????????           |                     

        $sequence_2 = { 56 8975fc e8???????? 8d4dfc 8945f8 51 50 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   e8????????           |                     
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_3 = { 750a c74720a0324000 895728 395724 7507 c74724c0324000 }
            // n = 6, score = 100
            //   750a                 | jne                 0xc
            //   c74720a0324000       | mov                 dword ptr [edi + 0x20], 0x4032a0
            //   895728               | mov                 dword ptr [edi + 0x28], edx
            //   395724               | cmp                 dword ptr [edi + 0x24], edx
            //   7507                 | jne                 9
            //   c74724c0324000       | mov                 dword ptr [edi + 0x24], 0x4032c0

        $sequence_4 = { e8???????? 33c0 83c414 3945fc 0f8697000000 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   83c414               | add                 esp, 0x14
            //   3945fc               | cmp                 dword ptr [ebp - 4], eax
            //   0f8697000000         | jbe                 0x9d

        $sequence_5 = { 8065fb00 c7042400040000 8d8598fbffff 6a00 50 c645e06c c645e133 }
            // n = 7, score = 100
            //   8065fb00             | and                 byte ptr [ebp - 5], 0
            //   c7042400040000       | mov                 dword ptr [esp], 0x400
            //   8d8598fbffff         | lea                 eax, [ebp - 0x468]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   c645e06c             | mov                 byte ptr [ebp - 0x20], 0x6c
            //   c645e133             | mov                 byte ptr [ebp - 0x1f], 0x33

        $sequence_6 = { 7e6c 33d2 33c0 8a97c4934100 }
            // n = 4, score = 100
            //   7e6c                 | jle                 0x6e
            //   33d2                 | xor                 edx, edx
            //   33c0                 | xor                 eax, eax
            //   8a97c4934100         | mov                 dl, byte ptr [edi + 0x4193c4]

        $sequence_7 = { 807c180525 7523 807c18065e 751c 807c180726 7515 807c18082a }
            // n = 7, score = 100
            //   807c180525           | cmp                 byte ptr [eax + ebx + 5], 0x25
            //   7523                 | jne                 0x25
            //   807c18065e           | cmp                 byte ptr [eax + ebx + 6], 0x5e
            //   751c                 | jne                 0x1e
            //   807c180726           | cmp                 byte ptr [eax + ebx + 7], 0x26
            //   7515                 | jne                 0x17
            //   807c18082a           | cmp                 byte ptr [eax + ebx + 8], 0x2a

        $sequence_8 = { 6a00 8d441804 50 e8???????? }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   8d441804             | lea                 eax, [eax + ebx + 4]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_9 = { 8945f8 51 50 8d4510 56 50 }
            // n = 6, score = 100
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   51                   | push                ecx
            //   50                   | push                eax
            //   8d4510               | lea                 eax, [ebp + 0x10]
            //   56                   | push                esi
            //   50                   | push                eax

    condition:
        7 of them and filesize < 247808
}
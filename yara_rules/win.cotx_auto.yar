rule win_cotx_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.cotx."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cotx"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 75f9 8dbd98f6ffff 2bd6 4f }
            // n = 4, score = 500
            //   75f9                 | jne                 0xfffffffb
            //   8dbd98f6ffff         | lea                 edi, [ebp - 0x968]
            //   2bd6                 | sub                 edx, esi
            //   4f                   | dec                 edi

        $sequence_1 = { c1e902 f3a5 8bca 83e103 f3a4 8dbd98faffff 4f }
            // n = 7, score = 500
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8dbd98faffff         | lea                 edi, [ebp - 0x568]
            //   4f                   | dec                 edi

        $sequence_2 = { 50 e8???????? 83c40c 8d85c0f2ffff 50 }
            // n = 5, score = 500
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d85c0f2ffff         | lea                 eax, [ebp - 0xd40]
            //   50                   | push                eax

        $sequence_3 = { 83c448 c785c0fdffff52617354 8d85cefdffff c785c4fdffff6c732e64 }
            // n = 4, score = 500
            //   83c448               | add                 esp, 0x48
            //   c785c0fdffff52617354     | mov    dword ptr [ebp - 0x240], 0x54736152
            //   8d85cefdffff         | lea                 eax, [ebp - 0x232]
            //   c785c4fdffff6c732e64     | mov    dword ptr [ebp - 0x23c], 0x642e736c

        $sequence_4 = { c705????????a1a14538 c705????????2086e659 c705????????eec45abf c705????????bbee2bd1 c705????????3e20f129 c705????????42be62c1 }
            // n = 6, score = 500
            //   c705????????a1a14538     |     
            //   c705????????2086e659     |     
            //   c705????????eec45abf     |     
            //   c705????????bbee2bd1     |     
            //   c705????????3e20f129     |     
            //   c705????????42be62c1     |     

        $sequence_5 = { c705????????b60451f0 c705????????3f3f5288 c705????????6a62ae99 c705????????b872ad0c }
            // n = 4, score = 500
            //   c705????????b60451f0     |     
            //   c705????????3f3f5288     |     
            //   c705????????6a62ae99     |     
            //   c705????????b872ad0c     |     

        $sequence_6 = { 8b4dfc a3???????? e8???????? 8b15???????? 8bce a3???????? }
            // n = 6, score = 500
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   a3????????           |                     
            //   e8????????           |                     
            //   8b15????????         |                     
            //   8bce                 | mov                 ecx, esi
            //   a3????????           |                     

        $sequence_7 = { 0f1185a8faffff e8???????? 83c40c 8d45a0 6a40 }
            // n = 5, score = 500
            //   0f1185a8faffff       | movups              xmmword ptr [ebp - 0x558], xmm0
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d45a0               | lea                 eax, [ebp - 0x60]
            //   6a40                 | push                0x40

        $sequence_8 = { 8dbd98f6ffff 2bd6 4f 8a4701 47 84c0 }
            // n = 6, score = 500
            //   8dbd98f6ffff         | lea                 edi, [ebp - 0x968]
            //   2bd6                 | sub                 edx, esi
            //   4f                   | dec                 edi
            //   8a4701               | mov                 al, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c0                 | test                al, al

        $sequence_9 = { c785b8faffff39313044 c1e902 f3a5 8bca }
            // n = 4, score = 500
            //   c785b8faffff39313044     | mov    dword ptr [ebp - 0x548], 0x44303139
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx

    condition:
        7 of them and filesize < 1171456
}
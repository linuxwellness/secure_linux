rule win_terminator_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.terminator_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.terminator_rat"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89b521010000 6a01 58 5e }
            // n = 4, score = 500
            //   89b521010000         | mov                 dword ptr [ebp + 0x121], esi
            //   6a01                 | push                1
            //   58                   | pop                 eax
            //   5e                   | pop                 esi

        $sequence_1 = { 8d4618 50 8b8539010000 03c1 }
            // n = 4, score = 500
            //   8d4618               | lea                 eax, [esi + 0x18]
            //   50                   | push                eax
            //   8b8539010000         | mov                 eax, dword ptr [ebp + 0x139]
            //   03c1                 | add                 eax, ecx

        $sequence_2 = { 89853d010000 33c0 e9???????? ff7610 8b8d35010000 }
            // n = 5, score = 500
            //   89853d010000         | mov                 dword ptr [ebp + 0x13d], eax
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   ff7610               | push                dword ptr [esi + 0x10]
            //   8b8d35010000         | mov                 ecx, dword ptr [ebp + 0x135]

        $sequence_3 = { eb31 ff9509010000 3d4c270000 750e }
            // n = 4, score = 500
            //   eb31                 | jmp                 0x33
            //   ff9509010000         | call                dword ptr [ebp + 0x109]
            //   3d4c270000           | cmp                 eax, 0x274c
            //   750e                 | jne                 0x10

        $sequence_4 = { 8bdc 56 57 8b7b08 8bf7 }
            // n = 5, score = 500
            //   8bdc                 | mov                 ebx, esp
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7b08               | mov                 edi, dword ptr [ebx + 8]
            //   8bf7                 | mov                 esi, edi

        $sequence_5 = { 6800040000 50 e8???????? 8b7708 8d460c }
            // n = 5, score = 500
            //   6800040000           | push                0x400
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b7708               | mov                 esi, dword ptr [edi + 8]
            //   8d460c               | lea                 eax, [esi + 0xc]

        $sequence_6 = { ff5579 33db 85c0 0f84d1000000 }
            // n = 4, score = 500
            //   ff5579               | call                dword ptr [ebp + 0x79]
            //   33db                 | xor                 ebx, ebx
            //   85c0                 | test                eax, eax
            //   0f84d1000000         | je                  0xd7

        $sequence_7 = { 50 8d8784fcffff 50 ff553d 8b851d010000 33d2 }
            // n = 6, score = 500
            //   50                   | push                eax
            //   8d8784fcffff         | lea                 eax, [edi - 0x37c]
            //   50                   | push                eax
            //   ff553d               | call                dword ptr [ebp + 0x3d]
            //   8b851d010000         | mov                 eax, dword ptr [ebp + 0x11d]
            //   33d2                 | xor                 edx, edx

        $sequence_8 = { 8bf0 8d8549020000 50 56 ff5565 85c0 7403 }
            // n = 7, score = 500
            //   8bf0                 | mov                 esi, eax
            //   8d8549020000         | lea                 eax, [ebp + 0x249]
            //   50                   | push                eax
            //   56                   | push                esi
            //   ff5565               | call                dword ptr [ebp + 0x65]
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5

        $sequence_9 = { 3452 c0c803 3441 c0c803 aa }
            // n = 5, score = 500
            //   3452                 | xor                 al, 0x52
            //   c0c803               | ror                 al, 3
            //   3441                 | xor                 al, 0x41
            //   c0c803               | ror                 al, 3
            //   aa                   | stosb               byte ptr es:[edi], al

    condition:
        7 of them and filesize < 73728
}
rule win_hunter_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.hunter."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hunter"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf3 46 0fb6043e 50 e8???????? 59 85c0 }
            // n = 7, score = 100
            //   8bf3                 | mov                 esi, ebx
            //   46                   | inc                 esi
            //   0fb6043e             | movzx               eax, byte ptr [esi + edi]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax

        $sequence_1 = { 0f434508 56 68???????? 50 e8???????? 8bf0 59 }
            // n = 7, score = 100
            //   0f434508             | cmovae              eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx

        $sequence_2 = { 8b8290000000 85c0 7403 894828 83612800 898a90000000 c3 }
            // n = 7, score = 100
            //   8b8290000000         | mov                 eax, dword ptr [edx + 0x90]
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   894828               | mov                 dword ptr [eax + 0x28], ecx
            //   83612800             | and                 dword ptr [ecx + 0x28], 0
            //   898a90000000         | mov                 dword ptr [edx + 0x90], ecx
            //   c3                   | ret                 

        $sequence_3 = { eb0b 89551c 8bc6 895518 8975f4 ff7510 8b4df0 }
            // n = 7, score = 100
            //   eb0b                 | jmp                 0xd
            //   89551c               | mov                 dword ptr [ebp + 0x1c], edx
            //   8bc6                 | mov                 eax, esi
            //   895518               | mov                 dword ptr [ebp + 0x18], edx
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]

        $sequence_4 = { 53 8d95f4fbffff c645fc0d 8d8dc8feffff e8???????? 59 8d8d5cfeffff }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8d95f4fbffff         | lea                 edx, [ebp - 0x40c]
            //   c645fc0d             | mov                 byte ptr [ebp - 4], 0xd
            //   8d8dc8feffff         | lea                 ecx, [ebp - 0x138]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8d8d5cfeffff         | lea                 ecx, [ebp - 0x1a4]

        $sequence_5 = { e9???????? 8a4118 8a5718 3ac2 0f8489010000 3c63 7420 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8a4118               | mov                 al, byte ptr [ecx + 0x18]
            //   8a5718               | mov                 dl, byte ptr [edi + 0x18]
            //   3ac2                 | cmp                 al, dl
            //   0f8489010000         | je                  0x18f
            //   3c63                 | cmp                 al, 0x63
            //   7420                 | je                  0x22

        $sequence_6 = { 55 8bec 83ec10 56 8bf2 894dfc 57 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec10               | sub                 esp, 0x10
            //   56                   | push                esi
            //   8bf2                 | mov                 esi, edx
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   57                   | push                edi

        $sequence_7 = { 8bf3 c645fc01 eb0b 83feff 8d4601 0f44c6 8bf0 }
            // n = 7, score = 100
            //   8bf3                 | mov                 esi, ebx
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   eb0b                 | jmp                 0xd
            //   83feff               | cmp                 esi, -1
            //   8d4601               | lea                 eax, [esi + 1]
            //   0f44c6               | cmove               eax, esi
            //   8bf0                 | mov                 esi, eax

        $sequence_8 = { 898534ffffff 8d4706 3945e0 7c0b 8b8570ffffff 03c1 8945f8 }
            // n = 7, score = 100
            //   898534ffffff         | mov                 dword ptr [ebp - 0xcc], eax
            //   8d4706               | lea                 eax, [edi + 6]
            //   3945e0               | cmp                 dword ptr [ebp - 0x20], eax
            //   7c0b                 | jl                  0xd
            //   8b8570ffffff         | mov                 eax, dword ptr [ebp - 0x90]
            //   03c1                 | add                 eax, ecx
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_9 = { 8bd0 8d4dd8 e8???????? 59 59 46 3b7508 }
            // n = 7, score = 100
            //   8bd0                 | mov                 edx, eax
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   46                   | inc                 esi
            //   3b7508               | cmp                 esi, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 1056768
}
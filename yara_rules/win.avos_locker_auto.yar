rule win_avos_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.avos_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.avos_locker"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a64 8d8df4fcffff e8???????? 8885f5fcffff 6a69 8d8df4fcffff e8???????? }
            // n = 7, score = 100
            //   6a64                 | push                0x64
            //   8d8df4fcffff         | lea                 ecx, [ebp - 0x30c]
            //   e8????????           |                     
            //   8885f5fcffff         | mov                 byte ptr [ebp - 0x30b], al
            //   6a69                 | push                0x69
            //   8d8df4fcffff         | lea                 ecx, [ebp - 0x30c]
            //   e8????????           |                     

        $sequence_1 = { 6a00 57 c7430401000000 c7430801000000 c703???????? 897dd4 e8???????? }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   57                   | push                edi
            //   c7430401000000       | mov                 dword ptr [ebx + 4], 1
            //   c7430801000000       | mov                 dword ptr [ebx + 8], 1
            //   c703????????         |                     
            //   897dd4               | mov                 dword ptr [ebp - 0x2c], edi
            //   e8????????           |                     

        $sequence_2 = { 56 57 6800000100 c744241c5a003a00 c74424205c000000 c744241800000000 e8???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   6800000100           | push                0x10000
            //   c744241c5a003a00     | mov                 dword ptr [esp + 0x1c], 0x3a005a
            //   c74424205c000000     | mov                 dword ptr [esp + 0x20], 0x5c
            //   c744241800000000     | mov                 dword ptr [esp + 0x18], 0
            //   e8????????           |                     

        $sequence_3 = { 6a74 8d8d58fbffff e8???????? 88857afbffff 6a68 8d8d58fbffff e8???????? }
            // n = 7, score = 100
            //   6a74                 | push                0x74
            //   8d8d58fbffff         | lea                 ecx, [ebp - 0x4a8]
            //   e8????????           |                     
            //   88857afbffff         | mov                 byte ptr [ebp - 0x486], al
            //   6a68                 | push                0x68
            //   8d8d58fbffff         | lea                 ecx, [ebp - 0x4a8]
            //   e8????????           |                     

        $sequence_4 = { 8b4508 8b4018 99 8945f8 8b4de0 8b45e8 8b0c8de85e4c00 }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b4018               | mov                 eax, dword ptr [eax + 0x18]
            //   99                   | cdq                 
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b0c8de85e4c00       | mov                 ecx, dword ptr [ecx*4 + 0x4c5ee8]

        $sequence_5 = { 85c0 0f853d010000 eb74 80f975 754e a900080000 7447 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f853d010000         | jne                 0x143
            //   eb74                 | jmp                 0x76
            //   80f975               | cmp                 cl, 0x75
            //   754e                 | jne                 0x50
            //   a900080000           | test                eax, 0x800
            //   7447                 | je                  0x49

        $sequence_6 = { 32c0 8bcb 5e 8845a3 884590 e8???????? eb19 }
            // n = 7, score = 100
            //   32c0                 | xor                 al, al
            //   8bcb                 | mov                 ecx, ebx
            //   5e                   | pop                 esi
            //   8845a3               | mov                 byte ptr [ebp - 0x5d], al
            //   884590               | mov                 byte ptr [ebp - 0x70], al
            //   e8????????           |                     
            //   eb19                 | jmp                 0x1b

        $sequence_7 = { 6a5f 8d8d04efffff e8???????? 888520efffff 6a46 8d8d04efffff e8???????? }
            // n = 7, score = 100
            //   6a5f                 | push                0x5f
            //   8d8d04efffff         | lea                 ecx, [ebp - 0x10fc]
            //   e8????????           |                     
            //   888520efffff         | mov                 byte ptr [ebp - 0x10e0], al
            //   6a46                 | push                0x46
            //   8d8d04efffff         | lea                 ecx, [ebp - 0x10fc]
            //   e8????????           |                     

        $sequence_8 = { 33c5 50 8d45f4 64a300000000 894df0 c745fcffffffff 8b7108 }
            // n = 7, score = 100
            //   33c5                 | xor                 eax, ebp
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8b7108               | mov                 esi, dword ptr [ecx + 8]

        $sequence_9 = { 88850cfcffff 6a68 8d8df0fbffff e8???????? 88850dfcffff 6a0a 8d8df0fbffff }
            // n = 7, score = 100
            //   88850cfcffff         | mov                 byte ptr [ebp - 0x3f4], al
            //   6a68                 | push                0x68
            //   8d8df0fbffff         | lea                 ecx, [ebp - 0x410]
            //   e8????????           |                     
            //   88850dfcffff         | mov                 byte ptr [ebp - 0x3f3], al
            //   6a0a                 | push                0xa
            //   8d8df0fbffff         | lea                 ecx, [ebp - 0x410]

    condition:
        7 of them and filesize < 1701888
}
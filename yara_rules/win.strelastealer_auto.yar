rule win_strelastealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-29"
        version = "1"
        description = "Detects win.strelastealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.strelastealer"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 4e ffd3 33c9 }
            // n = 4, score = 100
            //   57                   | push                edi
            //   4e                   | dec                 esi
            //   ffd3                 | call                ebx
            //   33c9                 | xor                 ecx, ecx

        $sequence_1 = { 6a00 50 e8???????? 83c40c 8d4c240c 51 8d542414 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d4c240c             | lea                 ecx, [esp + 0xc]
            //   51                   | push                ecx
            //   8d542414             | lea                 edx, [esp + 0x14]

        $sequence_2 = { 51 6819000200 53 57 6801000080 ff15???????? }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   6819000200           | push                0x20019
            //   53                   | push                ebx
            //   57                   | push                edi
            //   6801000080           | push                0x80000001
            //   ff15????????         |                     

        $sequence_3 = { 8d8c2484040000 51 ff15???????? 68???????? 8d942484040000 52 ffd6 }
            // n = 7, score = 100
            //   8d8c2484040000       | lea                 ecx, [esp + 0x484]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   68????????           |                     
            //   8d942484040000       | lea                 edx, [esp + 0x484]
            //   52                   | push                edx
            //   ffd6                 | call                esi

        $sequence_4 = { 740e 8d942470020000 52 ffd6 85c0 }
            // n = 5, score = 100
            //   740e                 | je                  0x10
            //   8d942470020000       | lea                 edx, [esp + 0x270]
            //   52                   | push                edx
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax

        $sequence_5 = { 8b15???????? 895110 66a1???????? bd01000000 }
            // n = 4, score = 100
            //   8b15????????         |                     
            //   895110               | mov                 dword ptr [ecx + 0x10], edx
            //   66a1????????         |                     
            //   bd01000000           | mov                 ebp, 1

        $sequence_6 = { 894608 b802000000 2bc6 89442424 b803000000 2bc6 89442418 }
            // n = 7, score = 100
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   b802000000           | mov                 eax, 2
            //   2bc6                 | sub                 eax, esi
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   b803000000           | mov                 eax, 3
            //   2bc6                 | sub                 eax, esi
            //   89442418             | mov                 dword ptr [esp + 0x18], eax

        $sequence_7 = { 33d2 f7f6 0fb68220a30010 304101 33d2 b802000000 f7f6 }
            // n = 7, score = 100
            //   33d2                 | xor                 edx, edx
            //   f7f6                 | div                 esi
            //   0fb68220a30010       | movzx               eax, byte ptr [edx + 0x1000a320]
            //   304101               | xor                 byte ptr [ecx + 1], al
            //   33d2                 | xor                 edx, edx
            //   b802000000           | mov                 eax, 2
            //   f7f6                 | div                 esi

    condition:
        7 of them and filesize < 121856
}
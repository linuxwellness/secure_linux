rule win_combos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.combos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.combos"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 47 83ff10 7c84 5f 5e }
            // n = 5, score = 100
            //   47                   | inc                 edi
            //   83ff10               | cmp                 edi, 0x10
            //   7c84                 | jl                  0xffffff86
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_1 = { 8504b548930010 0f95c0 88440c10 41 }
            // n = 4, score = 100
            //   8504b548930010       | test                dword ptr [esi*4 + 0x10009348], eax
            //   0f95c0               | setne               al
            //   88440c10             | mov                 byte ptr [esp + ecx + 0x10], al
            //   41                   | inc                 ecx

        $sequence_2 = { c785a4feffff03000100 c785a8feffff08000000 8d85c8feffff 8985acfeffff 89bdb0feffff c785b4feffff04000100 c785b8feffff04000000 }
            // n = 7, score = 100
            //   c785a4feffff03000100     | mov    dword ptr [ebp - 0x15c], 0x10003
            //   c785a8feffff08000000     | mov    dword ptr [ebp - 0x158], 8
            //   8d85c8feffff         | lea                 eax, [ebp - 0x138]
            //   8985acfeffff         | mov                 dword ptr [ebp - 0x154], eax
            //   89bdb0feffff         | mov                 dword ptr [ebp - 0x150], edi
            //   c785b4feffff04000100     | mov    dword ptr [ebp - 0x14c], 0x10004
            //   c785b8feffff04000000     | mov    dword ptr [ebp - 0x148], 4

        $sequence_3 = { c1f905 83e01f 8b0c8d201b0110 8d04c0 f644810401 7425 }
            // n = 6, score = 100
            //   c1f905               | sar                 ecx, 5
            //   83e01f               | and                 eax, 0x1f
            //   8b0c8d201b0110       | mov                 ecx, dword ptr [ecx*4 + 0x10011b20]
            //   8d04c0               | lea                 eax, [eax + eax*8]
            //   f644810401           | test                byte ptr [ecx + eax*4 + 4], 1
            //   7425                 | je                  0x27

        $sequence_4 = { 8b4c2410 7405 b908000000 3bc1 7d0e 8d0c2a 40 }
            // n = 7, score = 100
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   7405                 | je                  7
            //   b908000000           | mov                 ecx, 8
            //   3bc1                 | cmp                 eax, ecx
            //   7d0e                 | jge                 0x10
            //   8d0c2a               | lea                 ecx, [edx + ebp]
            //   40                   | inc                 eax

        $sequence_5 = { 3bca 7c03 8d71e4 8a543410 88540448 40 }
            // n = 6, score = 100
            //   3bca                 | cmp                 ecx, edx
            //   7c03                 | jl                  5
            //   8d71e4               | lea                 esi, [ecx - 0x1c]
            //   8a543410             | mov                 dl, byte ptr [esp + esi + 0x10]
            //   88540448             | mov                 byte ptr [esp + eax + 0x48], dl
            //   40                   | inc                 eax

        $sequence_6 = { 772b ff248518210010 6a01 6a00 6a03 e8???????? }
            // n = 6, score = 100
            //   772b                 | ja                  0x2d
            //   ff248518210010       | jmp                 dword ptr [eax*4 + 0x10002118]
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   6a03                 | push                3
            //   e8????????           |                     

        $sequence_7 = { 0fbe5428ff 8954240c 8d0cdd00000000 57 2bc1 }
            // n = 5, score = 100
            //   0fbe5428ff           | movsx               edx, byte ptr [eax + ebp - 1]
            //   8954240c             | mov                 dword ptr [esp + 0xc], edx
            //   8d0cdd00000000       | lea                 ecx, [ebx*8]
            //   57                   | push                edi
            //   2bc1                 | sub                 eax, ecx

        $sequence_8 = { 51 57 68ffff1f00 8d45e4 50 ffd2 898594feffff }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   57                   | push                edi
            //   68ffff1f00           | push                0x1fffff
            //   8d45e4               | lea                 eax, [ebp - 0x1c]
            //   50                   | push                eax
            //   ffd2                 | call                edx
            //   898594feffff         | mov                 dword ptr [ebp - 0x16c], eax

        $sequence_9 = { 8a10 40 0fb6da f683011a011004 }
            // n = 4, score = 100
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   40                   | inc                 eax
            //   0fb6da               | movzx               ebx, dl
            //   f683011a011004       | test                byte ptr [ebx + 0x10011a01], 4

    condition:
        7 of them and filesize < 163840
}
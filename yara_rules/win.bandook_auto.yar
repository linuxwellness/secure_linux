rule win_bandook_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.bandook."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bandook"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c404 897dec 8b450c 894704 8a4514 884708 c6470900 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   897dec               | mov                 dword ptr [ebp - 0x14], edi
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   8a4514               | mov                 al, byte ptr [ebp + 0x14]
            //   884708               | mov                 byte ptr [edi + 8], al
            //   c6470900             | mov                 byte ptr [edi + 9], 0

        $sequence_1 = { 8975f0 0f57c0 660fd64604 6aff 8d4e10 c706???????? c7460c04000000 }
            // n = 7, score = 100
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   0f57c0               | xorps               xmm0, xmm0
            //   660fd64604           | movq                qword ptr [esi + 4], xmm0
            //   6aff                 | push                -1
            //   8d4e10               | lea                 ecx, [esi + 0x10]
            //   c706????????         |                     
            //   c7460c04000000       | mov                 dword ptr [esi + 0xc], 4

        $sequence_2 = { 52 51 e8???????? 83c408 c645fc1e 8b9538ffffff 83fa10 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   c645fc1e             | mov                 byte ptr [ebp - 4], 0x1e
            //   8b9538ffffff         | mov                 edx, dword ptr [ebp - 0xc8]
            //   83fa10               | cmp                 edx, 0x10

        $sequence_3 = { 8d85f8f3ffff 898560beffff 8d85c8beffff 50 6a00 8d8558beffff }
            // n = 6, score = 100
            //   8d85f8f3ffff         | lea                 eax, [ebp - 0xc08]
            //   898560beffff         | mov                 dword ptr [ebp - 0x41a0], eax
            //   8d85c8beffff         | lea                 eax, [ebp - 0x4138]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   8d8558beffff         | lea                 eax, [ebp - 0x41a8]

        $sequence_4 = { 8b1d???????? 68???????? ffd3 8b35???????? 8bf8 }
            // n = 5, score = 100
            //   8b1d????????         |                     
            //   68????????           |                     
            //   ffd3                 | call                ebx
            //   8b35????????         |                     
            //   8bf8                 | mov                 edi, eax

        $sequence_5 = { c645fc0b 50 8d45bc 68???????? 50 e8???????? 83c410 }
            // n = 7, score = 100
            //   c645fc0b             | mov                 byte ptr [ebp - 4], 0xb
            //   50                   | push                eax
            //   8d45bc               | lea                 eax, [ebp - 0x44]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_6 = { 8d85d4fbffff c78520ffffff07000000 8d5002 668b08 83c002 6685c9 75f5 }
            // n = 7, score = 100
            //   8d85d4fbffff         | lea                 eax, [ebp - 0x42c]
            //   c78520ffffff07000000     | mov    dword ptr [ebp - 0xe0], 7
            //   8d5002               | lea                 edx, [eax + 2]
            //   668b08               | mov                 cx, word ptr [eax]
            //   83c002               | add                 eax, 2
            //   6685c9               | test                cx, cx
            //   75f5                 | jne                 0xfffffff7

        $sequence_7 = { 83c410 8d842450010000 50 8d842494080000 50 ff15???????? 83f8ff }
            // n = 7, score = 100
            //   83c410               | add                 esp, 0x10
            //   8d842450010000       | lea                 eax, [esp + 0x150]
            //   50                   | push                eax
            //   8d842494080000       | lea                 eax, [esp + 0x894]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1

        $sequence_8 = { 85c0 ba???????? b9???????? 0f94c0 3c01 8d85f4fbffff 0f44ca }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   ba????????           |                     
            //   b9????????           |                     
            //   0f94c0               | sete                al
            //   3c01                 | cmp                 al, 1
            //   8d85f4fbffff         | lea                 eax, [ebp - 0x40c]
            //   0f44ca               | cmove               ecx, edx

        $sequence_9 = { 89414c 3bf7 0f85e8feffff 8b75ac 33c0 0f1045d4 8b55d0 }
            // n = 7, score = 100
            //   89414c               | mov                 dword ptr [ecx + 0x4c], eax
            //   3bf7                 | cmp                 esi, edi
            //   0f85e8feffff         | jne                 0xfffffeee
            //   8b75ac               | mov                 esi, dword ptr [ebp - 0x54]
            //   33c0                 | xor                 eax, eax
            //   0f1045d4             | movups              xmm0, xmmword ptr [ebp - 0x2c]
            //   8b55d0               | mov                 edx, dword ptr [ebp - 0x30]

    condition:
        7 of them and filesize < 23088128
}
rule win_qaccel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.qaccel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.qaccel"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bd0 0f87ea010000 e9???????? 8b4df4 33ff 81e1ffff0000 }
            // n = 6, score = 100
            //   3bd0                 | cmp                 edx, eax
            //   0f87ea010000         | ja                  0x1f0
            //   e9????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   33ff                 | xor                 edi, edi
            //   81e1ffff0000         | and                 ecx, 0xffff

        $sequence_1 = { 6a00 6a00 50 8d4e60 e8???????? 8bce }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   50                   | push                eax
            //   8d4e60               | lea                 ecx, [esi + 0x60]
            //   e8????????           |                     
            //   8bce                 | mov                 ecx, esi

        $sequence_2 = { 5f 5f 5f 5f 5f 8b3d???????? 53 }
            // n = 7, score = 100
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   8b3d????????         |                     
            //   53                   | push                ebx

        $sequence_3 = { 0f8816000000 0f8910000000 5f 5f 5f 5f 5f }
            // n = 7, score = 100
            //   0f8816000000         | js                  0x1c
            //   0f8910000000         | jns                 0x16
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi

        $sequence_4 = { 83c404 8bce e8???????? 6a00 8d8d00ffffff e8???????? }
            // n = 6, score = 100
            //   83c404               | add                 esp, 4
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   6a00                 | push                0
            //   8d8d00ffffff         | lea                 ecx, [ebp - 0x100]
            //   e8????????           |                     

        $sequence_5 = { 66ab aa 0f8813000000 0f890d000000 5f 5f 5f }
            // n = 7, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   0f8813000000         | js                  0x19
            //   0f890d000000         | jns                 0x13
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi
            //   5f                   | pop                 edi

        $sequence_6 = { 8b5020 6801001c00 6a0d 6800010000 52 }
            // n = 5, score = 100
            //   8b5020               | mov                 edx, dword ptr [eax + 0x20]
            //   6801001c00           | push                0x1c0001
            //   6a0d                 | push                0xd
            //   6800010000           | push                0x100
            //   52                   | push                edx

        $sequence_7 = { 52 ff15???????? 8d4d9c e8???????? 5f }
            // n = 5, score = 100
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8d4d9c               | lea                 ecx, [ebp - 0x64]
            //   e8????????           |                     
            //   5f                   | pop                 edi

        $sequence_8 = { 64892500000000 51 56 6a40 e8???????? 8bf0 83c404 }
            // n = 7, score = 100
            //   64892500000000       | mov                 dword ptr fs:[0], esp
            //   51                   | push                ecx
            //   56                   | push                esi
            //   6a40                 | push                0x40
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4

        $sequence_9 = { f3a4 668b4df8 668903 66894b02 ff15???????? }
            // n = 5, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   668b4df8             | mov                 cx, word ptr [ebp - 8]
            //   668903               | mov                 word ptr [ebx], ax
            //   66894b02             | mov                 word ptr [ebx + 2], cx
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 106496
}
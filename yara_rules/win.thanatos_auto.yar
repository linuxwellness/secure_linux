rule win_thanatos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.thanatos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thanatos"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 88442416 8d442410 50 ff15???????? 68???????? 8bf8 33f6 }
            // n = 7, score = 500
            //   88442416             | mov                 byte ptr [esp + 0x16], al
            //   8d442410             | lea                 eax, [esp + 0x10]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   68????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   33f6                 | xor                 esi, esi

        $sequence_1 = { 6800300000 53 ff15???????? 03c0 50 6a00 57 }
            // n = 7, score = 500
            //   6800300000           | push                0x3000
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   03c0                 | add                 eax, eax
            //   50                   | push                eax
            //   6a00                 | push                0
            //   57                   | push                edi

        $sequence_2 = { ff75ec ff15???????? ff75f0 ff15???????? b801000000 8be5 5d }
            // n = 7, score = 500
            //   ff75ec               | push                dword ptr [ebp - 0x14]
            //   ff15????????         |                     
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   ff15????????         |                     
            //   b801000000           | mov                 eax, 1
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp

        $sequence_3 = { 56 ff15???????? 8b8510fdffff 6800800000 6a16 50 e9???????? }
            // n = 7, score = 500
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b8510fdffff         | mov                 eax, dword ptr [ebp - 0x2f0]
            //   6800800000           | push                0x8000
            //   6a16                 | push                0x16
            //   50                   | push                eax
            //   e9????????           |                     

        $sequence_4 = { 83fa10 7312 8b16 8b8480d84f0210 89443204 830603 5e }
            // n = 7, score = 500
            //   83fa10               | cmp                 edx, 0x10
            //   7312                 | jae                 0x14
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8b8480d84f0210       | mov                 eax, dword ptr [eax + eax*4 + 0x10024fd8]
            //   89443204             | mov                 dword ptr [edx + esi + 4], eax
            //   830603               | add                 dword ptr [esi], 3
            //   5e                   | pop                 esi

        $sequence_5 = { 660fbe4415f4 66310475de5b0210 ff15???????? 3bf0 7cdd 833d????????00 c745ec00000000 }
            // n = 7, score = 500
            //   660fbe4415f4         | movsx               ax, byte ptr [ebp + edx - 0xc]
            //   66310475de5b0210     | xor                 word ptr [esi*2 + 0x10025bde], ax
            //   ff15????????         |                     
            //   3bf0                 | cmp                 esi, eax
            //   7cdd                 | jl                  0xffffffdf
            //   833d????????00       |                     
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0

        $sequence_6 = { 03cf 03d7 894df8 8955f4 85db 743e 8b14b1 }
            // n = 7, score = 500
            //   03cf                 | add                 ecx, edi
            //   03d7                 | add                 edx, edi
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   85db                 | test                ebx, ebx
            //   743e                 | je                  0x40
            //   8b14b1               | mov                 edx, dword ptr [ecx + esi*4]

        $sequence_7 = { 8bcf a3???????? e8???????? bad1aeb7fd 8bcf a3???????? e8???????? }
            // n = 7, score = 500
            //   8bcf                 | mov                 ecx, edi
            //   a3????????           |                     
            //   e8????????           |                     
            //   bad1aeb7fd           | mov                 edx, 0xfdb7aed1
            //   8bcf                 | mov                 ecx, edi
            //   a3????????           |                     
            //   e8????????           |                     

        $sequence_8 = { 8bec 51 833d????????00 7419 ff7518 8b4d08 }
            // n = 6, score = 500
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   833d????????00       |                     
            //   7419                 | je                  0x1b
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_9 = { 8945f8 e8???????? 8b4520 83c410 eb2b c60206 f6c101 }
            // n = 7, score = 500
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   e8????????           |                     
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]
            //   83c410               | add                 esp, 0x10
            //   eb2b                 | jmp                 0x2d
            //   c60206               | mov                 byte ptr [edx], 6
            //   f6c101               | test                cl, 1

    condition:
        7 of them and filesize < 1810432
}
rule win_ransomlock_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.ransomlock."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ransomlock"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 32c0 833d????????02 8d7db8 b940000000 f3aa }
            // n = 5, score = 100
            //   32c0                 | xor                 al, al
            //   833d????????02       |                     
            //   8d7db8               | lea                 edi, [ebp - 0x48]
            //   b940000000           | mov                 ecx, 0x40
            //   f3aa                 | rep stosb           byte ptr es:[edi], al

        $sequence_1 = { 0fb7540114 03c8 0fb74106 8d0480 03d1 }
            // n = 5, score = 100
            //   0fb7540114           | movzx               edx, word ptr [ecx + eax + 0x14]
            //   03c8                 | add                 ecx, eax
            //   0fb74106             | movzx               eax, word ptr [ecx + 6]
            //   8d0480               | lea                 eax, [eax + eax*4]
            //   03d1                 | add                 edx, ecx

        $sequence_2 = { 6804010000 8d95b0fdffff 52 6a00 }
            // n = 4, score = 100
            //   6804010000           | push                0x104
            //   8d95b0fdffff         | lea                 edx, [ebp - 0x250]
            //   52                   | push                edx
            //   6a00                 | push                0

        $sequence_3 = { 52 c745fc00000000 8b08 68???????? 50 8b01 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   68????????           |                     
            //   50                   | push                eax
            //   8b01                 | mov                 eax, dword ptr [ecx]

        $sequence_4 = { 8b45f0 8b08 8b510c 68???????? 50 ffd2 8b45f0 }
            // n = 7, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b510c               | mov                 edx, dword ptr [ecx + 0xc]
            //   68????????           |                     
            //   50                   | push                eax
            //   ffd2                 | call                edx
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_5 = { 8bc1 48 7423 48 0f85b2000000 }
            // n = 5, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   48                   | dec                 eax
            //   7423                 | je                  0x25
            //   48                   | dec                 eax
            //   0f85b2000000         | jne                 0xb8

        $sequence_6 = { 66894802 ff15???????? 85c0 8b45fc 7505 b8efbeadde 56 }
            // n = 7, score = 100
            //   66894802             | mov                 word ptr [eax + 2], cx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   7505                 | jne                 7
            //   b8efbeadde           | mov                 eax, 0xdeadbeef
            //   56                   | push                esi

        $sequence_7 = { 53 8b1d???????? 8b4df0 8b5508 3b0a }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   8b1d????????         |                     
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   3b0a                 | cmp                 ecx, dword ptr [edx]

        $sequence_8 = { ffd2 53 ff15???????? 8b45fc 8b08 8b5108 }
            // n = 6, score = 100
            //   ffd2                 | call                edx
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b5108               | mov                 edx, dword ptr [ecx + 8]

        $sequence_9 = { ff15???????? 6a00 68e8030000 6833030000 56 ff15???????? }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   68e8030000           | push                0x3e8
            //   6833030000           | push                0x333
            //   56                   | push                esi
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 360448
}
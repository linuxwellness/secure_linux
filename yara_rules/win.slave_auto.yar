rule win_slave_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.slave."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.slave"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03ca 23c6 0bde 235de8 8bf3 8b5db4 0bf0 }
            // n = 7, score = 300
            //   03ca                 | add                 ecx, edx
            //   23c6                 | and                 eax, esi
            //   0bde                 | or                  ebx, esi
            //   235de8               | and                 ebx, dword ptr [ebp - 0x18]
            //   8bf3                 | mov                 esi, ebx
            //   8b5db4               | mov                 ebx, dword ptr [ebp - 0x4c]
            //   0bf0                 | or                  esi, eax

        $sequence_1 = { 028e08010000 888e08010000 f6c308 7431 80f9ff 730c 0fb6c1 }
            // n = 7, score = 300
            //   028e08010000         | add                 cl, byte ptr [esi + 0x108]
            //   888e08010000         | mov                 byte ptr [esi + 0x108], cl
            //   f6c308               | test                bl, 8
            //   7431                 | je                  0x33
            //   80f9ff               | cmp                 cl, 0xff
            //   730c                 | jae                 0xe
            //   0fb6c1               | movzx               eax, cl

        $sequence_2 = { 2bc8 68???????? e9???????? 33c9 68???????? e9???????? f7c300000800 }
            // n = 7, score = 300
            //   2bc8                 | sub                 ecx, eax
            //   68????????           |                     
            //   e9????????           |                     
            //   33c9                 | xor                 ecx, ecx
            //   68????????           |                     
            //   e9????????           |                     
            //   f7c300000800         | test                ebx, 0x80000

        $sequence_3 = { 03cf 3345d8 03c1 8b55fc 81c21478c884 8bcb 03d0 }
            // n = 7, score = 300
            //   03cf                 | add                 ecx, edi
            //   3345d8               | xor                 eax, dword ptr [ebp - 0x28]
            //   03c1                 | add                 eax, ecx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   81c21478c884         | add                 edx, 0x84c87814
            //   8bcb                 | mov                 ecx, ebx
            //   03d0                 | add                 edx, eax

        $sequence_4 = { 0ac8 8ac2 2403 0ac8 888f07030000 f70600200000 }
            // n = 6, score = 300
            //   0ac8                 | or                  cl, al
            //   8ac2                 | mov                 al, dl
            //   2403                 | and                 al, 3
            //   0ac8                 | or                  cl, al
            //   888f07030000         | mov                 byte ptr [edi + 0x307], cl
            //   f70600200000         | test                dword ptr [esi], 0x2000

        $sequence_5 = { e9???????? f7c300000800 7437 8a9608010000 80faff 730c 0fb6c2 }
            // n = 7, score = 300
            //   e9????????           |                     
            //   f7c300000800         | test                ebx, 0x80000
            //   7437                 | je                  0x39
            //   8a9608010000         | mov                 dl, byte ptr [esi + 0x108]
            //   80faff               | cmp                 dl, 0xff
            //   730c                 | jae                 0xe
            //   0fb6c2               | movzx               eax, dl

        $sequence_6 = { 837df400 0f84f0050000 810f80000100 8a4704 24c5 0c05 884704 }
            // n = 7, score = 300
            //   837df400             | cmp                 dword ptr [ebp - 0xc], 0
            //   0f84f0050000         | je                  0x5f6
            //   810f80000100         | or                  dword ptr [edi], 0x10080
            //   8a4704               | mov                 al, byte ptr [edi + 4]
            //   24c5                 | and                 al, 0xc5
            //   0c05                 | or                  al, 5
            //   884704               | mov                 byte ptr [edi + 4], al

        $sequence_7 = { eb37 0fb6ca 81c190000000 894f10 eb1d 0fb6ca 83e980 }
            // n = 7, score = 300
            //   eb37                 | jmp                 0x39
            //   0fb6ca               | movzx               ecx, dl
            //   81c190000000         | add                 ecx, 0x90
            //   894f10               | mov                 dword ptr [edi + 0x10], ecx
            //   eb1d                 | jmp                 0x1f
            //   0fb6ca               | movzx               ecx, dl
            //   83e980               | sub                 ecx, -0x80

        $sequence_8 = { 0c80 884760 e9???????? 8a4760 240f }
            // n = 5, score = 300
            //   0c80                 | or                  al, 0x80
            //   884760               | mov                 byte ptr [edi + 0x60], al
            //   e9????????           |                     
            //   8a4760               | mov                 al, byte ptr [edi + 0x60]
            //   240f                 | and                 al, 0xf

        $sequence_9 = { ff15???????? 85c0 7456 8b5dd4 8d642400 ff15???????? 3945ec }
            // n = 7, score = 300
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7456                 | je                  0x58
            //   8b5dd4               | mov                 ebx, dword ptr [ebp - 0x2c]
            //   8d642400             | lea                 esp, [esp]
            //   ff15????????         |                     
            //   3945ec               | cmp                 dword ptr [ebp - 0x14], eax

    condition:
        7 of them and filesize < 532480
}
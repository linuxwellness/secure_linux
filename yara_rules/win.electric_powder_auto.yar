rule win_electric_powder_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.electric_powder."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.electric_powder"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? 8d9520fdffff c645fc06 8d8d10fbffff e8???????? c645fc07 8d8d10fbffff }
            // n = 7, score = 100
            //   68????????           |                     
            //   8d9520fdffff         | lea                 edx, [ebp - 0x2e0]
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   8d8d10fbffff         | lea                 ecx, [ebp - 0x4f0]
            //   e8????????           |                     
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   8d8d10fbffff         | lea                 ecx, [ebp - 0x4f0]

        $sequence_1 = { ff7514 ff7510 ff75f8 e8???????? 8b45fc 83c418 c60000 }
            // n = 7, score = 100
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   83c418               | add                 esp, 0x18
            //   c60000               | mov                 byte ptr [eax], 0

        $sequence_2 = { 0f4385c0fcffff 2bd6 03c8 8995d0fcffff 2b9578f9ffff }
            // n = 5, score = 100
            //   0f4385c0fcffff       | cmovae              eax, dword ptr [ebp - 0x340]
            //   2bd6                 | sub                 edx, esi
            //   03c8                 | add                 ecx, eax
            //   8995d0fcffff         | mov                 dword ptr [ebp - 0x330], edx
            //   2b9578f9ffff         | sub                 edx, dword ptr [ebp - 0x688]

        $sequence_3 = { 83791410 56 57 8bf9 7202 8b39 8b4110 }
            // n = 7, score = 100
            //   83791410             | cmp                 dword ptr [ecx + 0x14], 0x10
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf9                 | mov                 edi, ecx
            //   7202                 | jb                  4
            //   8b39                 | mov                 edi, dword ptr [ecx]
            //   8b4110               | mov                 eax, dword ptr [ecx + 0x10]

        $sequence_4 = { 64a100000000 50 b8a0110000 e8???????? a1???????? 33c5 8945f0 }
            // n = 7, score = 100
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   50                   | push                eax
            //   b8a0110000           | mov                 eax, 0x11a0
            //   e8????????           |                     
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax

        $sequence_5 = { c1f906 6bd030 8b0c8dd0fa4300 804c112802 5b 2bf7 }
            // n = 6, score = 100
            //   c1f906               | sar                 ecx, 6
            //   6bd030               | imul                edx, eax, 0x30
            //   8b0c8dd0fa4300       | mov                 ecx, dword ptr [ecx*4 + 0x43fad0]
            //   804c112802           | or                  byte ptr [ecx + edx + 0x28], 2
            //   5b                   | pop                 ebx
            //   2bf7                 | sub                 esi, edi

        $sequence_6 = { 6a01 8d4e01 51 e8???????? 0fbe4d14 }
            // n = 5, score = 100
            //   6a01                 | push                1
            //   8d4e01               | lea                 ecx, [esi + 1]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   0fbe4d14             | movsx               ecx, byte ptr [ebp + 0x14]

        $sequence_7 = { c68548efffff00 50 ffb548efffff 51 8bca e8???????? }
            // n = 6, score = 100
            //   c68548efffff00       | mov                 byte ptr [ebp - 0x10b8], 0
            //   50                   | push                eax
            //   ffb548efffff         | push                dword ptr [ebp - 0x10b8]
            //   51                   | push                ecx
            //   8bca                 | mov                 ecx, edx
            //   e8????????           |                     

        $sequence_8 = { e9???????? 8d8d98faffff e9???????? 8d8db0faffff e9???????? 8d8d68faffff e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d8d98faffff         | lea                 ecx, [ebp - 0x568]
            //   e9????????           |                     
            //   8d8db0faffff         | lea                 ecx, [ebp - 0x550]
            //   e9????????           |                     
            //   8d8d68faffff         | lea                 ecx, [ebp - 0x598]
            //   e9????????           |                     

        $sequence_9 = { 6bf030 03348dd0fa4300 837e18ff 740c 837e18fe 7406 804e2880 }
            // n = 7, score = 100
            //   6bf030               | imul                esi, eax, 0x30
            //   03348dd0fa4300       | add                 esi, dword ptr [ecx*4 + 0x43fad0]
            //   837e18ff             | cmp                 dword ptr [esi + 0x18], -1
            //   740c                 | je                  0xe
            //   837e18fe             | cmp                 dword ptr [esi + 0x18], -2
            //   7406                 | je                  8
            //   804e2880             | or                  byte ptr [esi + 0x28], 0x80

    condition:
        7 of them and filesize < 565248
}
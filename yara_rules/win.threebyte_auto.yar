rule win_threebyte_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.threebyte."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.threebyte"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645f145 c645f250 c645f341 c645f449 c645f552 }
            // n = 5, score = 200
            //   c645f145             | mov                 byte ptr [ebp - 0xf], 0x45
            //   c645f250             | mov                 byte ptr [ebp - 0xe], 0x50
            //   c645f341             | mov                 byte ptr [ebp - 0xd], 0x41
            //   c645f449             | mov                 byte ptr [ebp - 0xc], 0x49
            //   c645f552             | mov                 byte ptr [ebp - 0xb], 0x52

        $sequence_1 = { 8945e8 c745ec00000000 8b5510 8955fc eb09 8b45ec 83c003 }
            // n = 7, score = 200
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   eb09                 | jmp                 0xb
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   83c003               | add                 eax, 3

        $sequence_2 = { 8b8574f7ffff 8d4c0064 51 e8???????? 83c404 898570f7ffff 8b9574f7ffff }
            // n = 7, score = 200
            //   8b8574f7ffff         | mov                 eax, dword ptr [ebp - 0x88c]
            //   8d4c0064             | lea                 ecx, [eax + eax + 0x64]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   898570f7ffff         | mov                 dword ptr [ebp - 0x890], eax
            //   8b9574f7ffff         | mov                 edx, dword ptr [ebp - 0x88c]

        $sequence_3 = { 83781c00 7437 8b8d04ffffff 83792000 742b 8b9504ffffff }
            // n = 6, score = 200
            //   83781c00             | cmp                 dword ptr [eax + 0x1c], 0
            //   7437                 | je                  0x39
            //   8b8d04ffffff         | mov                 ecx, dword ptr [ebp - 0xfc]
            //   83792000             | cmp                 dword ptr [ecx + 0x20], 0
            //   742b                 | je                  0x2d
            //   8b9504ffffff         | mov                 edx, dword ptr [ebp - 0xfc]

        $sequence_4 = { c685dffbffff2e c685e0fbffff31 c685e1fbffff3b c685e2fbffff20 }
            // n = 4, score = 200
            //   c685dffbffff2e       | mov                 byte ptr [ebp - 0x421], 0x2e
            //   c685e0fbffff31       | mov                 byte ptr [ebp - 0x420], 0x31
            //   c685e1fbffff3b       | mov                 byte ptr [ebp - 0x41f], 0x3b
            //   c685e2fbffff20       | mov                 byte ptr [ebp - 0x41e], 0x20

        $sequence_5 = { 8dbddefcffff f3ab 66ab c78594faffff00010000 8d9594faffff 52 }
            // n = 6, score = 200
            //   8dbddefcffff         | lea                 edi, [ebp - 0x322]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   c78594faffff00010000     | mov    dword ptr [ebp - 0x56c], 0x100
            //   8d9594faffff         | lea                 edx, [ebp - 0x56c]
            //   52                   | push                edx

        $sequence_6 = { c685c4fdffff4f c685c5fdffff52 c685c6fdffff5b c685c7fdffff25 c685c8fdffff64 c685c9fdffff5d c685cafdffff2e }
            // n = 7, score = 200
            //   c685c4fdffff4f       | mov                 byte ptr [ebp - 0x23c], 0x4f
            //   c685c5fdffff52       | mov                 byte ptr [ebp - 0x23b], 0x52
            //   c685c6fdffff5b       | mov                 byte ptr [ebp - 0x23a], 0x5b
            //   c685c7fdffff25       | mov                 byte ptr [ebp - 0x239], 0x25
            //   c685c8fdffff64       | mov                 byte ptr [ebp - 0x238], 0x64
            //   c685c9fdffff5d       | mov                 byte ptr [ebp - 0x237], 0x5d
            //   c685cafdffff2e       | mov                 byte ptr [ebp - 0x236], 0x2e

        $sequence_7 = { 8b4df0 83c104 51 ff15???????? 85c0 7504 33c0 }
            // n = 7, score = 200
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   83c104               | add                 ecx, 4
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { c685defdffff41 c685dffdffff43 c685e0fdffff6c c685e1fdffff65 c685e2fdffff61 }
            // n = 5, score = 200
            //   c685defdffff41       | mov                 byte ptr [ebp - 0x222], 0x41
            //   c685dffdffff43       | mov                 byte ptr [ebp - 0x221], 0x43
            //   c685e0fdffff6c       | mov                 byte ptr [ebp - 0x220], 0x6c
            //   c685e1fdffff65       | mov                 byte ptr [ebp - 0x21f], 0x65
            //   c685e2fdffff61       | mov                 byte ptr [ebp - 0x21e], 0x61

        $sequence_9 = { 8b55b8 52 ff15???????? 85c0 7411 8b45b8 50 }
            // n = 7, score = 200
            //   8b55b8               | mov                 edx, dword ptr [ebp - 0x48]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7411                 | je                  0x13
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 180224
}
rule win_hzrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.hzrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hzrat"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bc1 1bc0 23c1 7476 }
            // n = 4, score = 100
            //   3bc1                 | cmp                 eax, ecx
            //   1bc0                 | sbb                 eax, eax
            //   23c1                 | and                 eax, ecx
            //   7476                 | je                  0x78

        $sequence_1 = { 80b5c6feffff42 80b5c7feffff42 80b5c8feffff42 66c785c4feffffbd42 }
            // n = 4, score = 100
            //   80b5c6feffff42       | xor                 byte ptr [ebp - 0x13a], 0x42
            //   80b5c7feffff42       | xor                 byte ptr [ebp - 0x139], 0x42
            //   80b5c8feffff42       | xor                 byte ptr [ebp - 0x138], 0x42
            //   66c785c4feffffbd42     | mov    word ptr [ebp - 0x13c], 0x42bd

        $sequence_2 = { c1fa06 6bc838 8b049510fa4200 f644082801 7428 8d4508 8975f8 }
            // n = 7, score = 100
            //   c1fa06               | sar                 edx, 6
            //   6bc838               | imul                ecx, eax, 0x38
            //   8b049510fa4200       | mov                 eax, dword ptr [edx*4 + 0x42fa10]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7428                 | je                  0x2a
            //   8d4508               | lea                 eax, [ebp + 8]
            //   8975f8               | mov                 dword ptr [ebp - 8], esi

        $sequence_3 = { 83e03f c1f906 6bc038 8b0c8d10fa4200 807c012800 7c4a }
            // n = 6, score = 100
            //   83e03f               | and                 eax, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bc038               | imul                eax, eax, 0x38
            //   8b0c8d10fa4200       | mov                 ecx, dword ptr [ecx*4 + 0x42fa10]
            //   807c012800           | cmp                 byte ptr [ecx + eax + 0x28], 0
            //   7c4a                 | jl                  0x4c

        $sequence_4 = { 83c40c 8b4308 c745fc01000000 83781408 8b4810 7202 8b00 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   8b4308               | mov                 eax, dword ptr [ebx + 8]
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   83781408             | cmp                 dword ptr [eax + 0x14], 8
            //   8b4810               | mov                 ecx, dword ptr [eax + 0x10]
            //   7202                 | jb                  4
            //   8b00                 | mov                 eax, dword ptr [eax]

        $sequence_5 = { ff7508 e8???????? dd4520 83c40c c9 c3 8b04c5c4324200 }
            // n = 7, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   dd4520               | fld                 qword ptr [ebp + 0x20]
            //   83c40c               | add                 esp, 0xc
            //   c9                   | leave               
            //   c3                   | ret                 
            //   8b04c5c4324200       | mov                 eax, dword ptr [eax*8 + 0x4232c4]

        $sequence_6 = { 7403 f0ff08 899e8c000000 33c0 899e90000000 c706???????? c78694000000101f4200 }
            // n = 7, score = 100
            //   7403                 | je                  5
            //   f0ff08               | lock dec            dword ptr [eax]
            //   899e8c000000         | mov                 dword ptr [esi + 0x8c], ebx
            //   33c0                 | xor                 eax, eax
            //   899e90000000         | mov                 dword ptr [esi + 0x90], ebx
            //   c706????????         |                     
            //   c78694000000101f4200     | mov    dword ptr [esi + 0x94], 0x421f10

        $sequence_7 = { 8945e8 663bd1 7505 66890e eb33 6a0d }
            // n = 6, score = 100
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   663bd1               | cmp                 dx, cx
            //   7505                 | jne                 7
            //   66890e               | mov                 word ptr [esi], cx
            //   eb33                 | jmp                 0x35
            //   6a0d                 | push                0xd

        $sequence_8 = { e9???????? 8b46e1 3b42e1 7462 0faee8 0fb642e1 }
            // n = 6, score = 100
            //   e9????????           |                     
            //   8b46e1               | mov                 eax, dword ptr [esi - 0x1f]
            //   3b42e1               | cmp                 eax, dword ptr [edx - 0x1f]
            //   7462                 | je                  0x64
            //   0faee8               | lfence              
            //   0fb642e1             | movzx               eax, byte ptr [edx - 0x1f]

        $sequence_9 = { 33c0 40 8bf0 894208 8b3c8538f14200 8bce 85ff }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   8bf0                 | mov                 esi, eax
            //   894208               | mov                 dword ptr [edx + 8], eax
            //   8b3c8538f14200       | mov                 edi, dword ptr [eax*4 + 0x42f138]
            //   8bce                 | mov                 ecx, esi
            //   85ff                 | test                edi, edi

    condition:
        7 of them and filesize < 409600
}
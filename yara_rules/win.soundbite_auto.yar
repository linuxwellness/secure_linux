rule win_soundbite_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.soundbite."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.soundbite"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 75dc 8b75a0 56 e8???????? 83c404 895da0 895da4 }
            // n = 7, score = 100
            //   75dc                 | jne                 0xffffffde
            //   8b75a0               | mov                 esi, dword ptr [ebp - 0x60]
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   895da0               | mov                 dword ptr [ebp - 0x60], ebx
            //   895da4               | mov                 dword ptr [ebp - 0x5c], ebx

        $sequence_1 = { 8d45d8 89651c 50 e8???????? 83c428 eb3d }
            // n = 6, score = 100
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   89651c               | mov                 dword ptr [ebp + 0x1c], esp
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c428               | add                 esp, 0x28
            //   eb3d                 | jmp                 0x3f

        $sequence_2 = { 8a08 40 84c9 75f9 2bc6 52 8d9decfcffff }
            // n = 7, score = 100
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl
            //   75f9                 | jne                 0xfffffffb
            //   2bc6                 | sub                 eax, esi
            //   52                   | push                edx
            //   8d9decfcffff         | lea                 ebx, [ebp - 0x314]

        $sequence_3 = { 81ec88000000 53 56 a1???????? 33c5 50 8d45f4 }
            // n = 7, score = 100
            //   81ec88000000         | sub                 esp, 0x88
            //   53                   | push                ebx
            //   56                   | push                esi
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]

        $sequence_4 = { 7415 668b7102 663b7202 7519 83c104 83c204 6685f6 }
            // n = 7, score = 100
            //   7415                 | je                  0x17
            //   668b7102             | mov                 si, word ptr [ecx + 2]
            //   663b7202             | cmp                 si, word ptr [edx + 2]
            //   7519                 | jne                 0x1b
            //   83c104               | add                 ecx, 4
            //   83c204               | add                 edx, 4
            //   6685f6               | test                si, si

        $sequence_5 = { 8a4df2 8ad9 c0eb06 80e13f 884def 8975f0 03d3 }
            // n = 7, score = 100
            //   8a4df2               | mov                 cl, byte ptr [ebp - 0xe]
            //   8ad9                 | mov                 bl, cl
            //   c0eb06               | shr                 bl, 6
            //   80e13f               | and                 cl, 0x3f
            //   884def               | mov                 byte ptr [ebp - 0x11], cl
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   03d3                 | add                 edx, ebx

        $sequence_6 = { 8b5520 85d2 7402 8b12 8b7208 3bf1 7702 }
            // n = 7, score = 100
            //   8b5520               | mov                 edx, dword ptr [ebp + 0x20]
            //   85d2                 | test                edx, edx
            //   7402                 | je                  4
            //   8b12                 | mov                 edx, dword ptr [edx]
            //   8b7208               | mov                 esi, dword ptr [edx + 8]
            //   3bf1                 | cmp                 esi, ecx
            //   7702                 | ja                  4

        $sequence_7 = { 8b470c 8985a0fcffff 8b4710 83f80b 752a 6a00 6a00 }
            // n = 7, score = 100
            //   8b470c               | mov                 eax, dword ptr [edi + 0xc]
            //   8985a0fcffff         | mov                 dword ptr [ebp - 0x360], eax
            //   8b4710               | mov                 eax, dword ptr [edi + 0x10]
            //   83f80b               | cmp                 eax, 0xb
            //   752a                 | jne                 0x2c
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_8 = { e8???????? 8b57fc 895610 8b07 894614 8b4f04 894e18 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b57fc               | mov                 edx, dword ptr [edi - 4]
            //   895610               | mov                 dword ptr [esi + 0x10], edx
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   894614               | mov                 dword ptr [esi + 0x14], eax
            //   8b4f04               | mov                 ecx, dword ptr [edi + 4]
            //   894e18               | mov                 dword ptr [esi + 0x18], ecx

        $sequence_9 = { c6859cfdffff00 81c394000000 e9???????? 68???????? c78538fdffff80be4200 }
            // n = 5, score = 100
            //   c6859cfdffff00       | mov                 byte ptr [ebp - 0x264], 0
            //   81c394000000         | add                 ebx, 0x94
            //   e9????????           |                     
            //   68????????           |                     
            //   c78538fdffff80be4200     | mov    dword ptr [ebp - 0x2c8], 0x42be80

    condition:
        7 of them and filesize < 409600
}
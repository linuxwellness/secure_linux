rule win_scarecrow_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.scarecrow."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.scarecrow"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645865f c645875d c645880d c645890d c6458a66 c6458b3b c6458c0e }
            // n = 7, score = 100
            //   c645865f             | mov                 byte ptr [ebp - 0x7a], 0x5f
            //   c645875d             | mov                 byte ptr [ebp - 0x79], 0x5d
            //   c645880d             | mov                 byte ptr [ebp - 0x78], 0xd
            //   c645890d             | mov                 byte ptr [ebp - 0x77], 0xd
            //   c6458a66             | mov                 byte ptr [ebp - 0x76], 0x66
            //   c6458b3b             | mov                 byte ptr [ebp - 0x75], 0x3b
            //   c6458c0e             | mov                 byte ptr [ebp - 0x74], 0xe

        $sequence_1 = { 72d4 8d85a1feffff 898524f5ffff c685e4f9ffff00 c685e5f9ffff3a c685e6f9ffff2e c685e7f9ffff32 }
            // n = 7, score = 100
            //   72d4                 | jb                  0xffffffd6
            //   8d85a1feffff         | lea                 eax, [ebp - 0x15f]
            //   898524f5ffff         | mov                 dword ptr [ebp - 0xadc], eax
            //   c685e4f9ffff00       | mov                 byte ptr [ebp - 0x61c], 0
            //   c685e5f9ffff3a       | mov                 byte ptr [ebp - 0x61b], 0x3a
            //   c685e6f9ffff2e       | mov                 byte ptr [ebp - 0x61a], 0x2e
            //   c685e7f9ffff32       | mov                 byte ptr [ebp - 0x619], 0x32

        $sequence_2 = { 807dc000 7531 33f6 660f1f840000000000 8a4435c1 0fb6c8 }
            // n = 6, score = 100
            //   807dc000             | cmp                 byte ptr [ebp - 0x40], 0
            //   7531                 | jne                 0x33
            //   33f6                 | xor                 esi, esi
            //   660f1f840000000000     | nop    word ptr [eax + eax]
            //   8a4435c1             | mov                 al, byte ptr [ebp + esi - 0x3f]
            //   0fb6c8               | movzx               ecx, al

        $sequence_3 = { eb66 99 b905000000 f7f9 85d2 745a 8b85f0feffff }
            // n = 7, score = 100
            //   eb66                 | jmp                 0x68
            //   99                   | cdq                 
            //   b905000000           | mov                 ecx, 5
            //   f7f9                 | idiv                ecx
            //   85d2                 | test                edx, edx
            //   745a                 | je                  0x5c
            //   8b85f0feffff         | mov                 eax, dword ptr [ebp - 0x110]

        $sequence_4 = { c68544fcffff40 c68545fcffff40 c68546fcffff40 8a853dfcffff 80bd3cfcffff00 7536 33c9 }
            // n = 7, score = 100
            //   c68544fcffff40       | mov                 byte ptr [ebp - 0x3bc], 0x40
            //   c68545fcffff40       | mov                 byte ptr [ebp - 0x3bb], 0x40
            //   c68546fcffff40       | mov                 byte ptr [ebp - 0x3ba], 0x40
            //   8a853dfcffff         | mov                 al, byte ptr [ebp - 0x3c3]
            //   80bd3cfcffff00       | cmp                 byte ptr [ebp - 0x3c4], 0
            //   7536                 | jne                 0x38
            //   33c9                 | xor                 ecx, ecx

        $sequence_5 = { 8d427f 99 f7fb 88940d09ffffff 41 83f934 72da }
            // n = 7, score = 100
            //   8d427f               | lea                 eax, [edx + 0x7f]
            //   99                   | cdq                 
            //   f7fb                 | idiv                ebx
            //   88940d09ffffff       | mov                 byte ptr [ebp + ecx - 0xf7], dl
            //   41                   | inc                 ecx
            //   83f934               | cmp                 ecx, 0x34
            //   72da                 | jb                  0xffffffdc

        $sequence_6 = { 8a8555fcffff 80bd54fcffff00 753b 33f6 0f1f4000 0f1f840000000000 8a843555fcffff }
            // n = 7, score = 100
            //   8a8555fcffff         | mov                 al, byte ptr [ebp - 0x3ab]
            //   80bd54fcffff00       | cmp                 byte ptr [ebp - 0x3ac], 0
            //   753b                 | jne                 0x3d
            //   33f6                 | xor                 esi, esi
            //   0f1f4000             | nop                 dword ptr [eax]
            //   0f1f840000000000     | nop                 dword ptr [eax + eax]
            //   8a843555fcffff       | mov                 al, byte ptr [ebp + esi - 0x3ab]

        $sequence_7 = { 752c 33f6 8a8435b1faffff b947000000 0fb6c0 2bc8 6bc117 }
            // n = 7, score = 100
            //   752c                 | jne                 0x2e
            //   33f6                 | xor                 esi, esi
            //   8a8435b1faffff       | mov                 al, byte ptr [ebp + esi - 0x54f]
            //   b947000000           | mov                 ecx, 0x47
            //   0fb6c0               | movzx               eax, al
            //   2bc8                 | sub                 ecx, eax
            //   6bc117               | imul                eax, ecx, 0x17

        $sequence_8 = { 83c408 8d8d90f7ffff 51 ffd0 8b85a4f7ffff 50 8b08 }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   8d8d90f7ffff         | lea                 ecx, [ebp - 0x870]
            //   51                   | push                ecx
            //   ffd0                 | call                eax
            //   8b85a4f7ffff         | mov                 eax, dword ptr [ebp - 0x85c]
            //   50                   | push                eax
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_9 = { 8a8565feffff 80bd64feffff00 7538 33f6 0f1f4000 0f1f840000000000 8a843565feffff }
            // n = 7, score = 100
            //   8a8565feffff         | mov                 al, byte ptr [ebp - 0x19b]
            //   80bd64feffff00       | cmp                 byte ptr [ebp - 0x19c], 0
            //   7538                 | jne                 0x3a
            //   33f6                 | xor                 esi, esi
            //   0f1f4000             | nop                 dword ptr [eax]
            //   0f1f840000000000     | nop                 dword ptr [eax + eax]
            //   8a843565feffff       | mov                 al, byte ptr [ebp + esi - 0x19b]

    condition:
        7 of them and filesize < 501760
}
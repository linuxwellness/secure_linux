rule win_bagle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.bagle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bagle"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f7d9 2bf9 b03d f3aa 5b 5f 5e }
            // n = 7, score = 300
            //   f7d9                 | neg                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   b03d                 | mov                 al, 0x3d
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_1 = { 2c3e c0e002 042b aa c3 55 }
            // n = 6, score = 300
            //   2c3e                 | sub                 al, 0x3e
            //   c0e002               | shl                 al, 2
            //   042b                 | add                 al, 0x2b
            //   aa                   | stosb               byte ptr es:[edi], al
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_2 = { 59 e8???????? e2f9 59 43 83fb12 }
            // n = 6, score = 300
            //   59                   | pop                 ecx
            //   e8????????           |                     
            //   e2f9                 | loop                0xfffffffb
            //   59                   | pop                 ecx
            //   43                   | inc                 ebx
            //   83fb12               | cmp                 ebx, 0x12

        $sequence_3 = { 66b80d0a 66ab 83e903 79c6 f7d9 2bf9 }
            // n = 6, score = 300
            //   66b80d0a             | mov                 ax, 0xa0d
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   83e903               | sub                 ecx, 3
            //   79c6                 | jns                 0xffffffc8
            //   f7d9                 | neg                 ecx
            //   2bf9                 | sub                 edi, ecx

        $sequence_4 = { 6a05 53 e8???????? 0bc0 7402 }
            // n = 5, score = 300
            //   6a05                 | push                5
            //   53                   | push                ebx
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax
            //   7402                 | je                  4

        $sequence_5 = { 6a06 6a01 6a02 e8???????? 8bd8 ff7508 e8???????? }
            // n = 7, score = 300
            //   6a06                 | push                6
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_6 = { eb0b 04fc eb07 2c3e c0e002 042b aa }
            // n = 7, score = 300
            //   eb0b                 | jmp                 0xd
            //   04fc                 | add                 al, 0xfc
            //   eb07                 | jmp                 9
            //   2c3e                 | sub                 al, 0x3e
            //   c0e002               | shl                 al, 2
            //   042b                 | add                 al, 0x2b
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_7 = { 6a01 6a02 e8???????? 8bd8 ff7508 }
            // n = 5, score = 300
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_8 = { 66ab 83e903 79c6 f7d9 2bf9 }
            // n = 5, score = 300
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   83e903               | sub                 ecx, 3
            //   79c6                 | jns                 0xffffffc8
            //   f7d9                 | neg                 ecx
            //   2bf9                 | sub                 edi, ecx

        $sequence_9 = { 5f 5e c9 c20c00 c1c206 8bc2 }
            // n = 6, score = 300
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c20c00               | ret                 0xc
            //   c1c206               | rol                 edx, 6
            //   8bc2                 | mov                 eax, edx

    condition:
        7 of them and filesize < 245760
}
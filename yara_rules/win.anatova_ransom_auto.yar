rule win_anatova_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.anatova_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.anatova_ransom"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4c89d1 4c89da 4c8b1d???????? 41ffd3 488945f0 488b45f0 }
            // n = 6, score = 100
            //   4c89d1               | cmp                 eax, 0
            //   4c89da               | je                  0x3c7
            //   4c8b1d????????       |                     
            //   41ffd3               | dec                 eax
            //   488945f0             | lea                 eax, [ebp - 0x24]
            //   488b45f0             | mov                 byte ptr [ebp - 1], al

        $sequence_1 = { 4883f800 0f84a0010000 488b05???????? 4883f800 0f848f010000 488b05???????? 4883f800 }
            // n = 7, score = 100
            //   4883f800             | lea                 eax, [0x656d]
            //   0f84a0010000         | dec                 eax
            //   488b05????????       |                     
            //   4883f800             | mov                 dword ptr [ebp - 0x40], eax
            //   0f848f010000         | dec                 eax
            //   488b05????????       |                     
            //   4883f800             | lea                 eax, [0x657c]

        $sequence_2 = { 4989c2 4c89d1 4c89da 4c8b1d???????? 41ffd3 0fb6c0 8845d3 }
            // n = 7, score = 100
            //   4989c2               | dec                 ecx
            //   4c89d1               | mov                 ebx, eax
            //   4c89da               | dec                 eax
            //   4c8b1d????????       |                     
            //   41ffd3               | mov                 eax, dword ptr [ebp - 0x60]
            //   0fb6c0               | dec                 ecx
            //   8845d3               | mov                 edx, eax

        $sequence_3 = { b800000000 8845ff 488b4518 4989c2 4c89d1 e8???????? 0fb6c0 }
            // n = 7, score = 100
            //   b800000000           | dec                 eax
            //   8845ff               | add                 eax, 2
            //   488b4518             | mov                 ecx, dword ptr [ebp + 0x18]
            //   4989c2               | shr                 ecx, 0x10
            //   4c89d1               | mov                 byte ptr [eax], cl
            //   e8????????           |                     
            //   0fb6c0               | mov                 byte ptr [eax], cl

        $sequence_4 = { 0f84c2010000 488b05???????? 4883f800 0f84b1010000 488b05???????? 4883f800 0f84a0010000 }
            // n = 7, score = 100
            //   0f84c2010000         | call                ebx
            //   488b05????????       |                     
            //   4883f800             | dec                 eax
            //   0f84b1010000         | lea                 eax, [0x3ffa]
            //   488b05????????       |                     
            //   4883f800             | dec                 ecx
            //   0f84a0010000         | mov                 ebx, eax

        $sequence_5 = { 4989c9 4989c0 488d0577550000 4989c3 488b45a0 }
            // n = 5, score = 100
            //   4989c9               | movzx               eax, byte ptr [ebp - 2]
            //   4989c0               | cmp                 eax, 0
            //   488d0577550000       | je                  0x1af0
            //   4989c3               | movzx               eax, al
            //   488b45a0             | mov                 byte ptr [ebp - 1], al

        $sequence_6 = { 83fa00 0f8445000000 8b4528 c1e806 }
            // n = 4, score = 100
            //   83fa00               | dec                 eax
            //   0f8445000000         | lea                 eax, [0x3021]
            //   8b4528               | dec                 eax
            //   c1e806               | mov                 dword ptr [ebp - 0x48], eax

        $sequence_7 = { 488d45dc 4889442428 488b05???????? 4889442420 b800000000 4989c1 b806000000 }
            // n = 7, score = 100
            //   488d45dc             | lea                 eax, [0x4dee]
            //   4889442428           | dec                 ecx
            //   488b05????????       |                     
            //   4889442420           | mov                 ebx, eax
            //   b800000000           | dec                 eax
            //   4989c1               | mov                 eax, dword ptr [ebp - 0x60]
            //   b806000000           | dec                 eax

        $sequence_8 = { 4883f800 0f842f000000 b800800000 4989c0 48b80000000000000000 4989c3 }
            // n = 6, score = 100
            //   4883f800             | mov                 ecx, edx
            //   0f842f000000         | dec                 esp
            //   b800800000           | mov                 edx, ebx
            //   4989c0               | dec                 eax
            //   48b80000000000000000     | lea    eax, [0x58c0]
            //   4989c3               | dec                 eax

        $sequence_9 = { 4c8b1d???????? 41ffd3 0fb6c0 8845ff 488b45f0 4989c2 4c89d1 }
            // n = 7, score = 100
            //   4c8b1d????????       |                     
            //   41ffd3               | mov                 ecx, edx
            //   0fb6c0               | dec                 esp
            //   8845ff               | mov                 edx, ebx
            //   488b45f0             | dec                 eax
            //   4989c2               | mov                 dword ptr [ebp - 0x20], eax
            //   4c89d1               | mov                 eax, 4

    condition:
        7 of them and filesize < 671744
}
rule win_artfulpie_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.artfulpie."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.artfulpie"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a04 6800100000 51 03c3 50 }
            // n = 5, score = 100
            //   6a04                 | push                4
            //   6800100000           | push                0x1000
            //   51                   | push                ecx
            //   03c3                 | add                 eax, ebx
            //   50                   | push                eax

        $sequence_1 = { 8b0485984e4100 56 8b7508 57 }
            // n = 4, score = 100
            //   8b0485984e4100       | mov                 eax, dword ptr [eax*4 + 0x414e98]
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   57                   | push                edi

        $sequence_2 = { eb1a 8d45fc 50 8b04bd984e4100 ff743018 ff15???????? 85c0 }
            // n = 7, score = 100
            //   eb1a                 | jmp                 0x1c
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   8b04bd984e4100       | mov                 eax, dword ptr [edi*4 + 0x414e98]
            //   ff743018             | push                dword ptr [eax + esi + 0x18]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_3 = { 72bc 813c1150450000 57 8d3c11 7416 }
            // n = 5, score = 100
            //   72bc                 | jb                  0xffffffbe
            //   813c1150450000       | cmp                 dword ptr [ecx + edx], 0x4550
            //   57                   | push                edi
            //   8d3c11               | lea                 edi, [ecx + edx]
            //   7416                 | je                  0x18

        $sequence_4 = { c745d800000000 50 6a00 6a00 8d854cfcffff c745fc2a2f2a00 }
            // n = 6, score = 100
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d854cfcffff         | lea                 eax, [ebp - 0x3b4]
            //   c745fc2a2f2a00       | mov                 dword ptr [ebp - 4], 0x2a2f2a

        $sequence_5 = { 6bd830 56 8b048d984e4100 57 8b7d10 897dd0 }
            // n = 6, score = 100
            //   6bd830               | imul                ebx, eax, 0x30
            //   56                   | push                esi
            //   8b048d984e4100       | mov                 eax, dword ptr [ecx*4 + 0x414e98]
            //   57                   | push                edi
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   897dd0               | mov                 dword ptr [ebp - 0x30], edi

        $sequence_6 = { 8904bd984e4100 85c0 7514 6a0c 5e 8975e4 c745fcfeffffff }
            // n = 7, score = 100
            //   8904bd984e4100       | mov                 dword ptr [edi*4 + 0x414e98], eax
            //   85c0                 | test                eax, eax
            //   7514                 | jne                 0x16
            //   6a0c                 | push                0xc
            //   5e                   | pop                 esi
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   c745fcfeffffff       | mov                 dword ptr [ebp - 4], 0xfffffffe

        $sequence_7 = { 8d8010424100 8945e4 803800 8bc8 7435 8a4101 84c0 }
            // n = 7, score = 100
            //   8d8010424100         | lea                 eax, [eax + 0x414210]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   803800               | cmp                 byte ptr [eax], 0
            //   8bc8                 | mov                 ecx, eax
            //   7435                 | je                  0x37
            //   8a4101               | mov                 al, byte ptr [ecx + 1]
            //   84c0                 | test                al, al

        $sequence_8 = { 8b4508 dd00 ebc6 c745e0b8204100 e9???????? c745e0c0204100 e9???????? }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   dd00                 | fld                 qword ptr [eax]
            //   ebc6                 | jmp                 0xffffffc8
            //   c745e0b8204100       | mov                 dword ptr [ebp - 0x20], 0x4120b8
            //   e9????????           |                     
            //   c745e0c0204100       | mov                 dword ptr [ebp - 0x20], 0x4120c0
            //   e9????????           |                     

        $sequence_9 = { 8b4028 85c0 744f 03c7 }
            // n = 4, score = 100
            //   8b4028               | mov                 eax, dword ptr [eax + 0x28]
            //   85c0                 | test                eax, eax
            //   744f                 | je                  0x51
            //   03c7                 | add                 eax, edi

    condition:
        7 of them and filesize < 204800
}
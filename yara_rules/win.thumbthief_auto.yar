rule win_thumbthief_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.thumbthief."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thumbthief"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f774241c 8bf0 8d0cb500000000 e8???????? 8bc8 85f6 8b442410 }
            // n = 7, score = 100
            //   f774241c             | div                 dword ptr [esp + 0x1c]
            //   8bf0                 | mov                 esi, eax
            //   8d0cb500000000       | lea                 ecx, [esi*4]
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   85f6                 | test                esi, esi
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]

        $sequence_1 = { fe4713 eb04 c6400801 8b55c0 85d2 742e 8a4713 }
            // n = 7, score = 100
            //   fe4713               | inc                 byte ptr [edi + 0x13]
            //   eb04                 | jmp                 6
            //   c6400801             | mov                 byte ptr [eax + 8], 1
            //   8b55c0               | mov                 edx, dword ptr [ebp - 0x40]
            //   85d2                 | test                edx, edx
            //   742e                 | je                  0x30
            //   8a4713               | mov                 al, byte ptr [edi + 0x13]

        $sequence_2 = { ff75f8 e8???????? 83c40c 85c0 0f856e010000 8bce e8???????? }
            // n = 7, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f856e010000         | jne                 0x174
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_3 = { e8???????? ffb500feffff ff15???????? 899d00feffff c785bcfdffff841c0000 8d8dc0fdffff e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   ffb500feffff         | push                dword ptr [ebp - 0x200]
            //   ff15????????         |                     
            //   899d00feffff         | mov                 dword ptr [ebp - 0x200], ebx
            //   c785bcfdffff841c0000     | mov    dword ptr [ebp - 0x244], 0x1c84
            //   8d8dc0fdffff         | lea                 ecx, [ebp - 0x240]
            //   e8????????           |                     

        $sequence_4 = { ff15???????? 83c404 816364fffbffff 8bcb e8???????? 8bf0 83fe11 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4
            //   816364fffbffff       | and                 dword ptr [ebx + 0x64], 0xfffffbff
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83fe11               | cmp                 esi, 0x11

        $sequence_5 = { e8???????? ff75c8 8b4d0c e8???????? 8b5db0 83c318 895db0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   ff75c8               | push                dword ptr [ebp - 0x38]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   8b5db0               | mov                 ebx, dword ptr [ebp - 0x50]
            //   83c318               | add                 ebx, 0x18
            //   895db0               | mov                 dword ptr [ebp - 0x50], ebx

        $sequence_6 = { c745e800000000 c6043b28 47 8b4104 8945f0 33c0 663b4126 }
            // n = 7, score = 100
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   c6043b28             | mov                 byte ptr [ebx + edi], 0x28
            //   47                   | inc                 edi
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   33c0                 | xor                 eax, eax
            //   663b4126             | cmp                 ax, word ptr [ecx + 0x26]

        $sequence_7 = { ff7008 8bc8 e8???????? 8d8d28ffffff e8???????? c785b4feffffac000000 8bb574feffff }
            // n = 7, score = 100
            //   ff7008               | push                dword ptr [eax + 8]
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8d8d28ffffff         | lea                 ecx, [ebp - 0xd8]
            //   e8????????           |                     
            //   c785b4feffffac000000     | mov    dword ptr [ebp - 0x14c], 0xac
            //   8bb574feffff         | mov                 esi, dword ptr [ebp - 0x18c]

        $sequence_8 = { f20f108424c0000000 f20f1106 f20f108424c0000000 8b8c24c8000000 8b8424cc000000 238c2488000000 2384248c000000 }
            // n = 7, score = 100
            //   f20f108424c0000000     | movsd    xmm0, qword ptr [esp + 0xc0]
            //   f20f1106             | movsd               qword ptr [esi], xmm0
            //   f20f108424c0000000     | movsd    xmm0, qword ptr [esp + 0xc0]
            //   8b8c24c8000000       | mov                 ecx, dword ptr [esp + 0xc8]
            //   8b8424cc000000       | mov                 eax, dword ptr [esp + 0xcc]
            //   238c2488000000       | and                 ecx, dword ptr [esp + 0x88]
            //   2384248c000000       | and                 eax, dword ptr [esp + 0x8c]

        $sequence_9 = { 8d4ddc e8???????? b001 e8???????? c20800 688c000000 b8???????? }
            // n = 7, score = 100
            //   8d4ddc               | lea                 ecx, [ebp - 0x24]
            //   e8????????           |                     
            //   b001                 | mov                 al, 1
            //   e8????????           |                     
            //   c20800               | ret                 8
            //   688c000000           | push                0x8c
            //   b8????????           |                     

    condition:
        7 of them and filesize < 4235264
}
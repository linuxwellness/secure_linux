rule win_bit_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.bit_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bit_rat"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff742410 e8???????? 83c40c 8bc6 5e c3 6a00 }
            // n = 7, score = 200
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   6a00                 | push                0

        $sequence_1 = { c3 6a00 6a00 6896000000 688f000000 6a06 e8???????? }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6896000000           | push                0x96
            //   688f000000           | push                0x8f
            //   6a06                 | push                6
            //   e8????????           |                     

        $sequence_2 = { 8bc3 885603 c1e808 884605 8bc3 c1e810 c1eb18 }
            // n = 7, score = 200
            //   8bc3                 | mov                 eax, ebx
            //   885603               | mov                 byte ptr [esi + 3], dl
            //   c1e808               | shr                 eax, 8
            //   884605               | mov                 byte ptr [esi + 5], al
            //   8bc3                 | mov                 eax, ebx
            //   c1e810               | shr                 eax, 0x10
            //   c1eb18               | shr                 ebx, 0x18

        $sequence_3 = { 83ed01 75f1 52 53 e8???????? 83c408 8b54241c }
            // n = 7, score = 200
            //   83ed01               | sub                 ebp, 1
            //   75f1                 | jne                 0xfffffff3
            //   52                   | push                edx
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b54241c             | mov                 edx, dword ptr [esp + 0x1c]

        $sequence_4 = { c7463400000000 c7463000000000 8b7e2c 53 8b5d08 3bdf 7225 }
            // n = 7, score = 200
            //   c7463400000000       | mov                 dword ptr [esi + 0x34], 0
            //   c7463000000000       | mov                 dword ptr [esi + 0x30], 0
            //   8b7e2c               | mov                 edi, dword ptr [esi + 0x2c]
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   3bdf                 | cmp                 ebx, edi
            //   7225                 | jb                  0x27

        $sequence_5 = { ff7524 8bd6 b9???????? e8???????? 83c404 85c0 7516 }
            // n = 7, score = 200
            //   ff7524               | push                dword ptr [ebp + 0x24]
            //   8bd6                 | mov                 edx, esi
            //   b9????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   7516                 | jne                 0x18

        $sequence_6 = { f6403008 7534 8b01 3d04030000 7c2b 3d00000100 7424 }
            // n = 7, score = 200
            //   f6403008             | test                byte ptr [eax + 0x30], 8
            //   7534                 | jne                 0x36
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   3d04030000           | cmp                 eax, 0x304
            //   7c2b                 | jl                  0x2d
            //   3d00000100           | cmp                 eax, 0x10000
            //   7424                 | je                  0x26

        $sequence_7 = { e8???????? 83c40c 89442464 85c0 0f847c020000 8d442430 50 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   89442464             | mov                 dword ptr [esp + 0x64], eax
            //   85c0                 | test                eax, eax
            //   0f847c020000         | je                  0x282
            //   8d442430             | lea                 eax, [esp + 0x30]
            //   50                   | push                eax

        $sequence_8 = { e8???????? 83c408 8a4704 c745fc00000000 84c0 7432 c7461407000000 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8a4704               | mov                 al, byte ptr [edi + 4]
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   84c0                 | test                al, al
            //   7432                 | je                  0x34
            //   c7461407000000       | mov                 dword ptr [esi + 0x14], 7

        $sequence_9 = { b001 894e08 5f 5e 5d c20400 55 }
            // n = 7, score = 200
            //   b001                 | mov                 al, 1
            //   894e08               | mov                 dword ptr [esi + 8], ecx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   55                   | push                ebp

    condition:
        7 of them and filesize < 19405824
}
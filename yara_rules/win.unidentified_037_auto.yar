rule win_unidentified_037_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.unidentified_037."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_037"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 b9???????? c705????????01000000 e8???????? e8???????? 33c0 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   b9????????           |                     
            //   c705????????01000000     |     
            //   e8????????           |                     
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 8d542414 52 6a01 8b4108 899c243c040000 50 }
            // n = 6, score = 100
            //   8d542414             | lea                 edx, [esp + 0x14]
            //   52                   | push                edx
            //   6a01                 | push                1
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   899c243c040000       | mov                 dword ptr [esp + 0x43c], ebx
            //   50                   | push                eax

        $sequence_2 = { 8b450c 8b4e04 894608 66c704410000 53 ff15???????? }
            // n = 6, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   66c704410000         | mov                 word ptr [ecx + eax*2], 0
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_3 = { 33d2 33c9 8a7001 8a48ff 8a10 83c604 c1e208 }
            // n = 7, score = 100
            //   33d2                 | xor                 edx, edx
            //   33c9                 | xor                 ecx, ecx
            //   8a7001               | mov                 dh, byte ptr [eax + 1]
            //   8a48ff               | mov                 cl, byte ptr [eax - 1]
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   83c604               | add                 esi, 4
            //   c1e208               | shl                 edx, 8

        $sequence_4 = { 8b4d20 8b5500 8b4504 8bb424f0040000 51 52 50 }
            // n = 7, score = 100
            //   8b4d20               | mov                 ecx, dword ptr [ebp + 0x20]
            //   8b5500               | mov                 edx, dword ptr [ebp]
            //   8b4504               | mov                 eax, dword ptr [ebp + 4]
            //   8bb424f0040000       | mov                 esi, dword ptr [esp + 0x4f0]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_5 = { 8d4201 eb05 a1???????? 80382f 756b 8d8c2488000000 }
            // n = 6, score = 100
            //   8d4201               | lea                 eax, [edx + 1]
            //   eb05                 | jmp                 7
            //   a1????????           |                     
            //   80382f               | cmp                 byte ptr [eax], 0x2f
            //   756b                 | jne                 0x6d
            //   8d8c2488000000       | lea                 ecx, [esp + 0x88]

        $sequence_6 = { 33c0 85c9 7429 56 be???????? 81e600f0ffff }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   85c9                 | test                ecx, ecx
            //   7429                 | je                  0x2b
            //   56                   | push                esi
            //   be????????           |                     
            //   81e600f0ffff         | and                 esi, 0xfffff000

        $sequence_7 = { 6aff 68???????? 50 b81c100000 64892500000000 e8???????? 56 }
            // n = 7, score = 100
            //   6aff                 | push                -1
            //   68????????           |                     
            //   50                   | push                eax
            //   b81c100000           | mov                 eax, 0x101c
            //   64892500000000       | mov                 dword ptr fs:[0], esp
            //   e8????????           |                     
            //   56                   | push                esi

        $sequence_8 = { 8bcb 83e103 f3a4 8b5820 895028 c7402c00000000 8b4828 }
            // n = 7, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b5820               | mov                 ebx, dword ptr [eax + 0x20]
            //   895028               | mov                 dword ptr [eax + 0x28], edx
            //   c7402c00000000       | mov                 dword ptr [eax + 0x2c], 0
            //   8b4828               | mov                 ecx, dword ptr [eax + 0x28]

        $sequence_9 = { 53 52 8d8c2460010000 899c24c8080000 e8???????? 6a01 8d4c2434 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   52                   | push                edx
            //   8d8c2460010000       | lea                 ecx, [esp + 0x160]
            //   899c24c8080000       | mov                 dword ptr [esp + 0x8c8], ebx
            //   e8????????           |                     
            //   6a01                 | push                1
            //   8d4c2434             | lea                 ecx, [esp + 0x34]

    condition:
        7 of them and filesize < 167936
}
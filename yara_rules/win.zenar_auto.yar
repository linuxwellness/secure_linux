rule win_zenar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.zenar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zenar"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d45f4 64a300000000 8bd9 895dec 895de0 895dd4 c745d800000000 }
            // n = 7, score = 100
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bd9                 | mov                 ebx, ecx
            //   895dec               | mov                 dword ptr [ebp - 0x14], ebx
            //   895de0               | mov                 dword ptr [ebp - 0x20], ebx
            //   895dd4               | mov                 dword ptr [ebp - 0x2c], ebx
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0

        $sequence_1 = { 8b5df0 8b55e8 894b30 89733c 894340 895320 897b2c }
            // n = 7, score = 100
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   894b30               | mov                 dword ptr [ebx + 0x30], ecx
            //   89733c               | mov                 dword ptr [ebx + 0x3c], esi
            //   894340               | mov                 dword ptr [ebx + 0x40], eax
            //   895320               | mov                 dword ptr [ebx + 0x20], edx
            //   897b2c               | mov                 dword ptr [ebx + 0x2c], edi

        $sequence_2 = { e8???????? 8d8db8feffff e8???????? 8b55c8 83fa08 722e 8b4db4 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d8db8feffff         | lea                 ecx, [ebp - 0x148]
            //   e8????????           |                     
            //   8b55c8               | mov                 edx, dword ptr [ebp - 0x38]
            //   83fa08               | cmp                 edx, 8
            //   722e                 | jb                  0x30
            //   8b4db4               | mov                 ecx, dword ptr [ebp - 0x4c]

        $sequence_3 = { 84c0 0f852f010000 8d45d4 8bcf }
            // n = 4, score = 100
            //   84c0                 | test                al, al
            //   0f852f010000         | jne                 0x135
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   8bcf                 | mov                 ecx, edi

        $sequence_4 = { 40 c745ec13ff4000 894df8 8945fc }
            // n = 4, score = 100
            //   40                   | inc                 eax
            //   c745ec13ff4000       | mov                 dword ptr [ebp - 0x14], 0x40ff13
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_5 = { c745ec00000000 660fd645e4 c745e400000000 c745e800000000 c745ec00000000 c745fc00000000 33c0 }
            // n = 7, score = 100
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0
            //   660fd645e4           | movq                qword ptr [ebp - 0x1c], xmm0
            //   c745e400000000       | mov                 dword ptr [ebp - 0x1c], 0
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { 50 ff5108 e8???????? c21000 8b81f0000000 c3 55 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff5108               | call                dword ptr [ecx + 8]
            //   e8????????           |                     
            //   c21000               | ret                 0x10
            //   8b81f0000000         | mov                 eax, dword ptr [ecx + 0xf0]
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_7 = { 6880000000 ff750c 6a01 6800000040 }
            // n = 4, score = 100
            //   6880000000           | push                0x80
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a01                 | push                1
            //   6800000040           | push                0x40000000

        $sequence_8 = { 43 885dfc 85f6 0f8483000000 8d45d4 50 8d458c }
            // n = 7, score = 100
            //   43                   | inc                 ebx
            //   885dfc               | mov                 byte ptr [ebp - 4], bl
            //   85f6                 | test                esi, esi
            //   0f8483000000         | je                  0x89
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax
            //   8d458c               | lea                 eax, [ebp - 0x74]

        $sequence_9 = { 8bc1 894dfc c9 c3 55 8bec }
            // n = 6, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

    condition:
        7 of them and filesize < 519168
}
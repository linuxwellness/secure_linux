rule win_coronavirus_ransomware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.coronavirus_ransomware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.coronavirus_ransomware"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a09 ffd7 50 ffd6 a3???????? }
            // n = 5, score = 100
            //   6a09                 | push                9
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   a3????????           |                     

        $sequence_1 = { 7426 0fb60d???????? 0fb6c0 0fb68080fa4000 }
            // n = 4, score = 100
            //   7426                 | je                  0x28
            //   0fb60d????????       |                     
            //   0fb6c0               | movzx               eax, al
            //   0fb68080fa4000       | movzx               eax, byte ptr [eax + 0x40fa80]

        $sequence_2 = { c3 55 8bec b814810000 e8???????? 53 }
            // n = 6, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   b814810000           | mov                 eax, 0x8114
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_3 = { 50 e8???????? 83c418 68???????? ff15???????? 33db 8d9b00000000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   68????????           |                     
            //   ff15????????         |                     
            //   33db                 | xor                 ebx, ebx
            //   8d9b00000000         | lea                 ebx, [ebx]

        $sequence_4 = { 6a07 ff15???????? 50 ff15???????? 397de4 0f85ed050000 ff15???????? }
            // n = 7, score = 100
            //   6a07                 | push                7
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   397de4               | cmp                 dword ptr [ebp - 0x1c], edi
            //   0f85ed050000         | jne                 0x5f3
            //   ff15????????         |                     

        $sequence_5 = { 6a01 51 ffd6 e8???????? 8b15???????? 68204e0000 6a09 }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   51                   | push                ecx
            //   ffd6                 | call                esi
            //   e8????????           |                     
            //   8b15????????         |                     
            //   68204e0000           | push                0x4e20
            //   6a09                 | push                9

        $sequence_6 = { 85c0 0f85f7010000 83ceff 8975fc 8975e4 c745dc00400000 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   0f85f7010000         | jne                 0x1fd
            //   83ceff               | or                  esi, 0xffffffff
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   c745dc00400000       | mov                 dword ptr [ebp - 0x24], 0x4000

        $sequence_7 = { ff15???????? e8???????? 035dc4 807d0802 8b7dc8 0f8583000000 807d0c01 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   e8????????           |                     
            //   035dc4               | add                 ebx, dword ptr [ebp - 0x3c]
            //   807d0802             | cmp                 byte ptr [ebp + 8], 2
            //   8b7dc8               | mov                 edi, dword ptr [ebp - 0x38]
            //   0f8583000000         | jne                 0x89
            //   807d0c01             | cmp                 byte ptr [ebp + 0xc], 1

        $sequence_8 = { 2bf8 8d642400 8a08 880c07 }
            // n = 4, score = 100
            //   2bf8                 | sub                 edi, eax
            //   8d642400             | lea                 esp, [esp]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   880c07               | mov                 byte ptr [edi + eax], cl

        $sequence_9 = { 8d0477 50 8945f8 8d85f4dfffff }
            // n = 4, score = 100
            //   8d0477               | lea                 eax, [edi + esi*2]
            //   50                   | push                eax
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8d85f4dfffff         | lea                 eax, [ebp - 0x200c]

    condition:
        7 of them and filesize < 235520
}
rule win_xbtl_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.xbtl."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xbtl"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 81e2ff000000 8b1495a04d4100 81e10000ff00 81e200ff0000 33ca 8bd3 c1ea18 }
            // n = 7, score = 100
            //   81e2ff000000         | and                 edx, 0xff
            //   8b1495a04d4100       | mov                 edx, dword ptr [edx*4 + 0x414da0]
            //   81e10000ff00         | and                 ecx, 0xff0000
            //   81e200ff0000         | and                 edx, 0xff00
            //   33ca                 | xor                 ecx, edx
            //   8bd3                 | mov                 edx, ebx
            //   c1ea18               | shr                 edx, 0x18

        $sequence_1 = { 33148da0514100 8b4df8 c1e918 33148da04d4100 8b4dfc 81e3ff000000 333c9da0594100 }
            // n = 7, score = 100
            //   33148da0514100       | xor                 edx, dword ptr [ecx*4 + 0x4151a0]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   c1e918               | shr                 ecx, 0x18
            //   33148da04d4100       | xor                 edx, dword ptr [ecx*4 + 0x414da0]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   81e3ff000000         | and                 ebx, 0xff
            //   333c9da0594100       | xor                 edi, dword ptr [ebx*4 + 0x4159a0]

        $sequence_2 = { 57 8985c0fdffff 8985c4fdffff ff15???????? 85c0 0f845d020000 39b5c4fdffff }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8985c0fdffff         | mov                 dword ptr [ebp - 0x240], eax
            //   8985c4fdffff         | mov                 dword ptr [ebp - 0x23c], eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f845d020000         | je                  0x263
            //   39b5c4fdffff         | cmp                 dword ptr [ebp - 0x23c], esi

        $sequence_3 = { 8bf0 83c410 85f6 0f84be000000 }
            // n = 4, score = 100
            //   8bf0                 | mov                 esi, eax
            //   83c410               | add                 esp, 0x10
            //   85f6                 | test                esi, esi
            //   0f84be000000         | je                  0xc4

        $sequence_4 = { 6685c9 75f5 2bc2 d1f8 3dfc7f0000 0f8399010000 53 }
            // n = 7, score = 100
            //   6685c9               | test                cx, cx
            //   75f5                 | jne                 0xfffffff7
            //   2bc2                 | sub                 eax, edx
            //   d1f8                 | sar                 eax, 1
            //   3dfc7f0000           | cmp                 eax, 0x7ffc
            //   0f8399010000         | jae                 0x19f
            //   53                   | push                ebx

        $sequence_5 = { 8bd1 33d0 33d3 03f2 03b4bdc0feffff 8b95b0feffff 8d9416a1ebd96e }
            // n = 7, score = 100
            //   8bd1                 | mov                 edx, ecx
            //   33d0                 | xor                 edx, eax
            //   33d3                 | xor                 edx, ebx
            //   03f2                 | add                 esi, edx
            //   03b4bdc0feffff       | add                 esi, dword ptr [ebp + edi*4 - 0x140]
            //   8b95b0feffff         | mov                 edx, dword ptr [ebp - 0x150]
            //   8d9416a1ebd96e       | lea                 edx, [esi + edx + 0x6ed9eba1]

        $sequence_6 = { 8b5608 8b06 893c90 85ff 7405 ff4608 eb12 }
            // n = 7, score = 100
            //   8b5608               | mov                 edx, dword ptr [esi + 8]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   893c90               | mov                 dword ptr [eax + edx*4], edi
            //   85ff                 | test                edi, edi
            //   7405                 | je                  7
            //   ff4608               | inc                 dword ptr [esi + 8]
            //   eb12                 | jmp                 0x14

        $sequence_7 = { ff15???????? 8bf8 83ffff 743f 8b55f8 6a00 8d4dfc }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   83ffff               | cmp                 edi, -1
            //   743f                 | je                  0x41
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   6a00                 | push                0
            //   8d4dfc               | lea                 ecx, [ebp - 4]

        $sequence_8 = { 8b3c9da0554100 8b5df4 333c9da0514100 8b5dec 335004 3308 c1eb18 }
            // n = 7, score = 100
            //   8b3c9da0554100       | mov                 edi, dword ptr [ebx*4 + 0x4155a0]
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]
            //   333c9da0514100       | xor                 edi, dword ptr [ebx*4 + 0x4151a0]
            //   8b5dec               | mov                 ebx, dword ptr [ebp - 0x14]
            //   335004               | xor                 edx, dword ptr [eax + 4]
            //   3308                 | xor                 ecx, dword ptr [eax]
            //   c1eb18               | shr                 ebx, 0x18

        $sequence_9 = { c1ce08 81e600ff00ff c1c208 81e2ff00ff00 0bf2 897004 }
            // n = 6, score = 100
            //   c1ce08               | ror                 esi, 8
            //   81e600ff00ff         | and                 esi, 0xff00ff00
            //   c1c208               | rol                 edx, 8
            //   81e2ff00ff00         | and                 edx, 0xff00ff
            //   0bf2                 | or                  esi, edx
            //   897004               | mov                 dword ptr [eax + 4], esi

    condition:
        7 of them and filesize < 401408
}
rule win_mrac_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.mrac."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mrac"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3473 8d8c2448030000 6a05 88842454030000 e8???????? 3474 8d8c2448030000 }
            // n = 7, score = 200
            //   3473                 | xor                 al, 0x73
            //   8d8c2448030000       | lea                 ecx, [esp + 0x348]
            //   6a05                 | push                5
            //   88842454030000       | mov                 byte ptr [esp + 0x354], al
            //   e8????????           |                     
            //   3474                 | xor                 al, 0x74
            //   8d8c2448030000       | lea                 ecx, [esp + 0x348]

        $sequence_1 = { 8a8424f40b0000 e8???????? 8bc8 e8???????? c78424501000000e000000 8d8c2450100000 c684245410000060 }
            // n = 7, score = 200
            //   8a8424f40b0000       | mov                 al, byte ptr [esp + 0xbf4]
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   c78424501000000e000000     | mov    dword ptr [esp + 0x1050], 0xe
            //   8d8c2450100000       | lea                 ecx, [esp + 0x1050]
            //   c684245410000060     | mov                 byte ptr [esp + 0x1054], 0x60

        $sequence_2 = { 8a8424b80a0000 c68424d30a000000 e8???????? 8bc8 e8???????? 6a00 8d8c24d80a0000 }
            // n = 7, score = 200
            //   8a8424b80a0000       | mov                 al, byte ptr [esp + 0xab8]
            //   c68424d30a000000     | mov                 byte ptr [esp + 0xad3], 0
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   6a00                 | push                0
            //   8d8c24d80a0000       | lea                 ecx, [esp + 0xad8]

        $sequence_3 = { 0409 3453 888424950f0000 8b8424880f0000 040a 346f 888424960f0000 }
            // n = 7, score = 200
            //   0409                 | add                 al, 9
            //   3453                 | xor                 al, 0x53
            //   888424950f0000       | mov                 byte ptr [esp + 0xf95], al
            //   8b8424880f0000       | mov                 eax, dword ptr [esp + 0xf88]
            //   040a                 | add                 al, 0xa
            //   346f                 | xor                 al, 0x6f
            //   888424960f0000       | mov                 byte ptr [esp + 0xf96], al

        $sequence_4 = { 88858bfbffff 8b8580fbffff 0408 3420 88858cfbffff 8b8580fbffff 0409 }
            // n = 7, score = 200
            //   88858bfbffff         | mov                 byte ptr [ebp - 0x475], al
            //   8b8580fbffff         | mov                 eax, dword ptr [ebp - 0x480]
            //   0408                 | add                 al, 8
            //   3420                 | xor                 al, 0x20
            //   88858cfbffff         | mov                 byte ptr [ebp - 0x474], al
            //   8b8580fbffff         | mov                 eax, dword ptr [ebp - 0x480]
            //   0409                 | add                 al, 9

        $sequence_5 = { 8884243a150000 e8???????? 3453 8d8c2428150000 6a0c 8884243b150000 e8???????? }
            // n = 7, score = 200
            //   8884243a150000       | mov                 byte ptr [esp + 0x153a], al
            //   e8????????           |                     
            //   3453                 | xor                 al, 0x53
            //   8d8c2428150000       | lea                 ecx, [esp + 0x1528]
            //   6a0c                 | push                0xc
            //   8884243b150000       | mov                 byte ptr [esp + 0x153b], al
            //   e8????????           |                     

        $sequence_6 = { 888424de0a0000 e8???????? 3420 8d8c24d40a0000 6a04 888424df0a0000 e8???????? }
            // n = 7, score = 200
            //   888424de0a0000       | mov                 byte ptr [esp + 0xade], al
            //   e8????????           |                     
            //   3420                 | xor                 al, 0x20
            //   8d8c24d40a0000       | lea                 ecx, [esp + 0xad4]
            //   6a04                 | push                4
            //   888424df0a0000       | mov                 byte ptr [esp + 0xadf], al
            //   e8????????           |                     

        $sequence_7 = { 3465 888424a7000000 8b842488000000 041c 3420 888424a8000000 8b842488000000 }
            // n = 7, score = 200
            //   3465                 | xor                 al, 0x65
            //   888424a7000000       | mov                 byte ptr [esp + 0xa7], al
            //   8b842488000000       | mov                 eax, dword ptr [esp + 0x88]
            //   041c                 | add                 al, 0x1c
            //   3420                 | xor                 al, 0x20
            //   888424a8000000       | mov                 byte ptr [esp + 0xa8], al
            //   8b842488000000       | mov                 eax, dword ptr [esp + 0x88]

        $sequence_8 = { c684243f0d000011 c68424400d000042 c68424410d000045 c68424420d00005e c68424430d000041 c68424440d000011 c68424450d00007c }
            // n = 7, score = 200
            //   c684243f0d000011     | mov                 byte ptr [esp + 0xd3f], 0x11
            //   c68424400d000042     | mov                 byte ptr [esp + 0xd40], 0x42
            //   c68424410d000045     | mov                 byte ptr [esp + 0xd41], 0x45
            //   c68424420d00005e     | mov                 byte ptr [esp + 0xd42], 0x5e
            //   c68424430d000041     | mov                 byte ptr [esp + 0xd43], 0x41
            //   c68424440d000011     | mov                 byte ptr [esp + 0xd44], 0x11
            //   c68424450d00007c     | mov                 byte ptr [esp + 0xd45], 0x7c

        $sequence_9 = { 6a25 8884240f070000 e8???????? 0442 8d8c24f4060000 6a25 88842410070000 }
            // n = 7, score = 200
            //   6a25                 | push                0x25
            //   8884240f070000       | mov                 byte ptr [esp + 0x70f], al
            //   e8????????           |                     
            //   0442                 | add                 al, 0x42
            //   8d8c24f4060000       | lea                 ecx, [esp + 0x6f4]
            //   6a25                 | push                0x25
            //   88842410070000       | mov                 byte ptr [esp + 0x710], al

    condition:
        7 of them and filesize < 745472
}
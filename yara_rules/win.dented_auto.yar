rule win_dented_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.dented."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dented"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd6 53 6a00 8985dcfdffff }
            // n = 4, score = 400
            //   ffd6                 | call                esi
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   8985dcfdffff         | mov                 dword ptr [ebp - 0x224], eax

        $sequence_1 = { 2bc1 03c7 33db 5f }
            // n = 4, score = 400
            //   2bc1                 | sub                 eax, ecx
            //   03c7                 | add                 eax, edi
            //   33db                 | xor                 ebx, ebx
            //   5f                   | pop                 edi

        $sequence_2 = { 53 53 68???????? ff15???????? 6a01 }
            // n = 5, score = 400
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   68????????           |                     
            //   ff15????????         |                     
            //   6a01                 | push                1

        $sequence_3 = { 8d85ecfbffff 6810040000 53 50 8bf2 899de8fbffff e8???????? }
            // n = 7, score = 400
            //   8d85ecfbffff         | lea                 eax, [ebp - 0x414]
            //   6810040000           | push                0x410
            //   53                   | push                ebx
            //   50                   | push                eax
            //   8bf2                 | mov                 esi, edx
            //   899de8fbffff         | mov                 dword ptr [ebp - 0x418], ebx
            //   e8????????           |                     

        $sequence_4 = { 8d4c243c 6a00 6a01 e8???????? 6a00 }
            // n = 5, score = 400
            //   8d4c243c             | lea                 ecx, [esp + 0x3c]
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_5 = { eb34 f6423c04 7520 8b421c }
            // n = 4, score = 400
            //   eb34                 | jmp                 0x36
            //   f6423c04             | test                byte ptr [edx + 0x3c], 4
            //   7520                 | jne                 0x22
            //   8b421c               | mov                 eax, dword ptr [edx + 0x1c]

        $sequence_6 = { 53 e8???????? 8b4c2444 83c418 33f6 8b10 89550c }
            // n = 7, score = 400
            //   53                   | push                ebx
            //   e8????????           |                     
            //   8b4c2444             | mov                 ecx, dword ptr [esp + 0x44]
            //   83c418               | add                 esp, 0x18
            //   33f6                 | xor                 esi, esi
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   89550c               | mov                 dword ptr [ebp + 0xc], edx

        $sequence_7 = { 7204 8b07 eb02 8bc7 8a1c18 8d55ff a1???????? }
            // n = 7, score = 400
            //   7204                 | jb                  6
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   8a1c18               | mov                 bl, byte ptr [eax + ebx]
            //   8d55ff               | lea                 edx, [ebp - 1]
            //   a1????????           |                     

        $sequence_8 = { 57 8d85f8feffff 50 6a01 6a04 ff15???????? }
            // n = 6, score = 400
            //   57                   | push                edi
            //   8d85f8feffff         | lea                 eax, [ebp - 0x108]
            //   50                   | push                eax
            //   6a01                 | push                1
            //   6a04                 | push                4
            //   ff15????????         |                     

        $sequence_9 = { 8bf2 85f6 7fde 5b }
            // n = 4, score = 400
            //   8bf2                 | mov                 esi, edx
            //   85f6                 | test                esi, esi
            //   7fde                 | jg                  0xffffffe0
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 450560
}
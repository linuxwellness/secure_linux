rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c20400 56 8bf1 8b4618 85c0 7425 }
            // n = 6, score = 100
            //   c20400               | ret                 4
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   85c0                 | test                eax, eax
            //   7425                 | je                  0x27

        $sequence_1 = { 33c1 0bd9 8bfb 8bcb 334df0 33fa 334dec }
            // n = 7, score = 100
            //   33c1                 | xor                 eax, ecx
            //   0bd9                 | or                  ebx, ecx
            //   8bfb                 | mov                 edi, ebx
            //   8bcb                 | mov                 ecx, ebx
            //   334df0               | xor                 ecx, dword ptr [ebp - 0x10]
            //   33fa                 | xor                 edi, edx
            //   334dec               | xor                 ecx, dword ptr [ebp - 0x14]

        $sequence_2 = { 51 e8???????? 83c408 eb62 885e30 8b06 8b38 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   eb62                 | jmp                 0x64
            //   885e30               | mov                 byte ptr [esi + 0x30], bl
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b38                 | mov                 edi, dword ptr [eax]

        $sequence_3 = { 33d0 c1cb05 33d6 33d9 33de d1c9 33ca }
            // n = 7, score = 100
            //   33d0                 | xor                 edx, eax
            //   c1cb05               | ror                 ebx, 5
            //   33d6                 | xor                 edx, esi
            //   33d9                 | xor                 ebx, ecx
            //   33de                 | xor                 ebx, esi
            //   d1c9                 | ror                 ecx, 1
            //   33ca                 | xor                 ecx, edx

        $sequence_4 = { 3355f0 0bc3 23d0 8b45e4 33d7 0bc6 8bca }
            // n = 7, score = 100
            //   3355f0               | xor                 edx, dword ptr [ebp - 0x10]
            //   0bc3                 | or                  eax, ebx
            //   23d0                 | and                 edx, eax
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   33d7                 | xor                 edx, edi
            //   0bc6                 | or                  eax, esi
            //   8bca                 | mov                 ecx, edx

        $sequence_5 = { 8995ecefffff 8bf3 6bf930 c1fe06 6a00 8b0cb568ff4700 ff743924 }
            // n = 7, score = 100
            //   8995ecefffff         | mov                 dword ptr [ebp - 0x1014], edx
            //   8bf3                 | mov                 esi, ebx
            //   6bf930               | imul                edi, ecx, 0x30
            //   c1fe06               | sar                 esi, 6
            //   6a00                 | push                0
            //   8b0cb568ff4700       | mov                 ecx, dword ptr [esi*4 + 0x47ff68]
            //   ff743924             | push                dword ptr [ecx + edi + 0x24]

        $sequence_6 = { 59 85c0 7479 894708 eb0d 8b4f0c }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7479                 | je                  0x7b
            //   894708               | mov                 dword ptr [edi + 8], eax
            //   eb0d                 | jmp                 0xf
            //   8b4f0c               | mov                 ecx, dword ptr [edi + 0xc]

        $sequence_7 = { 8b049d68ff4700 f644082801 7469 56 }
            // n = 4, score = 100
            //   8b049d68ff4700       | mov                 eax, dword ptr [ebx*4 + 0x47ff68]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7469                 | je                  0x6b
            //   56                   | push                esi

        $sequence_8 = { 6a00 6a00 68f0000000 ff35???????? c605????????01 ff15???????? }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   68f0000000           | push                0xf0
            //   ff35????????         |                     
            //   c605????????01       |                     
            //   ff15????????         |                     

        $sequence_9 = { 8975f0 2345ec 0bca 33c8 8955f4 2375ec 894dfc }
            // n = 7, score = 100
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   2345ec               | and                 eax, dword ptr [ebp - 0x14]
            //   0bca                 | or                  ecx, edx
            //   33c8                 | xor                 ecx, eax
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   2375ec               | and                 esi, dword ptr [ebp - 0x14]
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx

    condition:
        7 of them and filesize < 1122304
}
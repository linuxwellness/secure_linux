rule win_zlob_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.zlob."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zlob"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb05 ba???????? 8b45e8 85c0 7404 }
            // n = 5, score = 200
            //   eb05                 | jmp                 7
            //   ba????????           |                     
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6

        $sequence_1 = { 8944241c ff742414 6a00 50 e8???????? 83c410 ffd3 }
            // n = 7, score = 200
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   ff742414             | push                dword ptr [esp + 0x14]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   ffd3                 | call                ebx

        $sequence_2 = { 33d2 8945f8 8365f000 8bc2 d1f8 8bca 83e101 }
            // n = 7, score = 200
            //   33d2                 | xor                 edx, edx
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8365f000             | and                 dword ptr [ebp - 0x10], 0
            //   8bc2                 | mov                 eax, edx
            //   d1f8                 | sar                 eax, 1
            //   8bca                 | mov                 ecx, edx
            //   83e101               | and                 ecx, 1

        $sequence_3 = { c744243c01000000 ff15???????? ffd3 ffd3 ffd6 ffd7 ffd3 }
            // n = 7, score = 200
            //   c744243c01000000     | mov                 dword ptr [esp + 0x3c], 1
            //   ff15????????         |                     
            //   ffd3                 | call                ebx
            //   ffd3                 | call                ebx
            //   ffd6                 | call                esi
            //   ffd7                 | call                edi
            //   ffd3                 | call                ebx

        $sequence_4 = { 33d2 83f91c 0f9dc2 8bf0 4a }
            // n = 5, score = 200
            //   33d2                 | xor                 edx, edx
            //   83f91c               | cmp                 ecx, 0x1c
            //   0f9dc2               | setge               dl
            //   8bf0                 | mov                 esi, eax
            //   4a                   | dec                 edx

        $sequence_5 = { ffd6 ffd7 c64424196c c644241470 }
            // n = 4, score = 200
            //   ffd6                 | call                esi
            //   ffd7                 | call                edi
            //   c64424196c           | mov                 byte ptr [esp + 0x19], 0x6c
            //   c644241470           | mov                 byte ptr [esp + 0x14], 0x70

        $sequence_6 = { ffd6 ffd5 ffd6 ffd6 ffd6 ffd5 ffd6 }
            // n = 7, score = 200
            //   ffd6                 | call                esi
            //   ffd5                 | call                ebp
            //   ffd6                 | call                esi
            //   ffd6                 | call                esi
            //   ffd6                 | call                esi
            //   ffd5                 | call                ebp
            //   ffd6                 | call                esi

        $sequence_7 = { ffd7 ffd6 ffd6 ffd7 8b442434 8b4c2424 50 }
            // n = 7, score = 200
            //   ffd7                 | call                edi
            //   ffd6                 | call                esi
            //   ffd6                 | call                esi
            //   ffd7                 | call                edi
            //   8b442434             | mov                 eax, dword ptr [esp + 0x34]
            //   8b4c2424             | mov                 ecx, dword ptr [esp + 0x24]
            //   50                   | push                eax

        $sequence_8 = { 5f f7ff 5f 85d2 7407 6a04 }
            // n = 6, score = 200
            //   5f                   | pop                 edi
            //   f7ff                 | idiv                edi
            //   5f                   | pop                 edi
            //   85d2                 | test                edx, edx
            //   7407                 | je                  9
            //   6a04                 | push                4

        $sequence_9 = { 0fb600 8b750c 0fb6c8 83e00f c1e904 03c2 }
            // n = 6, score = 200
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   0fb6c8               | movzx               ecx, al
            //   83e00f               | and                 eax, 0xf
            //   c1e904               | shr                 ecx, 4
            //   03c2                 | add                 eax, edx

    condition:
        7 of them and filesize < 98304
}
rule win_crosswalk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.crosswalk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crosswalk"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33f6 8d6e20 8bcd e8???????? }
            // n = 4, score = 1300
            //   33f6                 | inc                 ebp
            //   8d6e20               | mov                 eax, esi
            //   8bcd                 | xor                 edx, edx
            //   e8????????           |                     

        $sequence_1 = { 458bc6 33d2 488bc8 e8???????? 4533c9 4533c0 }
            // n = 6, score = 1300
            //   458bc6               | inc                 ebp
            //   33d2                 | mov                 eax, esi
            //   488bc8               | xor                 edx, edx
            //   e8????????           |                     
            //   4533c9               | dec                 eax
            //   4533c0               | mov                 ecx, eax

        $sequence_2 = { 8bc2 c1e81f 03d0 69c2890e0000 }
            // n = 4, score = 1300
            //   8bc2                 | xor                 ecx, ecx
            //   c1e81f               | inc                 ebp
            //   03d0                 | mov                 eax, esi
            //   69c2890e0000         | xor                 edx, edx

        $sequence_3 = { ff15???????? 448bf0 4533c9 4533c0 }
            // n = 4, score = 1300
            //   ff15????????         |                     
            //   448bf0               | inc                 ecx
            //   4533c9               | mov                 eax, eax
            //   4533c0               | imul                ecx

        $sequence_4 = { 4c8bc6 33d2 410fbe00 49ffc0 }
            // n = 4, score = 1300
            //   4c8bc6               | inc                 ecx
            //   33d2                 | sub                 edi, 1
            //   410fbe00             | inc                 esp
            //   49ffc0               | mov                 esi, eax

        $sequence_5 = { 458d7ee0 418bd7 ff15???????? 4821742420 }
            // n = 4, score = 1300
            //   458d7ee0             | dec                 eax
            //   418bd7               | mov                 ecx, eax
            //   ff15????????         |                     
            //   4821742420           | inc                 ebp

        $sequence_6 = { 410fbe00 49ffc0 d3ca 03d0 4183ef01 }
            // n = 5, score = 1300
            //   410fbe00             | imul                ecx
            //   49ffc0               | add                 edx, ecx
            //   d3ca                 | sar                 edx, 0xb
            //   03d0                 | mov                 eax, edx
            //   4183ef01             | shr                 eax, 0x1f

        $sequence_7 = { 418bc0 f7e9 03d1 c1fa0b 8bc2 c1e81f }
            // n = 6, score = 1300
            //   418bc0               | inc                 ebp
            //   f7e9                 | xor                 ecx, ecx
            //   03d1                 | inc                 ebp
            //   c1fa0b               | xor                 eax, eax
            //   8bc2                 | inc                 ecx
            //   c1e81f               | mov                 eax, eax

        $sequence_8 = { 8975e0 8975f0 c745f430234100 8b7485bc 8d4601 8945b8 }
            // n = 6, score = 200
            //   8975e0               | shr                 eax, 0x1f
            //   8975f0               | add                 edx, eax
            //   c745f430234100       | imul                eax, edx, 0xe89
            //   8b7485bc             | inc                 ecx
            //   8d4601               | movsx               eax, byte ptr [eax]
            //   8945b8               | dec                 ecx

        $sequence_9 = { 83e801 0f8501010000 c745e0245b4100 8b4508 8bcf }
            // n = 5, score = 200
            //   83e801               | dec                 ecx
            //   0f8501010000         | inc                 eax
            //   c745e0245b4100       | ror                 edx, cl
            //   8b4508               | add                 edx, eax
            //   8bcf                 | shr                 eax, 0x1f

        $sequence_10 = { 0f8580000000 8b4508 dd00 ebc6 c745e0285b4100 }
            // n = 5, score = 200
            //   0f8580000000         | sub                 edi, 1
            //   8b4508               | jne                 0
            //   dd00                 | xor                 edx, edx
            //   ebc6                 | inc                 ecx
            //   c745e0285b4100       | movsx               eax, byte ptr [eax]

        $sequence_11 = { 3b0cc5501c4100 7427 40 83f82d 72f1 8d41ed }
            // n = 6, score = 200
            //   3b0cc5501c4100       | mov                 eax, edx
            //   7427                 | shr                 eax, 0x1f
            //   40                   | add                 edx, eax
            //   83f82d               | imul                eax, edx, 0xe89
            //   72f1                 | xor                 edx, edx
            //   8d41ed               | inc                 ecx

        $sequence_12 = { 7420 6bc618 57 8db880904100 57 }
            // n = 5, score = 200
            //   7420                 | add                 edx, eax
            //   6bc618               | imul                eax, edx, 0xe89
            //   57                   | cmp                 ecx, eax
            //   8db880904100         | dec                 ecx
            //   57                   | inc                 eax

        $sequence_13 = { 8b0c8d808e4100 c644112800 85f6 740c 56 e8???????? 59 }
            // n = 7, score = 200
            //   8b0c8d808e4100       | ror                 edx, cl
            //   c644112800           | add                 edx, eax
            //   85f6                 | inc                 ecx
            //   740c                 | sub                 edi, 1
            //   56                   | sar                 edx, 0xb
            //   e8????????           |                     
            //   59                   | mov                 eax, edx

        $sequence_14 = { 83e13f 6bc930 53 8b5d10 8b0485808e4100 56 }
            // n = 6, score = 200
            //   83e13f               | movsx               eax, byte ptr [eax]
            //   6bc930               | dec                 ecx
            //   53                   | inc                 eax
            //   8b5d10               | ror                 edx, cl
            //   8b0485808e4100       | add                 edx, eax
            //   56                   | inc                 ecx

        $sequence_15 = { 03148d808e4100 8b00 894218 8a03 }
            // n = 4, score = 200
            //   03148d808e4100       | xor                 eax, eax
            //   8b00                 | xor                 edx, edx
            //   894218               | add                 edx, ecx
            //   8a03                 | sar                 edx, 0xb

    condition:
        7 of them and filesize < 286720
}
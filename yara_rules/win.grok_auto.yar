rule win_grok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.grok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.grok"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 397d10 897dfc c645e46e c645e574 c645e66f c645e773 c645e86b }
            // n = 7, score = 400
            //   397d10               | cmp                 dword ptr [ebp + 0x10], edi
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   c645e46e             | mov                 byte ptr [ebp - 0x1c], 0x6e
            //   c645e574             | mov                 byte ptr [ebp - 0x1b], 0x74
            //   c645e66f             | mov                 byte ptr [ebp - 0x1a], 0x6f
            //   c645e773             | mov                 byte ptr [ebp - 0x19], 0x73
            //   c645e86b             | mov                 byte ptr [ebp - 0x18], 0x6b

        $sequence_1 = { 58 50 53 51 8d5d04 8b4d08 8d448d14 }
            // n = 7, score = 400
            //   58                   | pop                 eax
            //   50                   | push                eax
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   8d5d04               | lea                 ebx, [ebp + 4]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8d448d14             | lea                 eax, [ebp + ecx*4 + 0x14]

        $sequence_2 = { ff3418 ebf0 ff5508 5b 59 5b }
            // n = 6, score = 400
            //   ff3418               | push                dword ptr [eax + ebx]
            //   ebf0                 | jmp                 0xfffffff2
            //   ff5508               | call                dword ptr [ebp + 8]
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx
            //   5b                   | pop                 ebx

        $sequence_3 = { 6a00 ffd6 8bf0 8975dc 85db 7437 85f6 }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   ffd6                 | call                esi
            //   8bf0                 | mov                 esi, eax
            //   8975dc               | mov                 dword ptr [ebp - 0x24], esi
            //   85db                 | test                ebx, ebx
            //   7437                 | je                  0x39
            //   85f6                 | test                esi, esi

        $sequence_4 = { 55 8b542410 8b5e50 c1e202 8b0c02 2b8ecc000000 8d2c0b }
            // n = 7, score = 400
            //   55                   | push                ebp
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]
            //   8b5e50               | mov                 ebx, dword ptr [esi + 0x50]
            //   c1e202               | shl                 edx, 2
            //   8b0c02               | mov                 ecx, dword ptr [edx + eax]
            //   2b8ecc000000         | sub                 ecx, dword ptr [esi + 0xcc]
            //   8d2c0b               | lea                 ebp, [ebx + ecx]

        $sequence_5 = { 8b7e04 8bc7 69c0f0d8ffff 99 8945f8 8d4608 }
            // n = 6, score = 400
            //   8b7e04               | mov                 edi, dword ptr [esi + 4]
            //   8bc7                 | mov                 eax, edi
            //   69c0f0d8ffff         | imul                eax, eax, 0xffffd8f0
            //   99                   | cdq                 
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8d4608               | lea                 eax, [esi + 8]

        $sequence_6 = { 85c0 894618 0f849c000000 68???????? 8d45ec 50 ffd7 }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   894618               | mov                 dword ptr [esi + 0x18], eax
            //   0f849c000000         | je                  0xa2
            //   68????????           |                     
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_7 = { 85c0 894604 0f840c010000 68???????? 8d45ec 50 ffd7 }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   0f840c010000         | je                  0x112
            //   68????????           |                     
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_8 = { 8b45e8 83c01c 50 56 e8???????? 59 }
            // n = 6, score = 400
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   83c01c               | add                 eax, 0x1c
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_9 = { 8b0d???????? 8981d0010000 a1???????? 8d88d0010000 3931 0f8448ffffff 56 }
            // n = 7, score = 400
            //   8b0d????????         |                     
            //   8981d0010000         | mov                 dword ptr [ecx + 0x1d0], eax
            //   a1????????           |                     
            //   8d88d0010000         | lea                 ecx, [eax + 0x1d0]
            //   3931                 | cmp                 dword ptr [ecx], esi
            //   0f8448ffffff         | je                  0xffffff4e
            //   56                   | push                esi

    condition:
        7 of them and filesize < 84992
}
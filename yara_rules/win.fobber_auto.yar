rule win_fobber_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.fobber."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fobber"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f7d1 fc f2ae f7d1 49 89c8 }
            // n = 6, score = 1100
            //   f7d1                 | not                 ecx
            //   fc                   | cld                 
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   89c8                 | mov                 eax, ecx

        $sequence_1 = { 89e5 31c0 50 50 ff750c ff7508 }
            // n = 6, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   31c0                 | xor                 eax, eax
            //   50                   | push                eax
            //   50                   | push                eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_2 = { 8d0431 39f8 7607 49 01cf }
            // n = 5, score = 1100
            //   8d0431               | lea                 eax, [ecx + esi]
            //   39f8                 | cmp                 eax, edi
            //   7607                 | jbe                 9
            //   49                   | dec                 ecx
            //   01cf                 | add                 edi, ecx

        $sequence_3 = { 51 8b4510 8b5508 8b4d0c 3002 }
            // n = 5, score = 1100
            //   51                   | push                ecx
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   3002                 | xor                 byte ptr [edx], al

        $sequence_4 = { 89e5 ff750c 6800300000 ff7508 }
            // n = 4, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6800300000           | push                0x3000
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_5 = { 89e5 ff750c ff7508 e8???????? 85c0 7407 50 }
            // n = 7, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   50                   | push                eax

        $sequence_6 = { 66b80100 660fc146f9 6685c0 7515 0fb646f8 50 0fb746f6 }
            // n = 7, score = 1100
            //   66b80100             | mov                 ax, 1
            //   660fc146f9           | xadd                word ptr [esi - 7], ax
            //   6685c0               | test                ax, ax
            //   7515                 | jne                 0x17
            //   0fb646f8             | movzx               eax, byte ptr [esi - 8]
            //   50                   | push                eax
            //   0fb746f6             | movzx               eax, word ptr [esi - 0xa]

        $sequence_7 = { 49 01cf 01ce 41 }
            // n = 4, score = 1100
            //   49                   | dec                 ecx
            //   01cf                 | add                 edi, ecx
            //   01ce                 | add                 esi, ecx
            //   41                   | inc                 ecx

        $sequence_8 = { 8b0e 0fb601 41 890e 83f8ff }
            // n = 5, score = 100
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   0fb601               | movzx               eax, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   890e                 | mov                 dword ptr [esi], ecx
            //   83f8ff               | cmp                 eax, -1

        $sequence_9 = { c50400 008bff558bec 8b4d08 85c9 0f84ab190100 a1???????? 85c0 }
            // n = 7, score = 100
            //   c50400               | lds                 eax, ptr [eax + eax]
            //   008bff558bec         | add                 byte ptr [ebx - 0x1374aa01], cl
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   85c9                 | test                ecx, ecx
            //   0f84ab190100         | je                  0x119b1
            //   a1????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_10 = { b546 724c d58e 57 33714b 8aa07b74cafc 16 }
            // n = 7, score = 100
            //   b546                 | mov                 ch, 0x46
            //   724c                 | jb                  0x4e
            //   d58e                 | aad                 0x8e
            //   57                   | push                edi
            //   33714b               | xor                 esi, dword ptr [ecx + 0x4b]
            //   8aa07b74cafc         | mov                 ah, byte ptr [eax - 0x3358b85]
            //   16                   | push                ss

        $sequence_11 = { f3a5 ff2495b0444000 8bc7 ba03000000 83e904 }
            // n = 5, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   ff2495b0444000       | jmp                 dword ptr [edx*4 + 0x4044b0]
            //   8bc7                 | mov                 eax, edi
            //   ba03000000           | mov                 edx, 3
            //   83e904               | sub                 ecx, 4

        $sequence_12 = { 664d b672 3ef9 76fe ed a0???????? 97 }
            // n = 7, score = 100
            //   664d                 | dec                 bp
            //   b672                 | mov                 dh, 0x72
            //   3ef9                 | stc                 
            //   76fe                 | jbe                 0
            //   ed                   | in                  eax, dx
            //   a0????????           |                     
            //   97                   | xchg                eax, edi

        $sequence_13 = { 59 59 8906 3bc3 0f846b4d0100 8d45e4 50 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8906                 | mov                 dword ptr [esi], eax
            //   3bc3                 | cmp                 eax, ebx
            //   0f846b4d0100         | je                  0x14d71
            //   8d45e4               | lea                 eax, [ebp - 0x1c]
            //   50                   | push                eax

        $sequence_14 = { 0fe9875e0000f4 000f 843d???????? 328801008bff 55 }
            // n = 5, score = 100
            //   0fe9875e0000f4       | psubsw              mm0, qword ptr [edi - 0xbffffa2]
            //   000f                 | add                 byte ptr [edi], cl
            //   843d????????         |                     
            //   328801008bff         | xor                 cl, byte ptr [eax - 0x74ffff]
            //   55                   | push                ebp

        $sequence_15 = { 44 22ee b303 4e }
            // n = 4, score = 100
            //   44                   | inc                 esp
            //   22ee                 | and                 ch, dh
            //   b303                 | mov                 bl, 3
            //   4e                   | dec                 esi

    condition:
        7 of them and filesize < 188416
}
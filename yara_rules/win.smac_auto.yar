rule win_smac_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.smac."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.smac"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89a5e4feffff 50 e8???????? 8d85ecfeffff 50 }
            // n = 5, score = 200
            //   89a5e4feffff         | mov                 dword ptr [ebp - 0x11c], esp
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d85ecfeffff         | lea                 eax, [ebp - 0x114]
            //   50                   | push                eax

        $sequence_1 = { e8???????? 8bf8 8b8564f4ffff 59 83c002 }
            // n = 5, score = 200
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   8b8564f4ffff         | mov                 eax, dword ptr [ebp - 0xb9c]
            //   59                   | pop                 ecx
            //   83c002               | add                 eax, 2

        $sequence_2 = { c3 8bff 55 8bec 8b4508 56 8d34c5d0504100 }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8d34c5d0504100       | lea                 esi, [eax*8 + 0x4150d0]

        $sequence_3 = { 8d450c 8d4db8 e8???????? 56 57 8d4528 8d4d9c }
            // n = 7, score = 200
            //   8d450c               | lea                 eax, [ebp + 0xc]
            //   8d4db8               | lea                 ecx, [ebp - 0x48]
            //   e8????????           |                     
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d4528               | lea                 eax, [ebp + 0x28]
            //   8d4d9c               | lea                 ecx, [ebp - 0x64]

        $sequence_4 = { 66898504f7ffff 8d8506f7ffff 53 50 }
            // n = 4, score = 200
            //   66898504f7ffff       | mov                 word ptr [ebp - 0x8fc], ax
            //   8d8506f7ffff         | lea                 eax, [ebp - 0x8fa]
            //   53                   | push                ebx
            //   50                   | push                eax

        $sequence_5 = { 6a01 8d75d4 c645fc00 e8???????? 68???????? 8d45d4 e8???????? }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   8d75d4               | lea                 esi, [ebp - 0x2c]
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   e8????????           |                     
            //   68????????           |                     
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   e8????????           |                     

        $sequence_6 = { 8db560ffffff e8???????? 6a01 8d75d0 e8???????? 6a01 }
            // n = 6, score = 200
            //   8db560ffffff         | lea                 esi, [ebp - 0xa0]
            //   e8????????           |                     
            //   6a01                 | push                1
            //   8d75d0               | lea                 esi, [ebp - 0x30]
            //   e8????????           |                     
            //   6a01                 | push                1

        $sequence_7 = { 668945d8 58 668945da 6a4c 58 668945dc 668945de }
            // n = 7, score = 200
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   58                   | pop                 eax
            //   668945da             | mov                 word ptr [ebp - 0x26], ax
            //   6a4c                 | push                0x4c
            //   58                   | pop                 eax
            //   668945dc             | mov                 word ptr [ebp - 0x24], ax
            //   668945de             | mov                 word ptr [ebp - 0x22], ax

        $sequence_8 = { 668945c8 58 6a74 668945ca }
            // n = 4, score = 200
            //   668945c8             | mov                 word ptr [ebp - 0x38], ax
            //   58                   | pop                 eax
            //   6a74                 | push                0x74
            //   668945ca             | mov                 word ptr [ebp - 0x36], ax

        $sequence_9 = { 50 8d8530f9ffff 68???????? 50 ff15???????? }
            // n = 5, score = 200
            //   50                   | push                eax
            //   8d8530f9ffff         | lea                 eax, [ebp - 0x6d0]
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 212992
}
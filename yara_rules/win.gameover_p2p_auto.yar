rule win_gameover_p2p_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.gameover_p2p."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gameover_p2p"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 834c2418ff 6880000000 6a01 53 53 8d442430 50 }
            // n = 7, score = 100
            //   834c2418ff           | or                  dword ptr [esp + 0x18], 0xffffffff
            //   6880000000           | push                0x80
            //   6a01                 | push                1
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   8d442430             | lea                 eax, [esp + 0x30]
            //   50                   | push                eax

        $sequence_1 = { 57 57 6a03 57 ff742420 8bf1 6800000080 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   57                   | push                edi
            //   6a03                 | push                3
            //   57                   | push                edi
            //   ff742420             | push                dword ptr [esp + 0x20]
            //   8bf1                 | mov                 esi, ecx
            //   6800000080           | push                0x80000000

        $sequence_2 = { 884307 0fb6c1 50 ff74244c 8d7b08 57 ffd6 }
            // n = 7, score = 100
            //   884307               | mov                 byte ptr [ebx + 7], al
            //   0fb6c1               | movzx               eax, cl
            //   50                   | push                eax
            //   ff74244c             | push                dword ptr [esp + 0x4c]
            //   8d7b08               | lea                 edi, [ebx + 8]
            //   57                   | push                edi
            //   ffd6                 | call                esi

        $sequence_3 = { 50 ff7510 e8???????? 84c0 7439 8bce e8???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7439                 | je                  0x3b
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_4 = { 51 8d8c242c010000 e8???????? 8d842420010000 50 55 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8d8c242c010000       | lea                 ecx, [esp + 0x12c]
            //   e8????????           |                     
            //   8d842420010000       | lea                 eax, [esp + 0x120]
            //   50                   | push                eax
            //   55                   | push                ebp

        $sequence_5 = { 8b7c2434 6689442420 33c0 394710 8d7716 8bce 0f44c8 }
            // n = 7, score = 100
            //   8b7c2434             | mov                 edi, dword ptr [esp + 0x34]
            //   6689442420           | mov                 word ptr [esp + 0x20], ax
            //   33c0                 | xor                 eax, eax
            //   394710               | cmp                 dword ptr [edi + 0x10], eax
            //   8d7716               | lea                 esi, [edi + 0x16]
            //   8bce                 | mov                 ecx, esi
            //   0f44c8               | cmove               ecx, eax

        $sequence_6 = { 6639464c 0f84bd010000 8b44241c 8d7e18 89442418 b8feff0000 6639464c }
            // n = 7, score = 100
            //   6639464c             | cmp                 word ptr [esi + 0x4c], ax
            //   0f84bd010000         | je                  0x1c3
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   8d7e18               | lea                 edi, [esi + 0x18]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   b8feff0000           | mov                 eax, 0xfffe
            //   6639464c             | cmp                 word ptr [esi + 0x4c], ax

        $sequence_7 = { ff742430 8bcf e8???????? 8bf0 8974241c 85f6 743e }
            // n = 7, score = 100
            //   ff742430             | push                dword ptr [esp + 0x30]
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8974241c             | mov                 dword ptr [esp + 0x1c], esi
            //   85f6                 | test                esi, esi
            //   743e                 | je                  0x40

        $sequence_8 = { 8bc6 5e 5d 5f 5b 83c40c }
            // n = 6, score = 100
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx
            //   83c40c               | add                 esp, 0xc

        $sequence_9 = { e8???????? 8bf0 85f6 7e17 f6872802000002 740e 51 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7e17                 | jle                 0x19
            //   f6872802000002       | test                byte ptr [edi + 0x228], 2
            //   740e                 | je                  0x10
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 598016
}
rule win_meow_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.meow."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.meow"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 57 e8???????? ff45f0 8d4e18 c70100000000 ba0f000000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   ff45f0               | inc                 dword ptr [ebp - 0x10]
            //   8d4e18               | lea                 ecx, [esi + 0x18]
            //   c70100000000         | mov                 dword ptr [ecx], 0
            //   ba0f000000           | mov                 edx, 0xf

        $sequence_1 = { 7605 bf00005000 c745f4bb195c00 8b45f4 99 f7f9 }
            // n = 6, score = 100
            //   7605                 | jbe                 7
            //   bf00005000           | mov                 edi, 0x500000
            //   c745f4bb195c00       | mov                 dword ptr [ebp - 0xc], 0x5c19bb
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   99                   | cdq                 
            //   f7f9                 | idiv                ecx

        $sequence_2 = { 660f282d???????? 660f59f5 660f28aa00014300 660f54e5 660f58fe 660f58fc }
            // n = 6, score = 100
            //   660f282d????????     |                     
            //   660f59f5             | mulpd               xmm6, xmm5
            //   660f28aa00014300     | movapd              xmm5, xmmword ptr [edx + 0x430100]
            //   660f54e5             | andpd               xmm4, xmm5
            //   660f58fe             | addpd               xmm7, xmm6
            //   660f58fc             | addpd               xmm7, xmm4

        $sequence_3 = { 8b45f4 99 f7f9 85d2 0f857d000000 8b45f4 40 }
            // n = 7, score = 100
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   99                   | cdq                 
            //   f7f9                 | idiv                ecx
            //   85d2                 | test                edx, edx
            //   0f857d000000         | jne                 0x83
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   40                   | inc                 eax

        $sequence_4 = { c685cbfeffff69 c685ccfeffff1e c685cdfeffff3c c685cefeffff1e c685cffeffff54 c685d0feffff1e }
            // n = 6, score = 100
            //   c685cbfeffff69       | mov                 byte ptr [ebp - 0x135], 0x69
            //   c685ccfeffff1e       | mov                 byte ptr [ebp - 0x134], 0x1e
            //   c685cdfeffff3c       | mov                 byte ptr [ebp - 0x133], 0x3c
            //   c685cefeffff1e       | mov                 byte ptr [ebp - 0x132], 0x1e
            //   c685cffeffff54       | mov                 byte ptr [ebp - 0x131], 0x54
            //   c685d0feffff1e       | mov                 byte ptr [ebp - 0x130], 0x1e

        $sequence_5 = { 55 8bec 83ec54 53 c745f800000000 837d1c08 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec54               | sub                 esp, 0x54
            //   53                   | push                ebx
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   837d1c08             | cmp                 dword ptr [ebp + 0x1c], 8

        $sequence_6 = { f7fe 88543df9 47 83ff06 72dc 8b75f4 8d45f9 }
            // n = 7, score = 100
            //   f7fe                 | idiv                esi
            //   88543df9             | mov                 byte ptr [ebp + edi - 7], dl
            //   47                   | inc                 edi
            //   83ff06               | cmp                 edi, 6
            //   72dc                 | jb                  0xffffffde
            //   8b75f4               | mov                 esi, dword ptr [ebp - 0xc]
            //   8d45f9               | lea                 eax, [ebp - 7]

        $sequence_7 = { c645e800 83c404 c645e95e c645ea7b c645eb21 c645ec7b c645ed7b }
            // n = 7, score = 100
            //   c645e800             | mov                 byte ptr [ebp - 0x18], 0
            //   83c404               | add                 esp, 4
            //   c645e95e             | mov                 byte ptr [ebp - 0x17], 0x5e
            //   c645ea7b             | mov                 byte ptr [ebp - 0x16], 0x7b
            //   c645eb21             | mov                 byte ptr [ebp - 0x15], 0x21
            //   c645ec7b             | mov                 byte ptr [ebp - 0x14], 0x7b
            //   c645ed7b             | mov                 byte ptr [ebp - 0x13], 0x7b

        $sequence_8 = { c685d6f8ffff11 c685d7f8ffff2e c685d8f8ffff11 c685d9f8ffff71 c685daf8ffff11 c685dbf8ffff6a c685dcf8ffff11 }
            // n = 7, score = 100
            //   c685d6f8ffff11       | mov                 byte ptr [ebp - 0x72a], 0x11
            //   c685d7f8ffff2e       | mov                 byte ptr [ebp - 0x729], 0x2e
            //   c685d8f8ffff11       | mov                 byte ptr [ebp - 0x728], 0x11
            //   c685d9f8ffff71       | mov                 byte ptr [ebp - 0x727], 0x71
            //   c685daf8ffff11       | mov                 byte ptr [ebp - 0x726], 0x11
            //   c685dbf8ffff6a       | mov                 byte ptr [ebp - 0x725], 0x6a
            //   c685dcf8ffff11       | mov                 byte ptr [ebp - 0x724], 0x11

        $sequence_9 = { c68545fdffff02 c68546fdffff57 c68547fdffff59 c68548fdffff57 c68549fdffff65 c6854afdffff57 }
            // n = 6, score = 100
            //   c68545fdffff02       | mov                 byte ptr [ebp - 0x2bb], 2
            //   c68546fdffff57       | mov                 byte ptr [ebp - 0x2ba], 0x57
            //   c68547fdffff59       | mov                 byte ptr [ebp - 0x2b9], 0x59
            //   c68548fdffff57       | mov                 byte ptr [ebp - 0x2b8], 0x57
            //   c68549fdffff65       | mov                 byte ptr [ebp - 0x2b7], 0x65
            //   c6854afdffff57       | mov                 byte ptr [ebp - 0x2b6], 0x57

    condition:
        7 of them and filesize < 492544
}
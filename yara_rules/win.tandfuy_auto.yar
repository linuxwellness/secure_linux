rule win_tandfuy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.tandfuy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tandfuy"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 837c241002 740c b8???????? 81c49c000000 c3 8b442404 }
            // n = 6, score = 100
            //   837c241002           | cmp                 dword ptr [esp + 0x10], 2
            //   740c                 | je                  0xe
            //   b8????????           |                     
            //   81c49c000000         | add                 esp, 0x9c
            //   c3                   | ret                 
            //   8b442404             | mov                 eax, dword ptr [esp + 4]

        $sequence_1 = { 6a03 6800000080 56 f3ab }
            // n = 4, score = 100
            //   6a03                 | push                3
            //   6800000080           | push                0x80000000
            //   56                   | push                esi
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_2 = { 56 57 b9ff000000 33c0 8dbc24c5020000 c68424c402000000 f3ab }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   b9ff000000           | mov                 ecx, 0xff
            //   33c0                 | xor                 eax, eax
            //   8dbc24c5020000       | lea                 edi, [esp + 0x2c5]
            //   c68424c402000000     | mov                 byte ptr [esp + 0x2c4], 0
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_3 = { 8d3485a0d66e00 753e 57 6a18 }
            // n = 4, score = 100
            //   8d3485a0d66e00       | lea                 esi, [eax*4 + 0x6ed6a0]
            //   753e                 | jne                 0x40
            //   57                   | push                edi
            //   6a18                 | push                0x18

        $sequence_4 = { 52 687e660480 56 ff15???????? 83f8ff 7518 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   687e660480           | push                0x8004667e
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   7518                 | jne                 0x1a

        $sequence_5 = { 81c49c030000 c3 b910000000 33c0 }
            // n = 4, score = 100
            //   81c49c030000         | add                 esp, 0x39c
            //   c3                   | ret                 
            //   b910000000           | mov                 ecx, 0x10
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { 5e 81c4b8010000 c3 807c243002 740b }
            // n = 5, score = 100
            //   5e                   | pop                 esi
            //   81c4b8010000         | add                 esp, 0x1b8
            //   c3                   | ret                 
            //   807c243002           | cmp                 byte ptr [esp + 0x30], 2
            //   740b                 | je                  0xd

        $sequence_7 = { e8???????? 53 56 8bb424102c0000 57 56 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bb424102c0000       | mov                 esi, dword ptr [esp + 0x2c10]
            //   57                   | push                edi
            //   56                   | push                esi

        $sequence_8 = { f7d1 49 8bfa 8bd9 c1e902 f3ab 8bcb }
            // n = 7, score = 100
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8bfa                 | mov                 edi, edx
            //   8bd9                 | mov                 ebx, ecx
            //   c1e902               | shr                 ecx, 2
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8bcb                 | mov                 ecx, ebx

        $sequence_9 = { c1f905 56 57 8b348d60fc6e00 }
            // n = 4, score = 100
            //   c1f905               | sar                 ecx, 5
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b348d60fc6e00       | mov                 esi, dword ptr [ecx*4 + 0x6efc60]

    condition:
        7 of them and filesize < 155648
}
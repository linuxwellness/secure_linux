rule win_acridrain_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.acridrain."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.acridrain"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b742408 33c9 57 8b7c2410 880f 388e90020000 741b }
            // n = 7, score = 200
            //   8b742408             | mov                 esi, dword ptr [esp + 8]
            //   33c9                 | xor                 ecx, ecx
            //   57                   | push                edi
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]
            //   880f                 | mov                 byte ptr [edi], cl
            //   388e90020000         | cmp                 byte ptr [esi + 0x290], cl
            //   741b                 | je                  0x1d

        $sequence_1 = { eb07 0fb68938924e00 894e04 8b4214 8b4d14 894610 5f }
            // n = 7, score = 200
            //   eb07                 | jmp                 9
            //   0fb68938924e00       | movzx               ecx, byte ptr [ecx + 0x4e9238]
            //   894e04               | mov                 dword ptr [esi + 4], ecx
            //   8b4214               | mov                 eax, dword ptr [edx + 0x14]
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   894610               | mov                 dword ptr [esi + 0x10], eax
            //   5f                   | pop                 edi

        $sequence_2 = { eb04 3c2b 7505 03d9 895d08 3bde 7348 }
            // n = 7, score = 200
            //   eb04                 | jmp                 6
            //   3c2b                 | cmp                 al, 0x2b
            //   7505                 | jne                 7
            //   03d9                 | add                 ebx, ecx
            //   895d08               | mov                 dword ptr [ebp + 8], ebx
            //   3bde                 | cmp                 ebx, esi
            //   7348                 | jae                 0x4a

        $sequence_3 = { f20f59db 660f282d???????? 660f59f5 660f28aa000c5000 660f54e5 660f58fe 660f58fc }
            // n = 7, score = 200
            //   f20f59db             | mulsd               xmm3, xmm3
            //   660f282d????????     |                     
            //   660f59f5             | mulpd               xmm6, xmm5
            //   660f28aa000c5000     | movapd              xmm5, xmmword ptr [edx + 0x500c00]
            //   660f54e5             | andpd               xmm4, xmm5
            //   660f58fe             | addpd               xmm7, xmm6
            //   660f58fc             | addpd               xmm7, xmm4

        $sequence_4 = { 8b55bc 8b4204 83c9ff 8b75b4 66890c58 8b4220 8b4dd0 }
            // n = 7, score = 200
            //   8b55bc               | mov                 edx, dword ptr [ebp - 0x44]
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   8b75b4               | mov                 esi, dword ptr [ebp - 0x4c]
            //   66890c58             | mov                 word ptr [eax + ebx*2], cx
            //   8b4220               | mov                 eax, dword ptr [edx + 0x20]
            //   8b4dd0               | mov                 ecx, dword ptr [ebp - 0x30]

        $sequence_5 = { eb7f 8b5348 8955b4 8d4201 894348 8b4618 8b4e20 }
            // n = 7, score = 200
            //   eb7f                 | jmp                 0x81
            //   8b5348               | mov                 edx, dword ptr [ebx + 0x48]
            //   8955b4               | mov                 dword ptr [ebp - 0x4c], edx
            //   8d4201               | lea                 eax, [edx + 1]
            //   894348               | mov                 dword ptr [ebx + 0x48], eax
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   8b4e20               | mov                 ecx, dword ptr [esi + 0x20]

        $sequence_6 = { eb3d b8???????? 6690 8a0a 3a08 751a 84c9 }
            // n = 7, score = 200
            //   eb3d                 | jmp                 0x3f
            //   b8????????           |                     
            //   6690                 | nop                 
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   3a08                 | cmp                 cl, byte ptr [eax]
            //   751a                 | jne                 0x1c
            //   84c9                 | test                cl, cl

        $sequence_7 = { ffd0 83c414 85c0 7569 8b4344 83c70c 8b55e8 }
            // n = 7, score = 200
            //   ffd0                 | call                eax
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax
            //   7569                 | jne                 0x6b
            //   8b4344               | mov                 eax, dword ptr [ebx + 0x44]
            //   83c70c               | add                 edi, 0xc
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]

        $sequence_8 = { e9???????? 52 ff33 e8???????? 83c408 e9???????? ff7604 }
            // n = 7, score = 200
            //   e9????????           |                     
            //   52                   | push                edx
            //   ff33                 | push                dword ptr [ebx]
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   e9????????           |                     
            //   ff7604               | push                dword ptr [esi + 4]

        $sequence_9 = { eb53 8bc8 8d5101 0f1f8000000000 8a01 41 84c0 }
            // n = 7, score = 200
            //   eb53                 | jmp                 0x55
            //   8bc8                 | mov                 ecx, eax
            //   8d5101               | lea                 edx, [ecx + 1]
            //   0f1f8000000000       | nop                 dword ptr [eax]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   84c0                 | test                al, al

    condition:
        7 of them and filesize < 2244608
}
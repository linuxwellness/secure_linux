rule win_doublepulsar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.doublepulsar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doublepulsar"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 895c2424 895c2428 e8???????? 8b7c2454 }
            // n = 4, score = 100
            //   895c2424             | mov                 dword ptr [esp + 0x24], ebx
            //   895c2428             | mov                 dword ptr [esp + 0x28], ebx
            //   e8????????           |                     
            //   8b7c2454             | mov                 edi, dword ptr [esp + 0x54]

        $sequence_1 = { 8b5002 31c0 8a02 84c0 7509 }
            // n = 5, score = 100
            //   8b5002               | mov                 edx, dword ptr [eax + 2]
            //   31c0                 | xor                 eax, eax
            //   8a02                 | mov                 al, byte ptr [edx]
            //   84c0                 | test                al, al
            //   7509                 | jne                 0xb

        $sequence_2 = { c74218d41f4000 e9???????? 83e20f c70313000000 895348 8b4b48 }
            // n = 6, score = 100
            //   c74218d41f4000       | mov                 dword ptr [edx + 0x18], 0x401fd4
            //   e9????????           |                     
            //   83e20f               | and                 edx, 0xf
            //   c70313000000         | mov                 dword ptr [ebx], 0x13
            //   895348               | mov                 dword ptr [ebx + 0x48], edx
            //   8b4b48               | mov                 ecx, dword ptr [ebx + 0x48]

        $sequence_3 = { 52 ff15???????? 8d442430 50 ff15???????? 83c410 89442410 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8d442430             | lea                 eax, [esp + 0x30]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   89442410             | mov                 dword ptr [esp + 0x10], eax

        $sequence_4 = { 42 6bc07f 03c1 85c9 }
            // n = 4, score = 100
            //   42                   | inc                 edx
            //   6bc07f               | imul                eax, eax, 0x7f
            //   03c1                 | add                 eax, ecx
            //   85c9                 | test                ecx, ecx

        $sequence_5 = { 884c2447 8b4c2424 6689542459 25ffff0000 }
            // n = 4, score = 100
            //   884c2447             | mov                 byte ptr [esp + 0x47], cl
            //   8b4c2424             | mov                 ecx, dword ptr [esp + 0x24]
            //   6689542459           | mov                 word ptr [esp + 0x59], dx
            //   25ffff0000           | and                 eax, 0xffff

        $sequence_6 = { eb04 31c0 f7d0 5b 5a 5f }
            // n = 6, score = 100
            //   eb04                 | jmp                 6
            //   31c0                 | xor                 eax, eax
            //   f7d0                 | not                 eax
            //   5b                   | pop                 ebx
            //   5a                   | pop                 edx
            //   5f                   | pop                 edi

        $sequence_7 = { ffc0 c3 53 52 51 55 48 }
            // n = 7, score = 100
            //   ffc0                 | inc                 eax
            //   c3                   | ret                 
            //   53                   | push                ebx
            //   52                   | push                edx
            //   51                   | push                ecx
            //   55                   | push                ebp
            //   48                   | dec                 eax

        $sequence_8 = { 83c220 52 ff15???????? 83c414 }
            // n = 4, score = 100
            //   83c220               | add                 edx, 0x20
            //   52                   | push                edx
            //   ff15????????         |                     
            //   83c414               | add                 esp, 0x14

        $sequence_9 = { 89442432 894c2426 89542416 89442436 57 }
            // n = 5, score = 100
            //   89442432             | mov                 dword ptr [esp + 0x32], eax
            //   894c2426             | mov                 dword ptr [esp + 0x26], ecx
            //   89542416             | mov                 dword ptr [esp + 0x16], edx
            //   89442436             | mov                 dword ptr [esp + 0x36], eax
            //   57                   | push                edi

        $sequence_10 = { 6a04 8d44240c 50 6a00 e8???????? }
            // n = 5, score = 100
            //   6a04                 | push                4
            //   8d44240c             | lea                 eax, [esp + 0xc]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   e8????????           |                     

        $sequence_11 = { 89c6 31c0 89c7 c1e707 29c7 89f8 }
            // n = 6, score = 100
            //   89c6                 | mov                 esi, eax
            //   31c0                 | xor                 eax, eax
            //   89c7                 | mov                 edi, eax
            //   c1e707               | shl                 edi, 7
            //   29c7                 | sub                 edi, eax
            //   89f8                 | mov                 eax, edi

        $sequence_12 = { 776e 50 6a04 e8???????? 83c408 }
            // n = 5, score = 100
            //   776e                 | ja                  0x70
            //   50                   | push                eax
            //   6a04                 | push                4
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_13 = { 8a442470 8d94249c000000 a810 52 7425 8b0d???????? }
            // n = 6, score = 100
            //   8a442470             | mov                 al, byte ptr [esp + 0x70]
            //   8d94249c000000       | lea                 edx, [esp + 0x9c]
            //   a810                 | test                al, 0x10
            //   52                   | push                edx
            //   7425                 | je                  0x27
            //   8b0d????????         |                     

        $sequence_14 = { 83c104 e9???????? 59 89f0 eb02 31c0 5b }
            // n = 7, score = 100
            //   83c104               | add                 ecx, 4
            //   e9????????           |                     
            //   59                   | pop                 ecx
            //   89f0                 | mov                 eax, esi
            //   eb02                 | jmp                 4
            //   31c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx

        $sequence_15 = { 83c9ff 33c0 f2ae f7d1 49 80bc0c530100005c 7431 }
            // n = 7, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   80bc0c530100005c     | cmp                 byte ptr [esp + ecx + 0x153], 0x5c
            //   7431                 | je                  0x33

    condition:
        7 of them and filesize < 140288
}
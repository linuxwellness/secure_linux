rule win_ddkong_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.ddkong."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ddkong"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d459c 57 bb???????? 50 53 c6459c43 }
            // n = 6, score = 100
            //   8d459c               | lea                 eax, [ebp - 0x64]
            //   57                   | push                edi
            //   bb????????           |                     
            //   50                   | push                eax
            //   53                   | push                ebx
            //   c6459c43             | mov                 byte ptr [ebp - 0x64], 0x43

        $sequence_1 = { bb???????? 57 53 56 e8???????? 83c40c 85c0 }
            // n = 7, score = 100
            //   bb????????           |                     
            //   57                   | push                edi
            //   53                   | push                ebx
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax

        $sequence_2 = { 833900 75af 5d 5f 5e }
            // n = 5, score = 100
            //   833900               | cmp                 dword ptr [ecx], 0
            //   75af                 | jne                 0xffffffb1
            //   5d                   | pop                 ebp
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_3 = { 85ff 7412 50 57 ff742414 }
            // n = 5, score = 100
            //   85ff                 | test                edi, edi
            //   7412                 | je                  0x14
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff742414             | push                dword ptr [esp + 0x14]

        $sequence_4 = { 8bc8 83e103 85d2 f3a4 7635 8b4c2438 89542438 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   83e103               | and                 ecx, 3
            //   85d2                 | test                edx, edx
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   7635                 | jbe                 0x37
            //   8b4c2438             | mov                 ecx, dword ptr [esp + 0x38]
            //   89542438             | mov                 dword ptr [esp + 0x38], edx

        $sequence_5 = { 50 53 ffd7 50 ffd6 8985e8feffff c685ecfeffff53 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8985e8feffff         | mov                 dword ptr [ebp - 0x118], eax
            //   c685ecfeffff53       | mov                 byte ptr [ebp - 0x114], 0x53

        $sequence_6 = { 8bf8 ff55fc 8bf0 8d4508 50 ff756c }
            // n = 6, score = 100
            //   8bf8                 | mov                 edi, eax
            //   ff55fc               | call                dword ptr [ebp - 4]
            //   8bf0                 | mov                 esi, eax
            //   8d4508               | lea                 eax, [ebp + 8]
            //   50                   | push                eax
            //   ff756c               | push                dword ptr [ebp + 0x6c]

        $sequence_7 = { 50 ffd6 8985e8feffff c685ecfeffff53 c685edfeffff65 c685eefeffff74 c685effeffff54 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8985e8feffff         | mov                 dword ptr [ebp - 0x118], eax
            //   c685ecfeffff53       | mov                 byte ptr [ebp - 0x114], 0x53
            //   c685edfeffff65       | mov                 byte ptr [ebp - 0x113], 0x65
            //   c685eefeffff74       | mov                 byte ptr [ebp - 0x112], 0x74
            //   c685effeffff54       | mov                 byte ptr [ebp - 0x111], 0x54

        $sequence_8 = { 8065fd00 8d45f0 57 50 68???????? c645f047 c645f165 }
            // n = 7, score = 100
            //   8065fd00             | and                 byte ptr [ebp - 3], 0
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   57                   | push                edi
            //   50                   | push                eax
            //   68????????           |                     
            //   c645f047             | mov                 byte ptr [ebp - 0x10], 0x47
            //   c645f165             | mov                 byte ptr [ebp - 0xf], 0x65

        $sequence_9 = { c6854affffff65 c6854bffffff61 c6854cffffff74 c6854dffffff65 c6854effffff45 }
            // n = 5, score = 100
            //   c6854affffff65       | mov                 byte ptr [ebp - 0xb6], 0x65
            //   c6854bffffff61       | mov                 byte ptr [ebp - 0xb5], 0x61
            //   c6854cffffff74       | mov                 byte ptr [ebp - 0xb4], 0x74
            //   c6854dffffff65       | mov                 byte ptr [ebp - 0xb3], 0x65
            //   c6854effffff45       | mov                 byte ptr [ebp - 0xb2], 0x45

    condition:
        7 of them and filesize < 81920
}
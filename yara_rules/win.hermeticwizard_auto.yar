rule win_hermeticwizard_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.hermeticwizard."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hermeticwizard"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8ad8 85f6 7806 ff15???????? 5f 5e 8ac3 }
            // n = 7, score = 100
            //   8ad8                 | mov                 bl, al
            //   85f6                 | test                esi, esi
            //   7806                 | js                  8
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   8ac3                 | mov                 al, bl

        $sequence_1 = { 8d8548eeffff 6689bd52ffffff 6800080000 50 66898d5cffffff e8???????? 83c410 }
            // n = 7, score = 100
            //   8d8548eeffff         | lea                 eax, [ebp - 0x11b8]
            //   6689bd52ffffff       | mov                 word ptr [ebp - 0xae], di
            //   6800080000           | push                0x800
            //   50                   | push                eax
            //   66898d5cffffff       | mov                 word ptr [ebp - 0xa4], cx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_2 = { 897e0c 897e10 897e14 397d08 7455 }
            // n = 5, score = 100
            //   897e0c               | mov                 dword ptr [esi + 0xc], edi
            //   897e10               | mov                 dword ptr [esi + 0x10], edi
            //   897e14               | mov                 dword ptr [esi + 0x14], edi
            //   397d08               | cmp                 dword ptr [ebp + 8], edi
            //   7455                 | je                  0x57

        $sequence_3 = { 660f28aa108c0110 660f54e5 660f58fe 660f58fc 660f59c8 f20f59d8 660f58ca }
            // n = 7, score = 100
            //   660f28aa108c0110     | movapd              xmm5, xmmword ptr [edx + 0x10018c10]
            //   660f54e5             | andpd               xmm4, xmm5
            //   660f58fe             | addpd               xmm7, xmm6
            //   660f58fc             | addpd               xmm7, xmm4
            //   660f59c8             | mulpd               xmm1, xmm0
            //   f20f59d8             | mulsd               xmm3, xmm0
            //   660f58ca             | addpd               xmm1, xmm2

        $sequence_4 = { 668b4104 663b4204 750b 8b4108 }
            // n = 4, score = 100
            //   668b4104             | mov                 ax, word ptr [ecx + 4]
            //   663b4204             | cmp                 ax, word ptr [edx + 4]
            //   750b                 | jne                 0xd
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]

        $sequence_5 = { 8d45bc 50 e8???????? 8b4508 eb12 8b4508 33c9 }
            // n = 7, score = 100
            //   8d45bc               | lea                 eax, [ebp - 0x44]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   eb12                 | jmp                 0x14
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx

        $sequence_6 = { 668955ce 66897dd0 66894dd2 e8???????? 83c414 85c0 }
            // n = 6, score = 100
            //   668955ce             | mov                 word ptr [ebp - 0x32], dx
            //   66897dd0             | mov                 word ptr [ebp - 0x30], di
            //   66894dd2             | mov                 word ptr [ebp - 0x2e], cx
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax

        $sequence_7 = { f00fc118 4b 7515 8b45fc 817848c0d40110 7409 }
            // n = 6, score = 100
            //   f00fc118             | lock xadd           dword ptr [eax], ebx
            //   4b                   | dec                 ebx
            //   7515                 | jne                 0x17
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   817848c0d40110       | cmp                 dword ptr [eax + 0x48], 0x1001d4c0
            //   7409                 | je                  0xb

        $sequence_8 = { 89442404 8d442440 50 c644240c01 c644240401 e8???????? 6a01 }
            // n = 7, score = 100
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   8d442440             | lea                 eax, [esp + 0x40]
            //   50                   | push                eax
            //   c644240c01           | mov                 byte ptr [esp + 0xc], 1
            //   c644240401           | mov                 byte ptr [esp + 4], 1
            //   e8????????           |                     
            //   6a01                 | push                1

        $sequence_9 = { 8bce 83e63f c1f906 6bf630 8b0c8dc0dd0110 80643128fd 5f }
            // n = 7, score = 100
            //   8bce                 | mov                 ecx, esi
            //   83e63f               | and                 esi, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bf630               | imul                esi, esi, 0x30
            //   8b0c8dc0dd0110       | mov                 ecx, dword ptr [ecx*4 + 0x1001ddc0]
            //   80643128fd           | and                 byte ptr [ecx + esi + 0x28], 0xfd
            //   5f                   | pop                 edi

    condition:
        7 of them and filesize < 263168
}
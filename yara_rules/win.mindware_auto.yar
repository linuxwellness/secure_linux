rule win_mindware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.mindware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mindware"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb696f0d84400 8bc2 2480 0fb6c8 f7d9 8d0412 }
            // n = 6, score = 100
            //   0fb696f0d84400       | movzx               edx, byte ptr [esi + 0x44d8f0]
            //   8bc2                 | mov                 eax, edx
            //   2480                 | and                 al, 0x80
            //   0fb6c8               | movzx               ecx, al
            //   f7d9                 | neg                 ecx
            //   8d0412               | lea                 eax, [edx + edx]

        $sequence_1 = { c745e001000000 eb09 c745e000000000 eb3a 8b55e4 33c0 035580 }
            // n = 7, score = 100
            //   c745e001000000       | mov                 dword ptr [ebp - 0x20], 1
            //   eb09                 | jmp                 0xb
            //   c745e000000000       | mov                 dword ptr [ebp - 0x20], 0
            //   eb3a                 | jmp                 0x3c
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   33c0                 | xor                 eax, eax
            //   035580               | add                 edx, dword ptr [ebp - 0x80]

        $sequence_2 = { 0fb6ca c1ea08 0fb6d2 33348dc0c84400 }
            // n = 4, score = 100
            //   0fb6ca               | movzx               ecx, dl
            //   c1ea08               | shr                 edx, 8
            //   0fb6d2               | movzx               edx, dl
            //   33348dc0c84400       | xor                 esi, dword ptr [ecx*4 + 0x44c8c0]

        $sequence_3 = { 894114 8b5508 8b4218 8b4a1c 8b55fc 894208 894a0c }
            // n = 7, score = 100
            //   894114               | mov                 dword ptr [ecx + 0x14], eax
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b4218               | mov                 eax, dword ptr [edx + 0x18]
            //   8b4a1c               | mov                 ecx, dword ptr [edx + 0x1c]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   894208               | mov                 dword ptr [edx + 8], eax
            //   894a0c               | mov                 dword ptr [edx + 0xc], ecx

        $sequence_4 = { 0fb680b84c4400 0bc8 33d1 8b4d08 8bc2 c1c010 }
            // n = 6, score = 100
            //   0fb680b84c4400       | movzx               eax, byte ptr [eax + 0x444cb8]
            //   0bc8                 | or                  ecx, eax
            //   33d1                 | xor                 edx, ecx
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8bc2                 | mov                 eax, edx
            //   c1c010               | rol                 eax, 0x10

        $sequence_5 = { 8b4df0 83791400 0f847dfeffff 8b15???????? }
            // n = 4, score = 100
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   83791400             | cmp                 dword ptr [ecx + 0x14], 0
            //   0f847dfeffff         | je                  0xfffffe83
            //   8b15????????         |                     

        $sequence_6 = { 8bec 837d0c00 764c e8???????? 0fb6c0 85c0 }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   764c                 | jbe                 0x4e
            //   e8????????           |                     
            //   0fb6c0               | movzx               eax, al
            //   85c0                 | test                eax, eax

        $sequence_7 = { c1651008 0fb689f0d84400 314d10 8b4d10 33cb 330d???????? 8bd9 }
            // n = 7, score = 100
            //   c1651008             | shl                 dword ptr [ebp + 0x10], 8
            //   0fb689f0d84400       | movzx               ecx, byte ptr [ecx + 0x44d8f0]
            //   314d10               | xor                 dword ptr [ebp + 0x10], ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   33cb                 | xor                 ecx, ebx
            //   330d????????         |                     
            //   8bd9                 | mov                 ebx, ecx

        $sequence_8 = { 8b4df0 2b4dd8 d1f9 894dd4 6a00 8b55d4 d1e2 }
            // n = 7, score = 100
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   2b4dd8               | sub                 ecx, dword ptr [ebp - 0x28]
            //   d1f9                 | sar                 ecx, 1
            //   894dd4               | mov                 dword ptr [ebp - 0x2c], ecx
            //   6a00                 | push                0
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]
            //   d1e2                 | shl                 edx, 1

        $sequence_9 = { c78584f7ffffbcf14300 c78588f7ffffc4f14300 c7858cf7ffffccf14300 c78590f7ffffd4f14300 c78594f7ffffdcf14300 c78598f7ffffe4f14300 c7859cf7ffffecf14300 }
            // n = 7, score = 100
            //   c78584f7ffffbcf14300     | mov    dword ptr [ebp - 0x87c], 0x43f1bc
            //   c78588f7ffffc4f14300     | mov    dword ptr [ebp - 0x878], 0x43f1c4
            //   c7858cf7ffffccf14300     | mov    dword ptr [ebp - 0x874], 0x43f1cc
            //   c78590f7ffffd4f14300     | mov    dword ptr [ebp - 0x870], 0x43f1d4
            //   c78594f7ffffdcf14300     | mov    dword ptr [ebp - 0x86c], 0x43f1dc
            //   c78598f7ffffe4f14300     | mov    dword ptr [ebp - 0x868], 0x43f1e4
            //   c7859cf7ffffecf14300     | mov    dword ptr [ebp - 0x864], 0x43f1ec

    condition:
        7 of them and filesize < 661504
}
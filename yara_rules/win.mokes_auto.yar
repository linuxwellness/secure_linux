rule win_mokes_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.mokes."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mokes"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f1194248c000000 f30f1084248c000000 f30f1144243c f30f10842490000000 f30f11442440 0f57c0 660f11842484010000 }
            // n = 7, score = 400
            //   f20f1194248c000000     | movsd    qword ptr [esp + 0x8c], xmm2
            //   f30f1084248c000000     | movss    xmm0, dword ptr [esp + 0x8c]
            //   f30f1144243c         | movss               dword ptr [esp + 0x3c], xmm0
            //   f30f10842490000000     | movss    xmm0, dword ptr [esp + 0x90]
            //   f30f11442440         | movss               dword ptr [esp + 0x40], xmm0
            //   0f57c0               | xorps               xmm0, xmm0
            //   660f11842484010000     | movupd    xmmword ptr [esp + 0x184], xmm0

        $sequence_1 = { ff742440 e8???????? 8b44240c 8b7c241c 8bcf 8b7024 03742478 }
            // n = 7, score = 400
            //   ff742440             | push                dword ptr [esp + 0x40]
            //   e8????????           |                     
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   8b7c241c             | mov                 edi, dword ptr [esp + 0x1c]
            //   8bcf                 | mov                 ecx, edi
            //   8b7024               | mov                 esi, dword ptr [eax + 0x24]
            //   03742478             | add                 esi, dword ptr [esp + 0x78]

        $sequence_2 = { ffd0 eb0d 8b4718 85c0 7409 50 e8???????? }
            // n = 7, score = 400
            //   ffd0                 | call                eax
            //   eb0d                 | jmp                 0xf
            //   8b4718               | mov                 eax, dword ptr [edi + 0x18]
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_3 = { e8???????? 84c0 740b f6432802 c644245400 7405 c644245401 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   740b                 | je                  0xd
            //   f6432802             | test                byte ptr [ebx + 0x28], 2
            //   c644245400           | mov                 byte ptr [esp + 0x54], 0
            //   7405                 | je                  7
            //   c644245401           | mov                 byte ptr [esp + 0x54], 1

        $sequence_4 = { f20f11a424a0000000 8d8c2490000000 f20f1000 f20f11442450 f20f118424a8000000 e8???????? 84c0 }
            // n = 7, score = 400
            //   f20f11a424a0000000     | movsd    qword ptr [esp + 0xa0], xmm4
            //   8d8c2490000000       | lea                 ecx, [esp + 0x90]
            //   f20f1000             | movsd               xmm0, qword ptr [eax]
            //   f20f11442450         | movsd               qword ptr [esp + 0x50], xmm0
            //   f20f118424a8000000     | movsd    qword ptr [esp + 0xa8], xmm0
            //   e8????????           |                     
            //   84c0                 | test                al, al

        $sequence_5 = { ff742428 8d8c24e4000000 50 8d442470 50 e8???????? 83c414 }
            // n = 7, score = 400
            //   ff742428             | push                dword ptr [esp + 0x28]
            //   8d8c24e4000000       | lea                 ecx, [esp + 0xe4]
            //   50                   | push                eax
            //   8d442470             | lea                 eax, [esp + 0x70]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14

        $sequence_6 = { f00fc110 750a 85c9 7406 51 e8???????? 6a05 }
            // n = 7, score = 400
            //   f00fc110             | lock xadd           dword ptr [eax], edx
            //   750a                 | jne                 0xc
            //   85c9                 | test                ecx, ecx
            //   7406                 | je                  8
            //   51                   | push                ecx
            //   e8????????           |                     
            //   6a05                 | push                5

        $sequence_7 = { f781fc00000000000100 750a c7878c00000000000000 8b9fc4000000 b827000000 6689442418 b9fdff0000 }
            // n = 7, score = 400
            //   f781fc00000000000100     | test    dword ptr [ecx + 0xfc], 0x10000
            //   750a                 | jne                 0xc
            //   c7878c00000000000000     | mov    dword ptr [edi + 0x8c], 0
            //   8b9fc4000000         | mov                 ebx, dword ptr [edi + 0xc4]
            //   b827000000           | mov                 eax, 0x27
            //   6689442418           | mov                 word ptr [esp + 0x18], ax
            //   b9fdff0000           | mov                 ecx, 0xfffd

        $sequence_8 = { ff750c ff7508 ff74241c 6a07 51 52 50 }
            // n = 7, score = 400
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff74241c             | push                dword ptr [esp + 0x1c]
            //   6a07                 | push                7
            //   51                   | push                ecx
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_9 = { ff5274 83cfff 8bce 85c0 740c 8d442414 50 }
            // n = 7, score = 400
            //   ff5274               | call                dword ptr [edx + 0x74]
            //   83cfff               | or                  edi, 0xffffffff
            //   8bce                 | mov                 ecx, esi
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe
            //   8d442414             | lea                 eax, [esp + 0x14]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 18505728
}
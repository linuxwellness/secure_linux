rule win_mm_core_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.mm_core."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mm_core"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 53 ffd5 50 ffd6 57 53 }
            // n = 6, score = 200
            //   53                   | push                ebx
            //   ffd5                 | call                ebp
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   57                   | push                edi
            //   53                   | push                ebx

        $sequence_1 = { e8???????? 83c40c 0174241c 8b442424 8b7c2420 50 8d742418 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   0174241c             | add                 dword ptr [esp + 0x1c], esi
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   8b7c2420             | mov                 edi, dword ptr [esp + 0x20]
            //   50                   | push                eax
            //   8d742418             | lea                 esi, [esp + 0x18]

        $sequence_2 = { 8b45dc 8b4db8 034814 894dfc 8b55dc }
            // n = 5, score = 200
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   8b4db8               | mov                 ecx, dword ptr [ebp - 0x48]
            //   034814               | add                 ecx, dword ptr [eax + 0x14]
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]

        $sequence_3 = { 83e01f c1f905 8b0c8d40400110 c1e006 }
            // n = 4, score = 200
            //   83e01f               | and                 eax, 0x1f
            //   c1f905               | sar                 ecx, 5
            //   8b0c8d40400110       | mov                 ecx, dword ptr [ecx*4 + 0x10014040]
            //   c1e006               | shl                 eax, 6

        $sequence_4 = { 7d10 668b4c4310 66890c45c0c00010 40 ebe8 33c0 }
            // n = 6, score = 200
            //   7d10                 | jge                 0x12
            //   668b4c4310           | mov                 cx, word ptr [ebx + eax*2 + 0x10]
            //   66890c45c0c00010     | mov                 word ptr [eax*2 + 0x1000c0c0], cx
            //   40                   | inc                 eax
            //   ebe8                 | jmp                 0xffffffea
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 8975e0 8db148b40010 8975e4 eb2a 8a4601 }
            // n = 5, score = 200
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   8db148b40010         | lea                 esi, [ecx + 0x1000b448]
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   eb2a                 | jmp                 0x2c
            //   8a4601               | mov                 al, byte ptr [esi + 1]

        $sequence_6 = { 6a00 8bd7 52 ff15???????? 5f 8b8c2450030000 33cc }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   8bd7                 | mov                 edx, edi
            //   52                   | push                edx
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   8b8c2450030000       | mov                 ecx, dword ptr [esp + 0x350]
            //   33cc                 | xor                 ecx, esp

        $sequence_7 = { 7507 56 e8???????? 59 8945e4 8b7508 c7465cf0e30010 }
            // n = 7, score = 200
            //   7507                 | jne                 9
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   c7465cf0e30010       | mov                 dword ptr [esi + 0x5c], 0x1000e3f0

        $sequence_8 = { 0f84ab020000 0fb7048d54bc0010 41 6685c0 75e4 32c9 884e06 }
            // n = 7, score = 200
            //   0f84ab020000         | je                  0x2b1
            //   0fb7048d54bc0010     | movzx               eax, word ptr [ecx*4 + 0x1000bc54]
            //   41                   | inc                 ecx
            //   6685c0               | test                ax, ax
            //   75e4                 | jne                 0xffffffe6
            //   32c9                 | xor                 cl, cl
            //   884e06               | mov                 byte ptr [esi + 6], cl

        $sequence_9 = { ff15???????? 56 ff15???????? 5b 55 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   5b                   | pop                 ebx
            //   55                   | push                ebp

    condition:
        7 of them and filesize < 319488
}
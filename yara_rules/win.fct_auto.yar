rule win_fct_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.fct."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fct"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83cfff 897de4 8365fc00 8b049d50614100 8b4de0 }
            // n = 5, score = 100
            //   83cfff               | or                  edi, 0xffffffff
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b049d50614100       | mov                 eax, dword ptr [ebx*4 + 0x416150]
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]

        $sequence_1 = { c1fa06 6bc838 8b049550614100 f644082801 }
            // n = 4, score = 100
            //   c1fa06               | sar                 edx, 6
            //   6bc838               | imul                ecx, eax, 0x38
            //   8b049550614100       | mov                 eax, dword ptr [edx*4 + 0x416150]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1

        $sequence_2 = { 58 6bc000 c7806c59410002000000 6a04 58 6bc000 }
            // n = 6, score = 100
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   c7806c59410002000000     | mov    dword ptr [eax + 0x41596c], 2
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0

        $sequence_3 = { 8bf0 d1fe 6a55 ff34f570204100 ff7508 }
            // n = 5, score = 100
            //   8bf0                 | mov                 esi, eax
            //   d1fe                 | sar                 esi, 1
            //   6a55                 | push                0x55
            //   ff34f570204100       | push                dword ptr [esi*8 + 0x412070]
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_4 = { c745e003000000 e9???????? c745e440324100 ebb8 }
            // n = 4, score = 100
            //   c745e003000000       | mov                 dword ptr [ebp - 0x20], 3
            //   e9????????           |                     
            //   c745e440324100       | mov                 dword ptr [ebp - 0x1c], 0x413240
            //   ebb8                 | jmp                 0xffffffba

        $sequence_5 = { 53 ff15???????? 85c0 740b 8bbd0cfdffff e9???????? }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740b                 | je                  0xd
            //   8bbd0cfdffff         | mov                 edi, dword ptr [ebp - 0x2f4]
            //   e9????????           |                     

        $sequence_6 = { 8b55e8 2bc2 83f801 7221 }
            // n = 4, score = 100
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   2bc2                 | sub                 eax, edx
            //   83f801               | cmp                 eax, 1
            //   7221                 | jb                  0x23

        $sequence_7 = { 6bf838 8955f8 8b149550614100 897df4 8a5c3a29 80fb02 7405 }
            // n = 7, score = 100
            //   6bf838               | imul                edi, eax, 0x38
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   8b149550614100       | mov                 edx, dword ptr [edx*4 + 0x416150]
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi
            //   8a5c3a29             | mov                 bl, byte ptr [edx + edi + 0x29]
            //   80fb02               | cmp                 bl, 2
            //   7405                 | je                  7

        $sequence_8 = { 8b1f 8d049d58634100 8b30 8945fc 90 85f6 }
            // n = 6, score = 100
            //   8b1f                 | mov                 ebx, dword ptr [edi]
            //   8d049d58634100       | lea                 eax, [ebx*4 + 0x416358]
            //   8b30                 | mov                 esi, dword ptr [eax]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   90                   | nop                 
            //   85f6                 | test                esi, esi

        $sequence_9 = { eb07 c745e444324100 8b4508 8bcf 8b7510 c745e001000000 dd00 }
            // n = 7, score = 100
            //   eb07                 | jmp                 9
            //   c745e444324100       | mov                 dword ptr [ebp - 0x1c], 0x413244
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bcf                 | mov                 ecx, edi
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]
            //   c745e001000000       | mov                 dword ptr [ebp - 0x20], 1
            //   dd00                 | fld                 qword ptr [eax]

    condition:
        7 of them and filesize < 204800
}
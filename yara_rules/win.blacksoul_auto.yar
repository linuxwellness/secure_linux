rule win_blacksoul_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.blacksoul."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.blacksoul"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7202 8bc1 8a5dae 3a1c38 }
            // n = 4, score = 200
            //   7202                 | jb                  4
            //   8bc1                 | mov                 eax, ecx
            //   8a5dae               | mov                 bl, byte ptr [ebp - 0x52]
            //   3a1c38               | cmp                 bl, byte ptr [eax + edi]

        $sequence_1 = { 837dec10 8d75d8 7203 8b75d8 ff758c }
            // n = 5, score = 200
            //   837dec10             | cmp                 dword ptr [ebp - 0x14], 0x10
            //   8d75d8               | lea                 esi, [ebp - 0x28]
            //   7203                 | jb                  5
            //   8b75d8               | mov                 esi, dword ptr [ebp - 0x28]
            //   ff758c               | push                dword ptr [ebp - 0x74]

        $sequence_2 = { e8???????? 33db 59 8918 895804 }
            // n = 5, score = 200
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   59                   | pop                 ecx
            //   8918                 | mov                 dword ptr [eax], ebx
            //   895804               | mov                 dword ptr [eax + 4], ebx

        $sequence_3 = { 8b8d6cffffff 8b4598 c60600 8901 }
            // n = 4, score = 200
            //   8b8d6cffffff         | mov                 ecx, dword ptr [ebp - 0x94]
            //   8b4598               | mov                 eax, dword ptr [ebp - 0x68]
            //   c60600               | mov                 byte ptr [esi], 0
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_4 = { ffb578ffffff 8bb56cffffff 53 89b57cffffff }
            // n = 4, score = 200
            //   ffb578ffffff         | push                dword ptr [ebp - 0x88]
            //   8bb56cffffff         | mov                 esi, dword ptr [ebp - 0x94]
            //   53                   | push                ebx
            //   89b57cffffff         | mov                 dword ptr [ebp - 0x84], esi

        $sequence_5 = { 59 84c0 75d1 807d8300 }
            // n = 4, score = 200
            //   59                   | pop                 ecx
            //   84c0                 | test                al, al
            //   75d1                 | jne                 0xffffffd3
            //   807d8300             | cmp                 byte ptr [ebp - 0x7d], 0

        $sequence_6 = { 8d4d88 ff7730 c745fc01000000 8945a0 c645ac00 c645ad00 }
            // n = 6, score = 200
            //   8d4d88               | lea                 ecx, [ebp - 0x78]
            //   ff7730               | push                dword ptr [edi + 0x30]
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   8945a0               | mov                 dword ptr [ebp - 0x60], eax
            //   c645ac00             | mov                 byte ptr [ebp - 0x54], 0
            //   c645ad00             | mov                 byte ptr [ebp - 0x53], 0

        $sequence_7 = { 53 884587 888574ffffff 884586 }
            // n = 4, score = 200
            //   53                   | push                ebx
            //   884587               | mov                 byte ptr [ebp - 0x79], al
            //   888574ffffff         | mov                 byte ptr [ebp - 0x8c], al
            //   884586               | mov                 byte ptr [ebp - 0x7a], al

        $sequence_8 = { 8d4e10 e8???????? 8d4e08 5e e9???????? b8???????? e8???????? }
            // n = 7, score = 200
            //   8d4e10               | lea                 ecx, [esi + 0x10]
            //   e8????????           |                     
            //   8d4e08               | lea                 ecx, [esi + 8]
            //   5e                   | pop                 esi
            //   e9????????           |                     
            //   b8????????           |                     
            //   e8????????           |                     

        $sequence_9 = { 8bbd48ffffff 8d4dc0 c645fc03 e8???????? }
            // n = 4, score = 200
            //   8bbd48ffffff         | mov                 edi, dword ptr [ebp - 0xb8]
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1823640
}
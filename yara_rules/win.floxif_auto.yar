rule win_floxif_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-03-28"
        version = "1"
        description = "Detects win.floxif."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.floxif"
        malpedia_rule_date = "20230328"
        malpedia_hash = "9d2d75cef573c1c2d861f5197df8f563b05a305d"
        malpedia_version = "20230407"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3b450c 7376 8b550c 6bd228 8b4508 03c2 50 }
            // n = 7, score = 100
            //   3b450c               | cmp                 eax, dword ptr [ebp + 0xc]
            //   7376                 | jae                 0x78
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   6bd228               | imul                edx, edx, 0x28
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   03c2                 | add                 eax, edx
            //   50                   | push                eax

        $sequence_1 = { 7534 8b45fc 33c9 8a4801 83f925 7527 6a04 }
            // n = 7, score = 100
            //   7534                 | jne                 0x36
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   33c9                 | xor                 ecx, ecx
            //   8a4801               | mov                 cl, byte ptr [eax + 1]
            //   83f925               | cmp                 ecx, 0x25
            //   7527                 | jne                 0x29
            //   6a04                 | push                4

        $sequence_2 = { c685adfbffff52 c685aefbffff7b c685affbffff74 c685b0fbffff7e c685b1fbffff76 c685b2fbffff7f c685b3fbffff1a }
            // n = 7, score = 100
            //   c685adfbffff52       | mov                 byte ptr [ebp - 0x453], 0x52
            //   c685aefbffff7b       | mov                 byte ptr [ebp - 0x452], 0x7b
            //   c685affbffff74       | mov                 byte ptr [ebp - 0x451], 0x74
            //   c685b0fbffff7e       | mov                 byte ptr [ebp - 0x450], 0x7e
            //   c685b1fbffff76       | mov                 byte ptr [ebp - 0x44f], 0x76
            //   c685b2fbffff7f       | mov                 byte ptr [ebp - 0x44e], 0x7f
            //   c685b3fbffff1a       | mov                 byte ptr [ebp - 0x44d], 0x1a

        $sequence_3 = { c645ef9c c645b400 c645b500 c645b6aa c645b700 c645b809 c645b966 }
            // n = 7, score = 100
            //   c645ef9c             | mov                 byte ptr [ebp - 0x11], 0x9c
            //   c645b400             | mov                 byte ptr [ebp - 0x4c], 0
            //   c645b500             | mov                 byte ptr [ebp - 0x4b], 0
            //   c645b6aa             | mov                 byte ptr [ebp - 0x4a], 0xaa
            //   c645b700             | mov                 byte ptr [ebp - 0x49], 0
            //   c645b809             | mov                 byte ptr [ebp - 0x48], 9
            //   c645b966             | mov                 byte ptr [ebp - 0x47], 0x66

        $sequence_4 = { b9???????? e8???????? 50 ff15???????? 6a04 6a00 8d4dc4 }
            // n = 7, score = 100
            //   b9????????           |                     
            //   e8????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6a04                 | push                4
            //   6a00                 | push                0
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]

        $sequence_5 = { 8d4d84 e8???????? 83f8ff 0f858c000000 6a00 8d45e0 50 }
            // n = 7, score = 100
            //   8d4d84               | lea                 ecx, [ebp - 0x7c]
            //   e8????????           |                     
            //   83f8ff               | cmp                 eax, -1
            //   0f858c000000         | jne                 0x92
            //   6a00                 | push                0
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax

        $sequence_6 = { 8b4df4 81e1ff000000 85c9 0f8519020000 68???????? 8d95ecfeffff 52 }
            // n = 7, score = 100
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   81e1ff000000         | and                 ecx, 0xff
            //   85c9                 | test                ecx, ecx
            //   0f8519020000         | jne                 0x21f
            //   68????????           |                     
            //   8d95ecfeffff         | lea                 edx, [ebp - 0x114]
            //   52                   | push                edx

        $sequence_7 = { 51 894dfc eb12 8b4510 83c004 894510 8b4d08 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   eb12                 | jmp                 0x14
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   83c004               | add                 eax, 4
            //   894510               | mov                 dword ptr [ebp + 0x10], eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_8 = { c645fc00 a1???????? 50 6a00 68ff0f1f00 ff15???????? 8945f8 }
            // n = 7, score = 100
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   a1????????           |                     
            //   50                   | push                eax
            //   6a00                 | push                0
            //   68ff0f1f00           | push                0x1f0fff
            //   ff15????????         |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_9 = { 51 e8???????? 83c404 8d4d08 e8???????? 8d4d18 e8???????? }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8d4d08               | lea                 ecx, [ebp + 8]
            //   e8????????           |                     
            //   8d4d18               | lea                 ecx, [ebp + 0x18]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 352256
}